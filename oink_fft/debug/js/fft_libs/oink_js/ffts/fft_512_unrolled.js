let FFT_FAC_512 = new Float32Array([
1.0000000000000000,0.0000000000000000,0.9999247193336487,0.0122715383768082,0.9996988177299500,0.0245412290096283,0.9993223547935486,0.0368072241544724,
0.9987954497337341,0.0490676760673523,0.9981181025505066,0.0613207370042801,0.9972904324531555,0.0735645666718483,0.9963126182556152,0.0857973098754883,
0.9951847195625305,0.0980171412229538,0.9939069747924805,0.1102222055196762,0.9924795627593994,0.1224106699228287,0.9909026622772217,0.1345807015895844,
0.9891765117645264,0.1467304676771164,0.9873014092445374,0.1588581502437592,0.9852776527404785,0.1709618866443634,0.9831054806709290,0.1830398887395859,
0.9807852506637573,0.1950903236865997,0.9783173799514771,0.2071113735437393,0.9757021069526672,0.2191012352705002,0.9729399681091309,0.2310581207275391,
0.9700312614440918,0.2429801821708679,0.9669764637947083,0.2548656463623047,0.9637760519981384,0.2667127549648285,0.9604305028915405,0.2785196900367737,
0.9569403529167175,0.2902846634387970,0.9533060193061829,0.3020059466362000,0.9495281577110291,0.3136817514896393,0.9456073045730591,0.3253102898597717,
0.9415440559387207,0.3368898332118988,0.9373390078544617,0.3484186828136444,0.9329928159713745,0.3598950505256653,0.9285060763359070,0.3713172078132629,
0.9238795042037964,0.3826834559440613,0.9191138744354248,0.3939920365810394,0.9142097830772400,0.4052413105964661,0.9091680049896240,0.4164295494556427,
0.9039893150329590,0.4275550842285156,0.8986744880676270,0.4386162459850311,0.8932242989540100,0.4496113359928131,0.8876396417617798,0.4605386853218079,
0.8819212913513184,0.4713967144489288,0.8760700821876526,0.4821837544441223,0.8700870275497437,0.4928981661796570,0.8639728426933289,0.5035383701324463,
0.8577286005020142,0.5141027569770813,0.8513551950454712,0.5245897173881531,0.8448535799980164,0.5349976420402527,0.8382247090339661,0.5453249812126160,
0.8314695954322815,0.5555702447891235,0.8245893120765686,0.5657317638397217,0.8175848126411438,0.5758082270622253,0.8104572296142578,0.5857978463172913,
0.8032075166702271,0.5956993103027344,0.7958369255065918,0.6055110096931458,0.7883464694023132,0.6152315735816956,0.7807372212409973,0.6248595118522644,
0.7730104923248291,0.6343932747840881,0.7651672363281250,0.6438315510749817,0.7572088241577148,0.6531728506088257,0.7491363883018494,0.6624158024787903,
0.7409511208534241,0.6715589761734009,0.7326542735099792,0.6806010007858276,0.7242470979690552,0.6895405650138855,0.7157308459281921,0.6983762383460999,
0.7071067690849304,0.7071067690849304,0.6983762383460999,0.7157308459281921,0.6895405650138855,0.7242470383644104,0.6806010007858276,0.7326542735099792,
0.6715589761734009,0.7409511208534241,0.6624157428741455,0.7491363883018494,0.6531728506088257,0.7572088241577148,0.6438315510749817,0.7651672959327698,
0.6343932747840881,0.7730104327201843,0.6248595118522644,0.7807372212409973,0.6152315735816956,0.7883464097976685,0.6055110692977905,0.7958369255065918,
0.5956993103027344,0.8032075166702271,0.5857978463172913,0.8104571700096130,0.5758082270622253,0.8175848126411438,0.5657318234443665,0.8245893120765686,
0.5555702447891235,0.8314695954322815,0.5453249812126160,0.8382247090339661,0.5349976420402527,0.8448535799980164,0.5245896577835083,0.8513551950454712,
0.5141028165817261,0.8577286005020142,0.5035384297370911,0.8639728426933289,0.4928981959819794,0.8700869679450989,0.4821837246417999,0.8760701417922974,
0.4713967740535736,0.8819212317466736,0.4605387151241302,0.8876396417617798,0.4496113061904907,0.8932242989540100,0.4386162757873535,0.8986744284629822,
0.4275551140308380,0.9039893150329590,0.4164295494556427,0.9091680049896240,0.4052412807941437,0.9142097830772400,0.3939920663833618,0.9191138148307800,
0.3826834261417389,0.9238795042037964,0.3713171482086182,0.9285060763359070,0.3598950803279877,0.9329927563667297,0.3484186828136444,0.9373390078544617,
0.3368898332118988,0.9415440559387207,0.3253102302551270,0.9456073641777039,0.3136817514896393,0.9495281577110291,0.3020059466362000,0.9533060193061829,
0.2902846336364746,0.9569403529167175,0.2785197198390961,0.9604305028915405,0.2667127549648285,0.9637760519981384,0.2548656463623047,0.9669764637947083,
0.2429802417755127,0.9700312614440918,0.2310581356287003,0.9729399681091309,0.2191012203693390,0.9757021069526672,0.2071113288402557,0.9783173799514771,
0.1950903534889221,0.9807852506637573,0.1830398887395859,0.9831054806709290,0.1709618568420410,0.9852776527404785,0.1588581949472427,0.9873014092445374,
0.1467304974794388,0.9891765117645264,0.1345806866884232,0.9909026622772217,0.1224106252193451,0.9924795627593994,0.1102222353219986,0.9939069747924805,
0.0980171337723732,0.9951847195625305,0.0857972726225853,0.9963126182556152,0.0735646113753319,0.9972904324531555,0.0613207481801510,0.9981181025505066,
0.0490676499903202,0.9987954497337341,0.0368071645498276,0.9993224143981934,0.0245412550866604,0.9996988177299500,0.0122715290635824,0.9999247193336487,
-0.0000000437113883,1.0000000000000000,-0.0122714973986149,0.9999247193336487,-0.0245412234216928,0.9996988177299500,-0.0368072502315044,0.9993223547935486,
-0.0490676201879978,0.9987954497337341,-0.0613207146525383,0.9981181025505066,-0.0735645741224289,0.9972904324531555,-0.0857973620295525,0.9963126182556152,
-0.0980171039700508,0.9951847195625305,-0.1102222055196762,0.9939069747924805,-0.1224107071757317,0.9924795031547546,-0.1345806568861008,0.9909026622772217,
-0.1467304527759552,0.9891765117645264,-0.1588581651449203,0.9873014092445374,-0.1709619462490082,0.9852776527404785,-0.1830398589372635,0.9831054806709290,
-0.1950903236865997,0.9807852506637573,-0.2071114182472229,0.9783173799514771,-0.2191011905670166,0.9757021665573120,-0.2310580909252167,0.9729399681091309,
-0.2429801970720291,0.9700312614440918,-0.2548657059669495,0.9669764637947083,-0.2667127251625061,0.9637760519981384,-0.2785196900367737,0.9604305028915405,
-0.2902847230434418,0.9569402933120728,-0.3020059168338776,0.9533060789108276,-0.3136817216873169,0.9495281577110291,-0.3253103196620941,0.9456073045730591,
-0.3368898034095764,0.9415440559387207,-0.3484186530113220,0.9373390078544617,-0.3598950505256653,0.9329928159713745,-0.3713172376155853,0.9285060763359070,
-0.3826833963394165,0.9238795638084412,-0.3939920365810394,0.9191138744354248,-0.4052413403987885,0.9142097234725952,-0.4164295196533203,0.9091680049896240,
-0.4275550842285156,0.9039893150329590,-0.4386162459850311,0.8986744284629822,-0.4496113657951355,0.8932242989540100,-0.4605388045310974,0.8876395821571350,
-0.4713966250419617,0.8819212913513184,-0.4821836948394775,0.8760701417922974,-0.4928981661796570,0.8700870275497437,-0.5035383701324463,0.8639728426933289,
-0.5141027569770813,0.8577286005020142,-0.5245897173881531,0.8513551354408264,-0.5349977016448975,0.8448535203933716,-0.5453249216079712,0.8382247686386108,
-0.5555701851844788,0.8314696550369263,-0.5657317638397217,0.8245893120765686,-0.5758081674575806,0.8175848126411438,-0.5857979059219360,0.8104571700096130,
-0.5956993699073792,0.8032075166702271,-0.6055111289024353,0.7958368659019470,-0.6152315139770508,0.7883464694023132,-0.6248594522476196,0.7807372808456421,
-0.6343932747840881,0.7730104923248291,-0.6438315510749817,0.7651672363281250,-0.6531728506088257,0.7572088241577148,-0.6624158024787903,0.7491363286972046,
-0.6715590357780457,0.7409510612487793,-0.6806009411811829,0.7326543331146240,-0.6895405054092407,0.7242470979690552,-0.6983762383460999,0.7157308459281921,
-0.7071067690849304,0.7071067690849304,-0.7157308459281921,0.6983762383460999,-0.7242471575737000,0.6895405054092407,-0.7326543331146240,0.6806009411811829,
-0.7409510612487793,0.6715590357780457,-0.7491363286972046,0.6624158024787903,-0.7572088241577148,0.6531728506088257,-0.7651672959327698,0.6438315510749817,
-0.7730104923248291,0.6343932747840881,-0.7807372808456421,0.6248594522476196,-0.7883464694023132,0.6152315139770508,-0.7958368659019470,0.6055111289024353,
-0.8032075166702271,0.5956993699073792,-0.8104571700096130,0.5857978463172913,-0.8175848126411438,0.5758081674575806,-0.8245893120765686,0.5657317638397217,
-0.8314696550369263,0.5555701851844788,-0.8382246494293213,0.5453251004219055,-0.8448535203933716,0.5349977016448975,-0.8513551950454712,0.5245897173881531,
-0.8577286005020142,0.5141027569770813,-0.8639728426933289,0.5035383701324463,-0.8700870275497437,0.4928981363773346,-0.8760701417922974,0.4821836948394775,
-0.8819212317466736,0.4713968336582184,-0.8876395821571350,0.4605387747287750,-0.8932242989540100,0.4496113657951355,-0.8986744880676270,0.4386162459850311,
-0.9039893150329590,0.4275550544261932,-0.9091680049896240,0.4164294898509979,-0.9142097830772400,0.4052412211894989,-0.9191138148307800,0.3939921259880066,
-0.9238795042037964,0.3826834857463837,-0.9285060763359070,0.3713172376155853,-0.9329928159713745,0.3598950505256653,-0.9373390078544617,0.3484186530113220,
-0.9415441155433655,0.3368898034095764,-0.9456073641777039,0.3253102004528046,-0.9495281577110291,0.3136818408966064,-0.9533060193061829,0.3020060062408447,
-0.9569403529167175,0.2902847230434418,-0.9604305028915405,0.2785196900367737,-0.9637760519981384,0.2667127251625061,-0.9669764637947083,0.2548655867576599,
-0.9700312614440918,0.2429800778627396,-0.9729399085044861,0.2310581952333450,-0.9757021069526672,0.2191012948751450,-0.9783173799514771,0.2071114033460617,
-0.9807853102684021,0.1950903087854385,-0.9831054806709290,0.1830398440361023,-0.9852776527404785,0.1709618121385574,-0.9873014092445374,0.1588580310344696,
-0.9891765117645264,0.1467305719852448,-0.9909026026725769,0.1345807611942291,-0.9924795031547546,0.1224106997251511,-0.9939069747924805,0.1102221980690956,
-0.9951847195625305,0.0980170965194702,-0.9963126182556152,0.0857972279191017,-0.9972904920578003,0.0735644474625587,-0.9981181025505066,0.0613208226859570,
-0.9987954497337341,0.0490677244961262,-0.9993223547935486,0.0368072390556335,-0.9996988177299500,0.0245412103831768,-0.9999247193336487,0.0122714852914214
]);


let iBR512 = new Float32Array(512);
let iP512  = new Float32Array(512);
let _iP512 = new Float32Array(512);
let out512 = new Float32Array(1024);

function fftReal512(realInput) { 
    let size = realInput.length;
    if (size != 512) {
        for (let i = 0; i < 512; i++) {
            iP512[i] = (i < size) ? realInput[i] : 0.0;
        }
        _iP512 = iP512;
    } else {
        _iP512 = realInput;
    }


    //Bit Reversal
    {
        iBR512[0]=_iP512[0]; 
        iBR512[1]=_iP512[256]; 
        iBR512[2]=_iP512[128]; 
        iBR512[3]=_iP512[384]; 
        iBR512[4]=_iP512[64]; 
        iBR512[5]=_iP512[320]; 
        iBR512[6]=_iP512[192]; 
        iBR512[7]=_iP512[448]; 
        iBR512[8]=_iP512[32]; 
        iBR512[9]=_iP512[288]; 
        iBR512[10]=_iP512[160]; 
        iBR512[11]=_iP512[416]; 
        iBR512[12]=_iP512[96]; 
        iBR512[13]=_iP512[352]; 
        iBR512[14]=_iP512[224]; 
        iBR512[15]=_iP512[480]; 
        iBR512[16]=_iP512[16]; 
        iBR512[17]=_iP512[272]; 
        iBR512[18]=_iP512[144]; 
        iBR512[19]=_iP512[400]; 
        iBR512[20]=_iP512[80]; 
        iBR512[21]=_iP512[336]; 
        iBR512[22]=_iP512[208]; 
        iBR512[23]=_iP512[464]; 
        iBR512[24]=_iP512[48]; 
        iBR512[25]=_iP512[304]; 
        iBR512[26]=_iP512[176]; 
        iBR512[27]=_iP512[432]; 
        iBR512[28]=_iP512[112]; 
        iBR512[29]=_iP512[368]; 
        iBR512[30]=_iP512[240]; 
        iBR512[31]=_iP512[496]; 
        iBR512[32]=_iP512[8]; 
        iBR512[33]=_iP512[264]; 
        iBR512[34]=_iP512[136]; 
        iBR512[35]=_iP512[392]; 
        iBR512[36]=_iP512[72]; 
        iBR512[37]=_iP512[328]; 
        iBR512[38]=_iP512[200]; 
        iBR512[39]=_iP512[456]; 
        iBR512[40]=_iP512[40]; 
        iBR512[41]=_iP512[296]; 
        iBR512[42]=_iP512[168]; 
        iBR512[43]=_iP512[424]; 
        iBR512[44]=_iP512[104]; 
        iBR512[45]=_iP512[360]; 
        iBR512[46]=_iP512[232]; 
        iBR512[47]=_iP512[488]; 
        iBR512[48]=_iP512[24]; 
        iBR512[49]=_iP512[280]; 
        iBR512[50]=_iP512[152]; 
        iBR512[51]=_iP512[408]; 
        iBR512[52]=_iP512[88]; 
        iBR512[53]=_iP512[344]; 
        iBR512[54]=_iP512[216]; 
        iBR512[55]=_iP512[472]; 
        iBR512[56]=_iP512[56]; 
        iBR512[57]=_iP512[312]; 
        iBR512[58]=_iP512[184]; 
        iBR512[59]=_iP512[440]; 
        iBR512[60]=_iP512[120]; 
        iBR512[61]=_iP512[376]; 
        iBR512[62]=_iP512[248]; 
        iBR512[63]=_iP512[504]; 
        iBR512[64]=_iP512[4]; 
        iBR512[65]=_iP512[260]; 
        iBR512[66]=_iP512[132]; 
        iBR512[67]=_iP512[388]; 
        iBR512[68]=_iP512[68]; 
        iBR512[69]=_iP512[324]; 
        iBR512[70]=_iP512[196]; 
        iBR512[71]=_iP512[452]; 
        iBR512[72]=_iP512[36]; 
        iBR512[73]=_iP512[292]; 
        iBR512[74]=_iP512[164]; 
        iBR512[75]=_iP512[420]; 
        iBR512[76]=_iP512[100]; 
        iBR512[77]=_iP512[356]; 
        iBR512[78]=_iP512[228]; 
        iBR512[79]=_iP512[484]; 
        iBR512[80]=_iP512[20]; 
        iBR512[81]=_iP512[276]; 
        iBR512[82]=_iP512[148]; 
        iBR512[83]=_iP512[404]; 
        iBR512[84]=_iP512[84]; 
        iBR512[85]=_iP512[340]; 
        iBR512[86]=_iP512[212]; 
        iBR512[87]=_iP512[468]; 
        iBR512[88]=_iP512[52]; 
        iBR512[89]=_iP512[308]; 
        iBR512[90]=_iP512[180]; 
        iBR512[91]=_iP512[436]; 
        iBR512[92]=_iP512[116]; 
        iBR512[93]=_iP512[372]; 
        iBR512[94]=_iP512[244]; 
        iBR512[95]=_iP512[500]; 
        iBR512[96]=_iP512[12]; 
        iBR512[97]=_iP512[268]; 
        iBR512[98]=_iP512[140]; 
        iBR512[99]=_iP512[396]; 
        iBR512[100]=_iP512[76]; 
        iBR512[101]=_iP512[332]; 
        iBR512[102]=_iP512[204]; 
        iBR512[103]=_iP512[460]; 
        iBR512[104]=_iP512[44]; 
        iBR512[105]=_iP512[300]; 
        iBR512[106]=_iP512[172]; 
        iBR512[107]=_iP512[428]; 
        iBR512[108]=_iP512[108]; 
        iBR512[109]=_iP512[364]; 
        iBR512[110]=_iP512[236]; 
        iBR512[111]=_iP512[492]; 
        iBR512[112]=_iP512[28]; 
        iBR512[113]=_iP512[284]; 
        iBR512[114]=_iP512[156]; 
        iBR512[115]=_iP512[412]; 
        iBR512[116]=_iP512[92]; 
        iBR512[117]=_iP512[348]; 
        iBR512[118]=_iP512[220]; 
        iBR512[119]=_iP512[476]; 
        iBR512[120]=_iP512[60]; 
        iBR512[121]=_iP512[316]; 
        iBR512[122]=_iP512[188]; 
        iBR512[123]=_iP512[444]; 
        iBR512[124]=_iP512[124]; 
        iBR512[125]=_iP512[380]; 
        iBR512[126]=_iP512[252]; 
        iBR512[127]=_iP512[508]; 
        iBR512[128]=_iP512[2]; 
        iBR512[129]=_iP512[258]; 
        iBR512[130]=_iP512[130]; 
        iBR512[131]=_iP512[386]; 
        iBR512[132]=_iP512[66]; 
        iBR512[133]=_iP512[322]; 
        iBR512[134]=_iP512[194]; 
        iBR512[135]=_iP512[450]; 
        iBR512[136]=_iP512[34]; 
        iBR512[137]=_iP512[290]; 
        iBR512[138]=_iP512[162]; 
        iBR512[139]=_iP512[418]; 
        iBR512[140]=_iP512[98]; 
        iBR512[141]=_iP512[354]; 
        iBR512[142]=_iP512[226]; 
        iBR512[143]=_iP512[482]; 
        iBR512[144]=_iP512[18]; 
        iBR512[145]=_iP512[274]; 
        iBR512[146]=_iP512[146]; 
        iBR512[147]=_iP512[402]; 
        iBR512[148]=_iP512[82]; 
        iBR512[149]=_iP512[338]; 
        iBR512[150]=_iP512[210]; 
        iBR512[151]=_iP512[466]; 
        iBR512[152]=_iP512[50]; 
        iBR512[153]=_iP512[306]; 
        iBR512[154]=_iP512[178]; 
        iBR512[155]=_iP512[434]; 
        iBR512[156]=_iP512[114]; 
        iBR512[157]=_iP512[370]; 
        iBR512[158]=_iP512[242]; 
        iBR512[159]=_iP512[498]; 
        iBR512[160]=_iP512[10]; 
        iBR512[161]=_iP512[266]; 
        iBR512[162]=_iP512[138]; 
        iBR512[163]=_iP512[394]; 
        iBR512[164]=_iP512[74]; 
        iBR512[165]=_iP512[330]; 
        iBR512[166]=_iP512[202]; 
        iBR512[167]=_iP512[458]; 
        iBR512[168]=_iP512[42]; 
        iBR512[169]=_iP512[298]; 
        iBR512[170]=_iP512[170]; 
        iBR512[171]=_iP512[426]; 
        iBR512[172]=_iP512[106]; 
        iBR512[173]=_iP512[362]; 
        iBR512[174]=_iP512[234]; 
        iBR512[175]=_iP512[490]; 
        iBR512[176]=_iP512[26]; 
        iBR512[177]=_iP512[282]; 
        iBR512[178]=_iP512[154]; 
        iBR512[179]=_iP512[410]; 
        iBR512[180]=_iP512[90]; 
        iBR512[181]=_iP512[346]; 
        iBR512[182]=_iP512[218]; 
        iBR512[183]=_iP512[474]; 
        iBR512[184]=_iP512[58]; 
        iBR512[185]=_iP512[314]; 
        iBR512[186]=_iP512[186]; 
        iBR512[187]=_iP512[442]; 
        iBR512[188]=_iP512[122]; 
        iBR512[189]=_iP512[378]; 
        iBR512[190]=_iP512[250]; 
        iBR512[191]=_iP512[506]; 
        iBR512[192]=_iP512[6]; 
        iBR512[193]=_iP512[262]; 
        iBR512[194]=_iP512[134]; 
        iBR512[195]=_iP512[390]; 
        iBR512[196]=_iP512[70]; 
        iBR512[197]=_iP512[326]; 
        iBR512[198]=_iP512[198]; 
        iBR512[199]=_iP512[454]; 
        iBR512[200]=_iP512[38]; 
        iBR512[201]=_iP512[294]; 
        iBR512[202]=_iP512[166]; 
        iBR512[203]=_iP512[422]; 
        iBR512[204]=_iP512[102]; 
        iBR512[205]=_iP512[358]; 
        iBR512[206]=_iP512[230]; 
        iBR512[207]=_iP512[486]; 
        iBR512[208]=_iP512[22]; 
        iBR512[209]=_iP512[278]; 
        iBR512[210]=_iP512[150]; 
        iBR512[211]=_iP512[406]; 
        iBR512[212]=_iP512[86]; 
        iBR512[213]=_iP512[342]; 
        iBR512[214]=_iP512[214]; 
        iBR512[215]=_iP512[470]; 
        iBR512[216]=_iP512[54]; 
        iBR512[217]=_iP512[310]; 
        iBR512[218]=_iP512[182]; 
        iBR512[219]=_iP512[438]; 
        iBR512[220]=_iP512[118]; 
        iBR512[221]=_iP512[374]; 
        iBR512[222]=_iP512[246]; 
        iBR512[223]=_iP512[502]; 
        iBR512[224]=_iP512[14]; 
        iBR512[225]=_iP512[270]; 
        iBR512[226]=_iP512[142]; 
        iBR512[227]=_iP512[398]; 
        iBR512[228]=_iP512[78]; 
        iBR512[229]=_iP512[334]; 
        iBR512[230]=_iP512[206]; 
        iBR512[231]=_iP512[462]; 
        iBR512[232]=_iP512[46]; 
        iBR512[233]=_iP512[302]; 
        iBR512[234]=_iP512[174]; 
        iBR512[235]=_iP512[430]; 
        iBR512[236]=_iP512[110]; 
        iBR512[237]=_iP512[366]; 
        iBR512[238]=_iP512[238]; 
        iBR512[239]=_iP512[494]; 
        iBR512[240]=_iP512[30]; 
        iBR512[241]=_iP512[286]; 
        iBR512[242]=_iP512[158]; 
        iBR512[243]=_iP512[414]; 
        iBR512[244]=_iP512[94]; 
        iBR512[245]=_iP512[350]; 
        iBR512[246]=_iP512[222]; 
        iBR512[247]=_iP512[478]; 
        iBR512[248]=_iP512[62]; 
        iBR512[249]=_iP512[318]; 
        iBR512[250]=_iP512[190]; 
        iBR512[251]=_iP512[446]; 
        iBR512[252]=_iP512[126]; 
        iBR512[253]=_iP512[382]; 
        iBR512[254]=_iP512[254]; 
        iBR512[255]=_iP512[510]; 
        iBR512[256]=_iP512[1]; 
        iBR512[257]=_iP512[257]; 
        iBR512[258]=_iP512[129]; 
        iBR512[259]=_iP512[385]; 
        iBR512[260]=_iP512[65]; 
        iBR512[261]=_iP512[321]; 
        iBR512[262]=_iP512[193]; 
        iBR512[263]=_iP512[449]; 
        iBR512[264]=_iP512[33]; 
        iBR512[265]=_iP512[289]; 
        iBR512[266]=_iP512[161]; 
        iBR512[267]=_iP512[417]; 
        iBR512[268]=_iP512[97]; 
        iBR512[269]=_iP512[353]; 
        iBR512[270]=_iP512[225]; 
        iBR512[271]=_iP512[481]; 
        iBR512[272]=_iP512[17]; 
        iBR512[273]=_iP512[273]; 
        iBR512[274]=_iP512[145]; 
        iBR512[275]=_iP512[401]; 
        iBR512[276]=_iP512[81]; 
        iBR512[277]=_iP512[337]; 
        iBR512[278]=_iP512[209]; 
        iBR512[279]=_iP512[465]; 
        iBR512[280]=_iP512[49]; 
        iBR512[281]=_iP512[305]; 
        iBR512[282]=_iP512[177]; 
        iBR512[283]=_iP512[433]; 
        iBR512[284]=_iP512[113]; 
        iBR512[285]=_iP512[369]; 
        iBR512[286]=_iP512[241]; 
        iBR512[287]=_iP512[497]; 
        iBR512[288]=_iP512[9]; 
        iBR512[289]=_iP512[265]; 
        iBR512[290]=_iP512[137]; 
        iBR512[291]=_iP512[393]; 
        iBR512[292]=_iP512[73]; 
        iBR512[293]=_iP512[329]; 
        iBR512[294]=_iP512[201]; 
        iBR512[295]=_iP512[457]; 
        iBR512[296]=_iP512[41]; 
        iBR512[297]=_iP512[297]; 
        iBR512[298]=_iP512[169]; 
        iBR512[299]=_iP512[425]; 
        iBR512[300]=_iP512[105]; 
        iBR512[301]=_iP512[361]; 
        iBR512[302]=_iP512[233]; 
        iBR512[303]=_iP512[489]; 
        iBR512[304]=_iP512[25]; 
        iBR512[305]=_iP512[281]; 
        iBR512[306]=_iP512[153]; 
        iBR512[307]=_iP512[409]; 
        iBR512[308]=_iP512[89]; 
        iBR512[309]=_iP512[345]; 
        iBR512[310]=_iP512[217]; 
        iBR512[311]=_iP512[473]; 
        iBR512[312]=_iP512[57]; 
        iBR512[313]=_iP512[313]; 
        iBR512[314]=_iP512[185]; 
        iBR512[315]=_iP512[441]; 
        iBR512[316]=_iP512[121]; 
        iBR512[317]=_iP512[377]; 
        iBR512[318]=_iP512[249]; 
        iBR512[319]=_iP512[505]; 
        iBR512[320]=_iP512[5]; 
        iBR512[321]=_iP512[261]; 
        iBR512[322]=_iP512[133]; 
        iBR512[323]=_iP512[389]; 
        iBR512[324]=_iP512[69]; 
        iBR512[325]=_iP512[325]; 
        iBR512[326]=_iP512[197]; 
        iBR512[327]=_iP512[453]; 
        iBR512[328]=_iP512[37]; 
        iBR512[329]=_iP512[293]; 
        iBR512[330]=_iP512[165]; 
        iBR512[331]=_iP512[421]; 
        iBR512[332]=_iP512[101]; 
        iBR512[333]=_iP512[357]; 
        iBR512[334]=_iP512[229]; 
        iBR512[335]=_iP512[485]; 
        iBR512[336]=_iP512[21]; 
        iBR512[337]=_iP512[277]; 
        iBR512[338]=_iP512[149]; 
        iBR512[339]=_iP512[405]; 
        iBR512[340]=_iP512[85]; 
        iBR512[341]=_iP512[341]; 
        iBR512[342]=_iP512[213]; 
        iBR512[343]=_iP512[469]; 
        iBR512[344]=_iP512[53]; 
        iBR512[345]=_iP512[309]; 
        iBR512[346]=_iP512[181]; 
        iBR512[347]=_iP512[437]; 
        iBR512[348]=_iP512[117]; 
        iBR512[349]=_iP512[373]; 
        iBR512[350]=_iP512[245]; 
        iBR512[351]=_iP512[501]; 
        iBR512[352]=_iP512[13]; 
        iBR512[353]=_iP512[269]; 
        iBR512[354]=_iP512[141]; 
        iBR512[355]=_iP512[397]; 
        iBR512[356]=_iP512[77]; 
        iBR512[357]=_iP512[333]; 
        iBR512[358]=_iP512[205]; 
        iBR512[359]=_iP512[461]; 
        iBR512[360]=_iP512[45]; 
        iBR512[361]=_iP512[301]; 
        iBR512[362]=_iP512[173]; 
        iBR512[363]=_iP512[429]; 
        iBR512[364]=_iP512[109]; 
        iBR512[365]=_iP512[365]; 
        iBR512[366]=_iP512[237]; 
        iBR512[367]=_iP512[493]; 
        iBR512[368]=_iP512[29]; 
        iBR512[369]=_iP512[285]; 
        iBR512[370]=_iP512[157]; 
        iBR512[371]=_iP512[413]; 
        iBR512[372]=_iP512[93]; 
        iBR512[373]=_iP512[349]; 
        iBR512[374]=_iP512[221]; 
        iBR512[375]=_iP512[477]; 
        iBR512[376]=_iP512[61]; 
        iBR512[377]=_iP512[317]; 
        iBR512[378]=_iP512[189]; 
        iBR512[379]=_iP512[445]; 
        iBR512[380]=_iP512[125]; 
        iBR512[381]=_iP512[381]; 
        iBR512[382]=_iP512[253]; 
        iBR512[383]=_iP512[509]; 
        iBR512[384]=_iP512[3]; 
        iBR512[385]=_iP512[259]; 
        iBR512[386]=_iP512[131]; 
        iBR512[387]=_iP512[387]; 
        iBR512[388]=_iP512[67]; 
        iBR512[389]=_iP512[323]; 
        iBR512[390]=_iP512[195]; 
        iBR512[391]=_iP512[451]; 
        iBR512[392]=_iP512[35]; 
        iBR512[393]=_iP512[291]; 
        iBR512[394]=_iP512[163]; 
        iBR512[395]=_iP512[419]; 
        iBR512[396]=_iP512[99]; 
        iBR512[397]=_iP512[355]; 
        iBR512[398]=_iP512[227]; 
        iBR512[399]=_iP512[483]; 
        iBR512[400]=_iP512[19]; 
        iBR512[401]=_iP512[275]; 
        iBR512[402]=_iP512[147]; 
        iBR512[403]=_iP512[403]; 
        iBR512[404]=_iP512[83]; 
        iBR512[405]=_iP512[339]; 
        iBR512[406]=_iP512[211]; 
        iBR512[407]=_iP512[467]; 
        iBR512[408]=_iP512[51]; 
        iBR512[409]=_iP512[307]; 
        iBR512[410]=_iP512[179]; 
        iBR512[411]=_iP512[435]; 
        iBR512[412]=_iP512[115]; 
        iBR512[413]=_iP512[371]; 
        iBR512[414]=_iP512[243]; 
        iBR512[415]=_iP512[499]; 
        iBR512[416]=_iP512[11]; 
        iBR512[417]=_iP512[267]; 
        iBR512[418]=_iP512[139]; 
        iBR512[419]=_iP512[395]; 
        iBR512[420]=_iP512[75]; 
        iBR512[421]=_iP512[331]; 
        iBR512[422]=_iP512[203]; 
        iBR512[423]=_iP512[459]; 
        iBR512[424]=_iP512[43]; 
        iBR512[425]=_iP512[299]; 
        iBR512[426]=_iP512[171]; 
        iBR512[427]=_iP512[427]; 
        iBR512[428]=_iP512[107]; 
        iBR512[429]=_iP512[363]; 
        iBR512[430]=_iP512[235]; 
        iBR512[431]=_iP512[491]; 
        iBR512[432]=_iP512[27]; 
        iBR512[433]=_iP512[283]; 
        iBR512[434]=_iP512[155]; 
        iBR512[435]=_iP512[411]; 
        iBR512[436]=_iP512[91]; 
        iBR512[437]=_iP512[347]; 
        iBR512[438]=_iP512[219]; 
        iBR512[439]=_iP512[475]; 
        iBR512[440]=_iP512[59]; 
        iBR512[441]=_iP512[315]; 
        iBR512[442]=_iP512[187]; 
        iBR512[443]=_iP512[443]; 
        iBR512[444]=_iP512[123]; 
        iBR512[445]=_iP512[379]; 
        iBR512[446]=_iP512[251]; 
        iBR512[447]=_iP512[507]; 
        iBR512[448]=_iP512[7]; 
        iBR512[449]=_iP512[263]; 
        iBR512[450]=_iP512[135]; 
        iBR512[451]=_iP512[391]; 
        iBR512[452]=_iP512[71]; 
        iBR512[453]=_iP512[327]; 
        iBR512[454]=_iP512[199]; 
        iBR512[455]=_iP512[455]; 
        iBR512[456]=_iP512[39]; 
        iBR512[457]=_iP512[295]; 
        iBR512[458]=_iP512[167]; 
        iBR512[459]=_iP512[423]; 
        iBR512[460]=_iP512[103]; 
        iBR512[461]=_iP512[359]; 
        iBR512[462]=_iP512[231]; 
        iBR512[463]=_iP512[487]; 
        iBR512[464]=_iP512[23]; 
        iBR512[465]=_iP512[279]; 
        iBR512[466]=_iP512[151]; 
        iBR512[467]=_iP512[407]; 
        iBR512[468]=_iP512[87]; 
        iBR512[469]=_iP512[343]; 
        iBR512[470]=_iP512[215]; 
        iBR512[471]=_iP512[471]; 
        iBR512[472]=_iP512[55]; 
        iBR512[473]=_iP512[311]; 
        iBR512[474]=_iP512[183]; 
        iBR512[475]=_iP512[439]; 
        iBR512[476]=_iP512[119]; 
        iBR512[477]=_iP512[375]; 
        iBR512[478]=_iP512[247]; 
        iBR512[479]=_iP512[503]; 
        iBR512[480]=_iP512[15]; 
        iBR512[481]=_iP512[271]; 
        iBR512[482]=_iP512[143]; 
        iBR512[483]=_iP512[399]; 
        iBR512[484]=_iP512[79]; 
        iBR512[485]=_iP512[335]; 
        iBR512[486]=_iP512[207]; 
        iBR512[487]=_iP512[463]; 
        iBR512[488]=_iP512[47]; 
        iBR512[489]=_iP512[303]; 
        iBR512[490]=_iP512[175]; 
        iBR512[491]=_iP512[431]; 
        iBR512[492]=_iP512[111]; 
        iBR512[493]=_iP512[367]; 
        iBR512[494]=_iP512[239]; 
        iBR512[495]=_iP512[495]; 
        iBR512[496]=_iP512[31]; 
        iBR512[497]=_iP512[287]; 
        iBR512[498]=_iP512[159]; 
        iBR512[499]=_iP512[415]; 
        iBR512[500]=_iP512[95]; 
        iBR512[501]=_iP512[351]; 
        iBR512[502]=_iP512[223]; 
        iBR512[503]=_iP512[479]; 
        iBR512[504]=_iP512[63]; 
        iBR512[505]=_iP512[319]; 
        iBR512[506]=_iP512[191]; 
        iBR512[507]=_iP512[447]; 
        iBR512[508]=_iP512[127]; 
        iBR512[509]=_iP512[383]; 
        iBR512[510]=_iP512[255]; 
        iBR512[511]=_iP512[511]; 
    }

    ////////////////////////////////////////////////
    ////////////////////////////////////////////////
    // RADIX 4 - FFT step for SIZE 4/8 
    ////////////////////////////////////////////////

    for (int idx = 0, out_idx = 0; idx < 512; idx += 4, out_idx += 8) {
        let x0aRe = iBR512[idx    ];
        let x1aRe = iBR512[idx + 1];
        let x2aRe = iBR512[idx + 2];
        let x3aRe = iBR512[idx + 3];

        let sum1  = x0aRe + x1aRe;
        let sum2  = x2aRe + x3aRe;
        let diff1 = x0aRe - x1aRe;
        let diff2 = x2aRe - x3aRe;

        out512[out_idx]     = sum1 + sum2;
        out512[out_idx + 1] = 0.0;
        out512[out_idx + 2] = diff1;
        out512[out_idx + 3] = diff2;
        out512[out_idx + 4] = sum1 - sum2;
        out512[out_idx + 5] = 0.0;
        out512[out_idx + 6] = diff1;
        out512[out_idx + 7] = -diff2;
    }

    ////////////////////////////////////////////////
    ////////////////////////////////////////////////
    // RADIX 4 - FFT step for SIZE 16/32 
    ////////////////////////////////////////////////

    for (int idx = 0; idx < 1024; idx += 32) {
        float x0aRe = out512[idx     ];
        float x0bRe = out512[idx +  2];
        float x0bIm = out512[idx +  3];
        float x0cRe = out512[idx +  4];

        float x1aRe = out512[idx +  8];
        out512[idx +   8] = x0aRe - x1aRe;
        float x1bRe = out512[idx + 10];
        float x1bIm = out512[idx + 11];
        float x1cRe = out512[idx + 12];

        float x2aRe = out512[idx + 16];
        float x2bRe = out512[idx + 18];
        float x2bIm = out512[idx + 19];
        float x2cRe = out512[idx + 20];

        float x3aRe = out512[idx + 24];
        out512[idx +  24] = x0aRe - x1aRe;
        out512[idx +  25] = x3aRe - x2aRe;
        float x3bRe = out512[idx + 26];
        float x3bIm = out512[idx + 27];
        float x3cRe = out512[idx + 28];
        out512[idx      ] = x0aRe + x1aRe + x2aRe + x3aRe;
        out512[idx +   9] = x2aRe - x3aRe;
        out512[idx +  16] = x0aRe + x1aRe - x2aRe - x3aRe;

        float t1Re_2c = 0.7071067690849304;

        float x2cRe_tRe_2c = x2cRe * t1Re_2c;
        float x3cRe_tRe_2c = x3cRe * t1Re_2c;

        float resReC1 = x0cRe + x2cRe_tRe_2c - x3cRe_tRe_2c;
        out512[idx +  28] =   resReC1;
        out512[idx +   4] =   resReC1;
        float resImC1 = x1cRe + x2cRe_tRe_2c + x3cRe_tRe_2c;
        out512[idx +   5] =   resImC1;
        out512[idx +  29] = - resImC1;
        float resReC2 = x0cRe - x2cRe_tRe_2c + x3cRe_tRe_2c;
        out512[idx +  20] =   resReC2;
        out512[idx +  12] =   resReC2;
        float resImC2 = x1cRe - x2cRe_tRe_2c - x3cRe_tRe_2c;
        out512[idx +  13] = - resImC2;
        out512[idx +  21] =   resImC2;

        float x1dif = (x1bRe-x1bIm);
        float x1sum = (x1bRe+x1bIm);
        float x3dif = (x3bRe-x3bIm);
        float x3sum = (x3bRe+x3bIm);

        float t1Re_1b = 0.7071067690849304;

        float x1dif_tRe_1b = x1dif * t1Re_1b;
        float x1sum_tRe_1b = x1sum * t1Re_1b;

        float t1Re_1b2b = 0.6532814502716064;
        float t1Re_1b2d = 0.2705980539321899;

        float x3dif_tRe_1b2b = x3dif * t1Re_1b2b;
        float x3dif_tRe_1b2d = x3dif * t1Re_1b2d;
        float x3sum_tRe_1b2b = x3sum * t1Re_1b2b;
        float x3sum_tRe_1b2d = x3sum * t1Re_1b2d;

        float t1Re_2b = 0.9238795042037964;
        float t1Re_2d = 0.3826834261417389;

        float tempReB = (x3dif_tRe_1b2b - x3sum_tRe_1b2d + x2bRe*t1Re_2b - x2bIm*t1Re_2d);
        float tempImB = (x3dif_tRe_1b2d + x3sum_tRe_1b2b + x2bRe*t1Re_2d + x2bIm*t1Re_2b);
        float tempReD = (x3dif_tRe_1b2d + x3sum_tRe_1b2b - x2bRe*t1Re_2d - x2bIm*t1Re_2b);
        float tempImD = (x3dif_tRe_1b2b - x3sum_tRe_1b2d - x2bRe*t1Re_2b + x2bIm*t1Re_2d);

        float resReB1 = x0bRe  + x1dif_tRe_1b + tempReB;
        out512[idx +   2] =   resReB1;
        out512[idx +  30] =   resReB1;
        float resReB2 = x0bRe  + x1dif_tRe_1b - tempReB;
        out512[idx +  18] =   resReB2;
        out512[idx +  14] =   resReB2;
        float resReD1 = x0bRe  - x1dif_tRe_1b - tempReD;
        out512[idx +   6] =   resReD1;
        out512[idx +  26] =   resReD1;
        float resReD2 = x0bRe  - x1dif_tRe_1b + tempReD;
        out512[idx +  22] =   resReD2;
        out512[idx +  10] =   resReD2;

        float resImB1 = x0bIm  + x1sum_tRe_1b + tempImB;
        out512[idx +   3] =   resImB1;
        out512[idx +  31] = - resImB1;
        float resImB2 = x0bIm  + x1sum_tRe_1b - tempImB;
        out512[idx +  19] =   resImB2;
        out512[idx +  15] = - resImB2;
        float resImD1 =-x0bIm  + x1sum_tRe_1b - tempImD;
        out512[idx +   7] =   resImD1;
        out512[idx +  27] = - resImD1;
        float resImD2 =-x0bIm  + x1sum_tRe_1b + tempImD;
        out512[idx +  23] =   resImD2;
        out512[idx +  11] = - resImD2;
    }

    ////////////////////////////////////////////////
    ////////////////////////////////////////////////
    // RADIX 2 (unrolled) - FFT step for SIZE 64 
    ////////////////////////////////////////////////
    { 
        let oRe0 = out512[64];
        let oIm0 = out512[65];
        let eRe0 = out512[0];
        let eIm0 = out512[1];
        let resRe0_s = eRe0 + oRe0;
        out512[0] = resRe0_s;
        let resIm0_s = eIm0 + oIm0;
        out512[1] = resIm0_s;
        let resRe0_d = eRe0 - oRe0;
        out512[64] = resRe0_d;
        let resIm0_d = eIm0 - oIm0;
        out512[65] = resIm0_d;
        
        let oRe1 = out512[66];
        let oIm1 = out512[67];
        let eRe1 = out512[2];
        let eIm1 = out512[3];
        let tRe1 = 0.9951847195625305;
        let tRe15 = 0.0980171337723732;
        let resIm1_s = eIm1 + (oRe1 * tRe15 + oIm1 * tRe1);
        out512[3] = resIm1_s;
        out512[127] = -resIm1_s;
        let resRe1_s = eRe1 + (oRe1 * tRe1 - oIm1 * tRe15);
        out512[126] = resRe1_s;
        out512[2] = resRe1_s;
        let resRe31_s = eRe1 - (oRe1 * tRe1 - oIm1 * tRe15);
        out512[66] = resRe31_s;
        out512[62] = resRe31_s;
        let resIm31_s = -eIm1 + (oRe1 * tRe15 + oIm1 * tRe1);
        out512[63] = resIm31_s;
        out512[67] = -resIm31_s;
        
        let oRe2 = out512[68];
        let oIm2 = out512[69];
        let eRe2 = out512[4];
        let eIm2 = out512[5];
        let tRe2 = 0.9807852506637573;
        let tRe14 = 0.1950903534889221;
        let resIm2_s = eIm2 + (oRe2 * tRe14 + oIm2 * tRe2);
        out512[5] = resIm2_s;
        out512[125] = -resIm2_s;
        let resRe2_s = eRe2 + (oRe2 * tRe2 - oIm2 * tRe14);
        out512[124] = resRe2_s;
        out512[4] = resRe2_s;
        let resRe30_s = eRe2 - (oRe2 * tRe2 - oIm2 * tRe14);
        out512[68] = resRe30_s;
        out512[60] = resRe30_s;
        let resIm30_s = -eIm2 + (oRe2 * tRe14 + oIm2 * tRe2);
        out512[61] = resIm30_s;
        out512[69] = -resIm30_s;
        
        let oRe3 = out512[70];
        let oIm3 = out512[71];
        let eRe3 = out512[6];
        let eIm3 = out512[7];
        let tRe3 = 0.9569403529167175;
        let tRe13 = 0.2902846336364746;
        let resIm3_s = eIm3 + (oRe3 * tRe13 + oIm3 * tRe3);
        out512[7] = resIm3_s;
        out512[123] = -resIm3_s;
        let resRe3_s = eRe3 + (oRe3 * tRe3 - oIm3 * tRe13);
        out512[122] = resRe3_s;
        out512[6] = resRe3_s;
        let resRe29_s = eRe3 - (oRe3 * tRe3 - oIm3 * tRe13);
        out512[70] = resRe29_s;
        out512[58] = resRe29_s;
        let resIm29_s = -eIm3 + (oRe3 * tRe13 + oIm3 * tRe3);
        out512[59] = resIm29_s;
        out512[71] = -resIm29_s;
        
        let oRe4 = out512[72];
        let oIm4 = out512[73];
        let eRe4 = out512[8];
        let eIm4 = out512[9];
        let tRe4 = 0.9238795042037964;
        let tRe12 = 0.3826834261417389;
        let resIm4_s = eIm4 + (oRe4 * tRe12 + oIm4 * tRe4);
        out512[9] = resIm4_s;
        out512[121] = -resIm4_s;
        let resRe4_s = eRe4 + (oRe4 * tRe4 - oIm4 * tRe12);
        out512[120] = resRe4_s;
        out512[8] = resRe4_s;
        let resRe28_s = eRe4 - (oRe4 * tRe4 - oIm4 * tRe12);
        out512[72] = resRe28_s;
        out512[56] = resRe28_s;
        let resIm28_s = -eIm4 + (oRe4 * tRe12 + oIm4 * tRe4);
        out512[57] = resIm28_s;
        out512[73] = -resIm28_s;
        
        let oRe5 = out512[74];
        let oIm5 = out512[75];
        let eRe5 = out512[10];
        let eIm5 = out512[11];
        let tRe5 = 0.8819212913513184;
        let tRe11 = 0.4713967740535736;
        let resIm5_s = eIm5 + (oRe5 * tRe11 + oIm5 * tRe5);
        out512[11] = resIm5_s;
        out512[119] = -resIm5_s;
        let resRe5_s = eRe5 + (oRe5 * tRe5 - oIm5 * tRe11);
        out512[118] = resRe5_s;
        out512[10] = resRe5_s;
        let resRe27_s = eRe5 - (oRe5 * tRe5 - oIm5 * tRe11);
        out512[74] = resRe27_s;
        out512[54] = resRe27_s;
        let resIm27_s = -eIm5 + (oRe5 * tRe11 + oIm5 * tRe5);
        out512[55] = resIm27_s;
        out512[75] = -resIm27_s;
        
        let oRe6 = out512[76];
        let oIm6 = out512[77];
        let eRe6 = out512[12];
        let eIm6 = out512[13];
        let tRe6 = 0.8314695954322815;
        let tRe10 = 0.5555702447891235;
        let resIm6_s = eIm6 + (oRe6 * tRe10 + oIm6 * tRe6);
        out512[13] = resIm6_s;
        out512[117] = -resIm6_s;
        let resRe6_s = eRe6 + (oRe6 * tRe6 - oIm6 * tRe10);
        out512[116] = resRe6_s;
        out512[12] = resRe6_s;
        let resRe26_s = eRe6 - (oRe6 * tRe6 - oIm6 * tRe10);
        out512[76] = resRe26_s;
        out512[52] = resRe26_s;
        let resIm26_s = -eIm6 + (oRe6 * tRe10 + oIm6 * tRe6);
        out512[53] = resIm26_s;
        out512[77] = -resIm26_s;
        
        let oRe7 = out512[78];
        let oIm7 = out512[79];
        let eRe7 = out512[14];
        let eIm7 = out512[15];
        let tRe7 = 0.7730104923248291;
        let tRe9 = 0.6343932747840881;
        let resIm7_s = eIm7 + (oRe7 * tRe9 + oIm7 * tRe7);
        out512[15] = resIm7_s;
        out512[115] = -resIm7_s;
        let resRe7_s = eRe7 + (oRe7 * tRe7 - oIm7 * tRe9);
        out512[114] = resRe7_s;
        out512[14] = resRe7_s;
        let resRe25_s = eRe7 - (oRe7 * tRe7 - oIm7 * tRe9);
        out512[78] = resRe25_s;
        out512[50] = resRe25_s;
        let resIm25_s = -eIm7 + (oRe7 * tRe9 + oIm7 * tRe7);
        out512[51] = resIm25_s;
        out512[79] = -resIm25_s;
        
        let oRe8 = out512[80];
        let oIm8 = out512[81];
        let eRe8 = out512[16];
        let eIm8 = out512[17];
        let tRe8 = 0.7071067690849304;
        let resIm8_s = eIm8 + (oRe8 * tRe8 + oIm8 * tRe8);
        out512[17] = resIm8_s;
        out512[113] = -resIm8_s;
        let resRe8_s = eRe8 + (oRe8 * tRe8 - oIm8 * tRe8);
        out512[112] = resRe8_s;
        out512[16] = resRe8_s;
        let resRe24_s = eRe8 - (oRe8 * tRe8 - oIm8 * tRe8);
        out512[80] = resRe24_s;
        out512[48] = resRe24_s;
        let resIm24_s = -eIm8 + (oRe8 * tRe8 + oIm8 * tRe8);
        out512[49] = resIm24_s;
        out512[81] = -resIm24_s;
        
        let oRe9 = out512[82];
        let oIm9 = out512[83];
        let eRe9 = out512[18];
        let eIm9 = out512[19];
        let resIm9_s = eIm9 + (oRe9 * tRe7 + oIm9 * tRe9);
        out512[19] = resIm9_s;
        out512[111] = -resIm9_s;
        let resRe9_s = eRe9 + (oRe9 * tRe9 - oIm9 * tRe7);
        out512[110] = resRe9_s;
        out512[18] = resRe9_s;
        let resRe23_s = eRe9 - (oRe9 * tRe9 - oIm9 * tRe7);
        out512[82] = resRe23_s;
        out512[46] = resRe23_s;
        let resIm23_s = -eIm9 + (oRe9 * tRe7 + oIm9 * tRe9);
        out512[47] = resIm23_s;
        out512[83] = -resIm23_s;
        
        let oRe10 = out512[84];
        let oIm10 = out512[85];
        let eRe10 = out512[20];
        let eIm10 = out512[21];
        let resIm10_s = eIm10 + (oRe10 * tRe6 + oIm10 * tRe10);
        out512[21] = resIm10_s;
        out512[109] = -resIm10_s;
        let resRe10_s = eRe10 + (oRe10 * tRe10 - oIm10 * tRe6);
        out512[108] = resRe10_s;
        out512[20] = resRe10_s;
        let resRe22_s = eRe10 - (oRe10 * tRe10 - oIm10 * tRe6);
        out512[84] = resRe22_s;
        out512[44] = resRe22_s;
        let resIm22_s = -eIm10 + (oRe10 * tRe6 + oIm10 * tRe10);
        out512[45] = resIm22_s;
        out512[85] = -resIm22_s;
        
        let oRe11 = out512[86];
        let oIm11 = out512[87];
        let eRe11 = out512[22];
        let eIm11 = out512[23];
        let resIm11_s = eIm11 + (oRe11 * tRe5 + oIm11 * tRe11);
        out512[23] = resIm11_s;
        out512[107] = -resIm11_s;
        let resRe11_s = eRe11 + (oRe11 * tRe11 - oIm11 * tRe5);
        out512[106] = resRe11_s;
        out512[22] = resRe11_s;
        let resRe21_s = eRe11 - (oRe11 * tRe11 - oIm11 * tRe5);
        out512[86] = resRe21_s;
        out512[42] = resRe21_s;
        let resIm21_s = -eIm11 + (oRe11 * tRe5 + oIm11 * tRe11);
        out512[43] = resIm21_s;
        out512[87] = -resIm21_s;
        
        let oRe12 = out512[88];
        let oIm12 = out512[89];
        let eRe12 = out512[24];
        let eIm12 = out512[25];
        let resIm12_s = eIm12 + (oRe12 * tRe4 + oIm12 * tRe12);
        out512[25] = resIm12_s;
        out512[105] = -resIm12_s;
        let resRe12_s = eRe12 + (oRe12 * tRe12 - oIm12 * tRe4);
        out512[104] = resRe12_s;
        out512[24] = resRe12_s;
        let resRe20_s = eRe12 - (oRe12 * tRe12 - oIm12 * tRe4);
        out512[88] = resRe20_s;
        out512[40] = resRe20_s;
        let resIm20_s = -eIm12 + (oRe12 * tRe4 + oIm12 * tRe12);
        out512[41] = resIm20_s;
        out512[89] = -resIm20_s;
        
        let oRe13 = out512[90];
        let oIm13 = out512[91];
        let eRe13 = out512[26];
        let eIm13 = out512[27];
        let resIm13_s = eIm13 + (oRe13 * tRe3 + oIm13 * tRe13);
        out512[27] = resIm13_s;
        out512[103] = -resIm13_s;
        let resRe13_s = eRe13 + (oRe13 * tRe13 - oIm13 * tRe3);
        out512[102] = resRe13_s;
        out512[26] = resRe13_s;
        let resRe19_s = eRe13 - (oRe13 * tRe13 - oIm13 * tRe3);
        out512[90] = resRe19_s;
        out512[38] = resRe19_s;
        let resIm19_s = -eIm13 + (oRe13 * tRe3 + oIm13 * tRe13);
        out512[39] = resIm19_s;
        out512[91] = -resIm19_s;
        
        let oRe14 = out512[92];
        let oIm14 = out512[93];
        let eRe14 = out512[28];
        let eIm14 = out512[29];
        let resIm14_s = eIm14 + (oRe14 * tRe2 + oIm14 * tRe14);
        out512[29] = resIm14_s;
        out512[101] = -resIm14_s;
        let resRe14_s = eRe14 + (oRe14 * tRe14 - oIm14 * tRe2);
        out512[100] = resRe14_s;
        out512[28] = resRe14_s;
        let resRe18_s = eRe14 - (oRe14 * tRe14 - oIm14 * tRe2);
        out512[92] = resRe18_s;
        out512[36] = resRe18_s;
        let resIm18_s = -eIm14 + (oRe14 * tRe2 + oIm14 * tRe14);
        out512[37] = resIm18_s;
        out512[93] = -resIm18_s;
        
        let oRe15 = out512[94];
        let oIm15 = out512[95];
        let eRe15 = out512[30];
        let eIm15 = out512[31];
        let resIm15_s = eIm15 + (oRe15 * tRe1 + oIm15 * tRe15);
        out512[31] = resIm15_s;
        out512[99] = -resIm15_s;
        let resRe15_s = eRe15 + (oRe15 * tRe15 - oIm15 * tRe1);
        out512[98] = resRe15_s;
        out512[30] = resRe15_s;
        let resRe17_s = eRe15 - (oRe15 * tRe15 - oIm15 * tRe1);
        out512[94] = resRe17_s;
        out512[34] = resRe17_s;
        let resIm17_s = -eIm15 + (oRe15 * tRe1 + oIm15 * tRe15);
        out512[35] = resIm17_s;
        out512[95] = -resIm17_s;
        
        let oRe16 = out512[96];
        let oIm16 = out512[97];
        let eRe16 = out512[32];
        let eIm16 = out512[33];
        let resIm16_s = eIm16 + oRe16;
        out512[33] = resIm16_s;
        out512[97] = -resIm16_s;
        let resRe16_s = eRe16 - oIm16;
        out512[96] = resRe16_s;
        out512[32] = resRe16_s;
        
        let oRe128 = out512[192];
        let oIm128 = out512[193];
        let eRe128 = out512[128];
        let eIm128 = out512[129];
        let resRe128_s = eRe128 + oRe128;
        out512[128] = resRe128_s;
        let resIm128_s = eIm128 + oIm128;
        out512[129] = resIm128_s;
        let resRe128_d = eRe128 - oRe128;
        out512[192] = resRe128_d;
        let resIm128_d = eIm128 - oIm128;
        out512[193] = resIm128_d;
        
        let oRe129 = out512[194];
        let oIm129 = out512[195];
        let eRe129 = out512[130];
        let eIm129 = out512[131];
        let tRe129 = 0.9951847195625305;
        let tRe143 = 0.0980171337723732;
        let resIm129_s = eIm129 + (oRe129 * tRe143 + oIm129 * tRe129);
        out512[131] = resIm129_s;
        out512[255] = -resIm129_s;
        let resRe129_s = eRe129 + (oRe129 * tRe129 - oIm129 * tRe143);
        out512[254] = resRe129_s;
        out512[130] = resRe129_s;
        let resRe159_s = eRe129 - (oRe129 * tRe129 - oIm129 * tRe143);
        out512[194] = resRe159_s;
        out512[190] = resRe159_s;
        let resIm159_s = -eIm129 + (oRe129 * tRe143 + oIm129 * tRe129);
        out512[191] = resIm159_s;
        out512[195] = -resIm159_s;
        
        let oRe130 = out512[196];
        let oIm130 = out512[197];
        let eRe130 = out512[132];
        let eIm130 = out512[133];
        let tRe130 = 0.9807852506637573;
        let tRe142 = 0.1950903534889221;
        let resIm130_s = eIm130 + (oRe130 * tRe142 + oIm130 * tRe130);
        out512[133] = resIm130_s;
        out512[253] = -resIm130_s;
        let resRe130_s = eRe130 + (oRe130 * tRe130 - oIm130 * tRe142);
        out512[252] = resRe130_s;
        out512[132] = resRe130_s;
        let resRe158_s = eRe130 - (oRe130 * tRe130 - oIm130 * tRe142);
        out512[196] = resRe158_s;
        out512[188] = resRe158_s;
        let resIm158_s = -eIm130 + (oRe130 * tRe142 + oIm130 * tRe130);
        out512[189] = resIm158_s;
        out512[197] = -resIm158_s;
        
        let oRe131 = out512[198];
        let oIm131 = out512[199];
        let eRe131 = out512[134];
        let eIm131 = out512[135];
        let tRe131 = 0.9569403529167175;
        let tRe141 = 0.2902846336364746;
        let resIm131_s = eIm131 + (oRe131 * tRe141 + oIm131 * tRe131);
        out512[135] = resIm131_s;
        out512[251] = -resIm131_s;
        let resRe131_s = eRe131 + (oRe131 * tRe131 - oIm131 * tRe141);
        out512[250] = resRe131_s;
        out512[134] = resRe131_s;
        let resRe157_s = eRe131 - (oRe131 * tRe131 - oIm131 * tRe141);
        out512[198] = resRe157_s;
        out512[186] = resRe157_s;
        let resIm157_s = -eIm131 + (oRe131 * tRe141 + oIm131 * tRe131);
        out512[187] = resIm157_s;
        out512[199] = -resIm157_s;
        
        let oRe132 = out512[200];
        let oIm132 = out512[201];
        let eRe132 = out512[136];
        let eIm132 = out512[137];
        let tRe132 = 0.9238795042037964;
        let tRe140 = 0.3826834261417389;
        let resIm132_s = eIm132 + (oRe132 * tRe140 + oIm132 * tRe132);
        out512[137] = resIm132_s;
        out512[249] = -resIm132_s;
        let resRe132_s = eRe132 + (oRe132 * tRe132 - oIm132 * tRe140);
        out512[248] = resRe132_s;
        out512[136] = resRe132_s;
        let resRe156_s = eRe132 - (oRe132 * tRe132 - oIm132 * tRe140);
        out512[200] = resRe156_s;
        out512[184] = resRe156_s;
        let resIm156_s = -eIm132 + (oRe132 * tRe140 + oIm132 * tRe132);
        out512[185] = resIm156_s;
        out512[201] = -resIm156_s;
        
        let oRe133 = out512[202];
        let oIm133 = out512[203];
        let eRe133 = out512[138];
        let eIm133 = out512[139];
        let tRe133 = 0.8819212913513184;
        let tRe139 = 0.4713967740535736;
        let resIm133_s = eIm133 + (oRe133 * tRe139 + oIm133 * tRe133);
        out512[139] = resIm133_s;
        out512[247] = -resIm133_s;
        let resRe133_s = eRe133 + (oRe133 * tRe133 - oIm133 * tRe139);
        out512[246] = resRe133_s;
        out512[138] = resRe133_s;
        let resRe155_s = eRe133 - (oRe133 * tRe133 - oIm133 * tRe139);
        out512[202] = resRe155_s;
        out512[182] = resRe155_s;
        let resIm155_s = -eIm133 + (oRe133 * tRe139 + oIm133 * tRe133);
        out512[183] = resIm155_s;
        out512[203] = -resIm155_s;
        
        let oRe134 = out512[204];
        let oIm134 = out512[205];
        let eRe134 = out512[140];
        let eIm134 = out512[141];
        let tRe134 = 0.8314695954322815;
        let tRe138 = 0.5555702447891235;
        let resIm134_s = eIm134 + (oRe134 * tRe138 + oIm134 * tRe134);
        out512[141] = resIm134_s;
        out512[245] = -resIm134_s;
        let resRe134_s = eRe134 + (oRe134 * tRe134 - oIm134 * tRe138);
        out512[244] = resRe134_s;
        out512[140] = resRe134_s;
        let resRe154_s = eRe134 - (oRe134 * tRe134 - oIm134 * tRe138);
        out512[204] = resRe154_s;
        out512[180] = resRe154_s;
        let resIm154_s = -eIm134 + (oRe134 * tRe138 + oIm134 * tRe134);
        out512[181] = resIm154_s;
        out512[205] = -resIm154_s;
        
        let oRe135 = out512[206];
        let oIm135 = out512[207];
        let eRe135 = out512[142];
        let eIm135 = out512[143];
        let tRe135 = 0.7730104923248291;
        let tRe137 = 0.6343932747840881;
        let resIm135_s = eIm135 + (oRe135 * tRe137 + oIm135 * tRe135);
        out512[143] = resIm135_s;
        out512[243] = -resIm135_s;
        let resRe135_s = eRe135 + (oRe135 * tRe135 - oIm135 * tRe137);
        out512[242] = resRe135_s;
        out512[142] = resRe135_s;
        let resRe153_s = eRe135 - (oRe135 * tRe135 - oIm135 * tRe137);
        out512[206] = resRe153_s;
        out512[178] = resRe153_s;
        let resIm153_s = -eIm135 + (oRe135 * tRe137 + oIm135 * tRe135);
        out512[179] = resIm153_s;
        out512[207] = -resIm153_s;
        
        let oRe136 = out512[208];
        let oIm136 = out512[209];
        let eRe136 = out512[144];
        let eIm136 = out512[145];
        let tRe136 = 0.7071067690849304;
        let resIm136_s = eIm136 + (oRe136 * tRe136 + oIm136 * tRe136);
        out512[145] = resIm136_s;
        out512[241] = -resIm136_s;
        let resRe136_s = eRe136 + (oRe136 * tRe136 - oIm136 * tRe136);
        out512[240] = resRe136_s;
        out512[144] = resRe136_s;
        let resRe152_s = eRe136 - (oRe136 * tRe136 - oIm136 * tRe136);
        out512[208] = resRe152_s;
        out512[176] = resRe152_s;
        let resIm152_s = -eIm136 + (oRe136 * tRe136 + oIm136 * tRe136);
        out512[177] = resIm152_s;
        out512[209] = -resIm152_s;
        
        let oRe137 = out512[210];
        let oIm137 = out512[211];
        let eRe137 = out512[146];
        let eIm137 = out512[147];
        let resIm137_s = eIm137 + (oRe137 * tRe135 + oIm137 * tRe137);
        out512[147] = resIm137_s;
        out512[239] = -resIm137_s;
        let resRe137_s = eRe137 + (oRe137 * tRe137 - oIm137 * tRe135);
        out512[238] = resRe137_s;
        out512[146] = resRe137_s;
        let resRe151_s = eRe137 - (oRe137 * tRe137 - oIm137 * tRe135);
        out512[210] = resRe151_s;
        out512[174] = resRe151_s;
        let resIm151_s = -eIm137 + (oRe137 * tRe135 + oIm137 * tRe137);
        out512[175] = resIm151_s;
        out512[211] = -resIm151_s;
        
        let oRe138 = out512[212];
        let oIm138 = out512[213];
        let eRe138 = out512[148];
        let eIm138 = out512[149];
        let resIm138_s = eIm138 + (oRe138 * tRe134 + oIm138 * tRe138);
        out512[149] = resIm138_s;
        out512[237] = -resIm138_s;
        let resRe138_s = eRe138 + (oRe138 * tRe138 - oIm138 * tRe134);
        out512[236] = resRe138_s;
        out512[148] = resRe138_s;
        let resRe150_s = eRe138 - (oRe138 * tRe138 - oIm138 * tRe134);
        out512[212] = resRe150_s;
        out512[172] = resRe150_s;
        let resIm150_s = -eIm138 + (oRe138 * tRe134 + oIm138 * tRe138);
        out512[173] = resIm150_s;
        out512[213] = -resIm150_s;
        
        let oRe139 = out512[214];
        let oIm139 = out512[215];
        let eRe139 = out512[150];
        let eIm139 = out512[151];
        let resIm139_s = eIm139 + (oRe139 * tRe133 + oIm139 * tRe139);
        out512[151] = resIm139_s;
        out512[235] = -resIm139_s;
        let resRe139_s = eRe139 + (oRe139 * tRe139 - oIm139 * tRe133);
        out512[234] = resRe139_s;
        out512[150] = resRe139_s;
        let resRe149_s = eRe139 - (oRe139 * tRe139 - oIm139 * tRe133);
        out512[214] = resRe149_s;
        out512[170] = resRe149_s;
        let resIm149_s = -eIm139 + (oRe139 * tRe133 + oIm139 * tRe139);
        out512[171] = resIm149_s;
        out512[215] = -resIm149_s;
        
        let oRe140 = out512[216];
        let oIm140 = out512[217];
        let eRe140 = out512[152];
        let eIm140 = out512[153];
        let resIm140_s = eIm140 + (oRe140 * tRe132 + oIm140 * tRe140);
        out512[153] = resIm140_s;
        out512[233] = -resIm140_s;
        let resRe140_s = eRe140 + (oRe140 * tRe140 - oIm140 * tRe132);
        out512[232] = resRe140_s;
        out512[152] = resRe140_s;
        let resRe148_s = eRe140 - (oRe140 * tRe140 - oIm140 * tRe132);
        out512[216] = resRe148_s;
        out512[168] = resRe148_s;
        let resIm148_s = -eIm140 + (oRe140 * tRe132 + oIm140 * tRe140);
        out512[169] = resIm148_s;
        out512[217] = -resIm148_s;
        
        let oRe141 = out512[218];
        let oIm141 = out512[219];
        let eRe141 = out512[154];
        let eIm141 = out512[155];
        let resIm141_s = eIm141 + (oRe141 * tRe131 + oIm141 * tRe141);
        out512[155] = resIm141_s;
        out512[231] = -resIm141_s;
        let resRe141_s = eRe141 + (oRe141 * tRe141 - oIm141 * tRe131);
        out512[230] = resRe141_s;
        out512[154] = resRe141_s;
        let resRe147_s = eRe141 - (oRe141 * tRe141 - oIm141 * tRe131);
        out512[218] = resRe147_s;
        out512[166] = resRe147_s;
        let resIm147_s = -eIm141 + (oRe141 * tRe131 + oIm141 * tRe141);
        out512[167] = resIm147_s;
        out512[219] = -resIm147_s;
        
        let oRe142 = out512[220];
        let oIm142 = out512[221];
        let eRe142 = out512[156];
        let eIm142 = out512[157];
        let resIm142_s = eIm142 + (oRe142 * tRe130 + oIm142 * tRe142);
        out512[157] = resIm142_s;
        out512[229] = -resIm142_s;
        let resRe142_s = eRe142 + (oRe142 * tRe142 - oIm142 * tRe130);
        out512[228] = resRe142_s;
        out512[156] = resRe142_s;
        let resRe146_s = eRe142 - (oRe142 * tRe142 - oIm142 * tRe130);
        out512[220] = resRe146_s;
        out512[164] = resRe146_s;
        let resIm146_s = -eIm142 + (oRe142 * tRe130 + oIm142 * tRe142);
        out512[165] = resIm146_s;
        out512[221] = -resIm146_s;
        
        let oRe143 = out512[222];
        let oIm143 = out512[223];
        let eRe143 = out512[158];
        let eIm143 = out512[159];
        let resIm143_s = eIm143 + (oRe143 * tRe129 + oIm143 * tRe143);
        out512[159] = resIm143_s;
        out512[227] = -resIm143_s;
        let resRe143_s = eRe143 + (oRe143 * tRe143 - oIm143 * tRe129);
        out512[226] = resRe143_s;
        out512[158] = resRe143_s;
        let resRe145_s = eRe143 - (oRe143 * tRe143 - oIm143 * tRe129);
        out512[222] = resRe145_s;
        out512[162] = resRe145_s;
        let resIm145_s = -eIm143 + (oRe143 * tRe129 + oIm143 * tRe143);
        out512[163] = resIm145_s;
        out512[223] = -resIm145_s;
        
        let oRe144 = out512[224];
        let oIm144 = out512[225];
        let eRe144 = out512[160];
        let eIm144 = out512[161];
        let resIm144_s = eIm144 + oRe144;
        out512[161] = resIm144_s;
        out512[225] = -resIm144_s;
        let resRe144_s = eRe144 - oIm144;
        out512[224] = resRe144_s;
        out512[160] = resRe144_s;
        
        let oRe256 = out512[320];
        let oIm256 = out512[321];
        let eRe256 = out512[256];
        let eIm256 = out512[257];
        let resRe256_s = eRe256 + oRe256;
        out512[256] = resRe256_s;
        let resIm256_s = eIm256 + oIm256;
        out512[257] = resIm256_s;
        let resRe256_d = eRe256 - oRe256;
        out512[320] = resRe256_d;
        let resIm256_d = eIm256 - oIm256;
        out512[321] = resIm256_d;
        
        let oRe257 = out512[322];
        let oIm257 = out512[323];
        let eRe257 = out512[258];
        let eIm257 = out512[259];
        let tRe257 = 0.9951847195625305;
        let tRe271 = 0.0980171337723732;
        let resIm257_s = eIm257 + (oRe257 * tRe271 + oIm257 * tRe257);
        out512[259] = resIm257_s;
        out512[383] = -resIm257_s;
        let resRe257_s = eRe257 + (oRe257 * tRe257 - oIm257 * tRe271);
        out512[382] = resRe257_s;
        out512[258] = resRe257_s;
        let resRe287_s = eRe257 - (oRe257 * tRe257 - oIm257 * tRe271);
        out512[322] = resRe287_s;
        out512[318] = resRe287_s;
        let resIm287_s = -eIm257 + (oRe257 * tRe271 + oIm257 * tRe257);
        out512[319] = resIm287_s;
        out512[323] = -resIm287_s;
        
        let oRe258 = out512[324];
        let oIm258 = out512[325];
        let eRe258 = out512[260];
        let eIm258 = out512[261];
        let tRe258 = 0.9807852506637573;
        let tRe270 = 0.1950903534889221;
        let resIm258_s = eIm258 + (oRe258 * tRe270 + oIm258 * tRe258);
        out512[261] = resIm258_s;
        out512[381] = -resIm258_s;
        let resRe258_s = eRe258 + (oRe258 * tRe258 - oIm258 * tRe270);
        out512[380] = resRe258_s;
        out512[260] = resRe258_s;
        let resRe286_s = eRe258 - (oRe258 * tRe258 - oIm258 * tRe270);
        out512[324] = resRe286_s;
        out512[316] = resRe286_s;
        let resIm286_s = -eIm258 + (oRe258 * tRe270 + oIm258 * tRe258);
        out512[317] = resIm286_s;
        out512[325] = -resIm286_s;
        
        let oRe259 = out512[326];
        let oIm259 = out512[327];
        let eRe259 = out512[262];
        let eIm259 = out512[263];
        let tRe259 = 0.9569403529167175;
        let tRe269 = 0.2902846336364746;
        let resIm259_s = eIm259 + (oRe259 * tRe269 + oIm259 * tRe259);
        out512[263] = resIm259_s;
        out512[379] = -resIm259_s;
        let resRe259_s = eRe259 + (oRe259 * tRe259 - oIm259 * tRe269);
        out512[378] = resRe259_s;
        out512[262] = resRe259_s;
        let resRe285_s = eRe259 - (oRe259 * tRe259 - oIm259 * tRe269);
        out512[326] = resRe285_s;
        out512[314] = resRe285_s;
        let resIm285_s = -eIm259 + (oRe259 * tRe269 + oIm259 * tRe259);
        out512[315] = resIm285_s;
        out512[327] = -resIm285_s;
        
        let oRe260 = out512[328];
        let oIm260 = out512[329];
        let eRe260 = out512[264];
        let eIm260 = out512[265];
        let tRe260 = 0.9238795042037964;
        let tRe268 = 0.3826834261417389;
        let resIm260_s = eIm260 + (oRe260 * tRe268 + oIm260 * tRe260);
        out512[265] = resIm260_s;
        out512[377] = -resIm260_s;
        let resRe260_s = eRe260 + (oRe260 * tRe260 - oIm260 * tRe268);
        out512[376] = resRe260_s;
        out512[264] = resRe260_s;
        let resRe284_s = eRe260 - (oRe260 * tRe260 - oIm260 * tRe268);
        out512[328] = resRe284_s;
        out512[312] = resRe284_s;
        let resIm284_s = -eIm260 + (oRe260 * tRe268 + oIm260 * tRe260);
        out512[313] = resIm284_s;
        out512[329] = -resIm284_s;
        
        let oRe261 = out512[330];
        let oIm261 = out512[331];
        let eRe261 = out512[266];
        let eIm261 = out512[267];
        let tRe261 = 0.8819212913513184;
        let tRe267 = 0.4713967740535736;
        let resIm261_s = eIm261 + (oRe261 * tRe267 + oIm261 * tRe261);
        out512[267] = resIm261_s;
        out512[375] = -resIm261_s;
        let resRe261_s = eRe261 + (oRe261 * tRe261 - oIm261 * tRe267);
        out512[374] = resRe261_s;
        out512[266] = resRe261_s;
        let resRe283_s = eRe261 - (oRe261 * tRe261 - oIm261 * tRe267);
        out512[330] = resRe283_s;
        out512[310] = resRe283_s;
        let resIm283_s = -eIm261 + (oRe261 * tRe267 + oIm261 * tRe261);
        out512[311] = resIm283_s;
        out512[331] = -resIm283_s;
        
        let oRe262 = out512[332];
        let oIm262 = out512[333];
        let eRe262 = out512[268];
        let eIm262 = out512[269];
        let tRe262 = 0.8314695954322815;
        let tRe266 = 0.5555702447891235;
        let resIm262_s = eIm262 + (oRe262 * tRe266 + oIm262 * tRe262);
        out512[269] = resIm262_s;
        out512[373] = -resIm262_s;
        let resRe262_s = eRe262 + (oRe262 * tRe262 - oIm262 * tRe266);
        out512[372] = resRe262_s;
        out512[268] = resRe262_s;
        let resRe282_s = eRe262 - (oRe262 * tRe262 - oIm262 * tRe266);
        out512[332] = resRe282_s;
        out512[308] = resRe282_s;
        let resIm282_s = -eIm262 + (oRe262 * tRe266 + oIm262 * tRe262);
        out512[309] = resIm282_s;
        out512[333] = -resIm282_s;
        
        let oRe263 = out512[334];
        let oIm263 = out512[335];
        let eRe263 = out512[270];
        let eIm263 = out512[271];
        let tRe263 = 0.7730104923248291;
        let tRe265 = 0.6343932747840881;
        let resIm263_s = eIm263 + (oRe263 * tRe265 + oIm263 * tRe263);
        out512[271] = resIm263_s;
        out512[371] = -resIm263_s;
        let resRe263_s = eRe263 + (oRe263 * tRe263 - oIm263 * tRe265);
        out512[370] = resRe263_s;
        out512[270] = resRe263_s;
        let resRe281_s = eRe263 - (oRe263 * tRe263 - oIm263 * tRe265);
        out512[334] = resRe281_s;
        out512[306] = resRe281_s;
        let resIm281_s = -eIm263 + (oRe263 * tRe265 + oIm263 * tRe263);
        out512[307] = resIm281_s;
        out512[335] = -resIm281_s;
        
        let oRe264 = out512[336];
        let oIm264 = out512[337];
        let eRe264 = out512[272];
        let eIm264 = out512[273];
        let tRe264 = 0.7071067690849304;
        let resIm264_s = eIm264 + (oRe264 * tRe264 + oIm264 * tRe264);
        out512[273] = resIm264_s;
        out512[369] = -resIm264_s;
        let resRe264_s = eRe264 + (oRe264 * tRe264 - oIm264 * tRe264);
        out512[368] = resRe264_s;
        out512[272] = resRe264_s;
        let resRe280_s = eRe264 - (oRe264 * tRe264 - oIm264 * tRe264);
        out512[336] = resRe280_s;
        out512[304] = resRe280_s;
        let resIm280_s = -eIm264 + (oRe264 * tRe264 + oIm264 * tRe264);
        out512[305] = resIm280_s;
        out512[337] = -resIm280_s;
        
        let oRe265 = out512[338];
        let oIm265 = out512[339];
        let eRe265 = out512[274];
        let eIm265 = out512[275];
        let resIm265_s = eIm265 + (oRe265 * tRe263 + oIm265 * tRe265);
        out512[275] = resIm265_s;
        out512[367] = -resIm265_s;
        let resRe265_s = eRe265 + (oRe265 * tRe265 - oIm265 * tRe263);
        out512[366] = resRe265_s;
        out512[274] = resRe265_s;
        let resRe279_s = eRe265 - (oRe265 * tRe265 - oIm265 * tRe263);
        out512[338] = resRe279_s;
        out512[302] = resRe279_s;
        let resIm279_s = -eIm265 + (oRe265 * tRe263 + oIm265 * tRe265);
        out512[303] = resIm279_s;
        out512[339] = -resIm279_s;
        
        let oRe266 = out512[340];
        let oIm266 = out512[341];
        let eRe266 = out512[276];
        let eIm266 = out512[277];
        let resIm266_s = eIm266 + (oRe266 * tRe262 + oIm266 * tRe266);
        out512[277] = resIm266_s;
        out512[365] = -resIm266_s;
        let resRe266_s = eRe266 + (oRe266 * tRe266 - oIm266 * tRe262);
        out512[364] = resRe266_s;
        out512[276] = resRe266_s;
        let resRe278_s = eRe266 - (oRe266 * tRe266 - oIm266 * tRe262);
        out512[340] = resRe278_s;
        out512[300] = resRe278_s;
        let resIm278_s = -eIm266 + (oRe266 * tRe262 + oIm266 * tRe266);
        out512[301] = resIm278_s;
        out512[341] = -resIm278_s;
        
        let oRe267 = out512[342];
        let oIm267 = out512[343];
        let eRe267 = out512[278];
        let eIm267 = out512[279];
        let resIm267_s = eIm267 + (oRe267 * tRe261 + oIm267 * tRe267);
        out512[279] = resIm267_s;
        out512[363] = -resIm267_s;
        let resRe267_s = eRe267 + (oRe267 * tRe267 - oIm267 * tRe261);
        out512[362] = resRe267_s;
        out512[278] = resRe267_s;
        let resRe277_s = eRe267 - (oRe267 * tRe267 - oIm267 * tRe261);
        out512[342] = resRe277_s;
        out512[298] = resRe277_s;
        let resIm277_s = -eIm267 + (oRe267 * tRe261 + oIm267 * tRe267);
        out512[299] = resIm277_s;
        out512[343] = -resIm277_s;
        
        let oRe268 = out512[344];
        let oIm268 = out512[345];
        let eRe268 = out512[280];
        let eIm268 = out512[281];
        let resIm268_s = eIm268 + (oRe268 * tRe260 + oIm268 * tRe268);
        out512[281] = resIm268_s;
        out512[361] = -resIm268_s;
        let resRe268_s = eRe268 + (oRe268 * tRe268 - oIm268 * tRe260);
        out512[360] = resRe268_s;
        out512[280] = resRe268_s;
        let resRe276_s = eRe268 - (oRe268 * tRe268 - oIm268 * tRe260);
        out512[344] = resRe276_s;
        out512[296] = resRe276_s;
        let resIm276_s = -eIm268 + (oRe268 * tRe260 + oIm268 * tRe268);
        out512[297] = resIm276_s;
        out512[345] = -resIm276_s;
        
        let oRe269 = out512[346];
        let oIm269 = out512[347];
        let eRe269 = out512[282];
        let eIm269 = out512[283];
        let resIm269_s = eIm269 + (oRe269 * tRe259 + oIm269 * tRe269);
        out512[283] = resIm269_s;
        out512[359] = -resIm269_s;
        let resRe269_s = eRe269 + (oRe269 * tRe269 - oIm269 * tRe259);
        out512[358] = resRe269_s;
        out512[282] = resRe269_s;
        let resRe275_s = eRe269 - (oRe269 * tRe269 - oIm269 * tRe259);
        out512[346] = resRe275_s;
        out512[294] = resRe275_s;
        let resIm275_s = -eIm269 + (oRe269 * tRe259 + oIm269 * tRe269);
        out512[295] = resIm275_s;
        out512[347] = -resIm275_s;
        
        let oRe270 = out512[348];
        let oIm270 = out512[349];
        let eRe270 = out512[284];
        let eIm270 = out512[285];
        let resIm270_s = eIm270 + (oRe270 * tRe258 + oIm270 * tRe270);
        out512[285] = resIm270_s;
        out512[357] = -resIm270_s;
        let resRe270_s = eRe270 + (oRe270 * tRe270 - oIm270 * tRe258);
        out512[356] = resRe270_s;
        out512[284] = resRe270_s;
        let resRe274_s = eRe270 - (oRe270 * tRe270 - oIm270 * tRe258);
        out512[348] = resRe274_s;
        out512[292] = resRe274_s;
        let resIm274_s = -eIm270 + (oRe270 * tRe258 + oIm270 * tRe270);
        out512[293] = resIm274_s;
        out512[349] = -resIm274_s;
        
        let oRe271 = out512[350];
        let oIm271 = out512[351];
        let eRe271 = out512[286];
        let eIm271 = out512[287];
        let resIm271_s = eIm271 + (oRe271 * tRe257 + oIm271 * tRe271);
        out512[287] = resIm271_s;
        out512[355] = -resIm271_s;
        let resRe271_s = eRe271 + (oRe271 * tRe271 - oIm271 * tRe257);
        out512[354] = resRe271_s;
        out512[286] = resRe271_s;
        let resRe273_s = eRe271 - (oRe271 * tRe271 - oIm271 * tRe257);
        out512[350] = resRe273_s;
        out512[290] = resRe273_s;
        let resIm273_s = -eIm271 + (oRe271 * tRe257 + oIm271 * tRe271);
        out512[291] = resIm273_s;
        out512[351] = -resIm273_s;
        
        let oRe272 = out512[352];
        let oIm272 = out512[353];
        let eRe272 = out512[288];
        let eIm272 = out512[289];
        let resIm272_s = eIm272 + oRe272;
        out512[289] = resIm272_s;
        out512[353] = -resIm272_s;
        let resRe272_s = eRe272 - oIm272;
        out512[352] = resRe272_s;
        out512[288] = resRe272_s;
        
        let oRe384 = out512[448];
        let oIm384 = out512[449];
        let eRe384 = out512[384];
        let eIm384 = out512[385];
        let resRe384_s = eRe384 + oRe384;
        out512[384] = resRe384_s;
        let resIm384_s = eIm384 + oIm384;
        out512[385] = resIm384_s;
        let resRe384_d = eRe384 - oRe384;
        out512[448] = resRe384_d;
        let resIm384_d = eIm384 - oIm384;
        out512[449] = resIm384_d;
        
        let oRe385 = out512[450];
        let oIm385 = out512[451];
        let eRe385 = out512[386];
        let eIm385 = out512[387];
        let tRe385 = 0.9951847195625305;
        let tRe399 = 0.0980171337723732;
        let resIm385_s = eIm385 + (oRe385 * tRe399 + oIm385 * tRe385);
        out512[387] = resIm385_s;
        out512[511] = -resIm385_s;
        let resRe385_s = eRe385 + (oRe385 * tRe385 - oIm385 * tRe399);
        out512[510] = resRe385_s;
        out512[386] = resRe385_s;
        let resRe415_s = eRe385 - (oRe385 * tRe385 - oIm385 * tRe399);
        out512[450] = resRe415_s;
        out512[446] = resRe415_s;
        let resIm415_s = -eIm385 + (oRe385 * tRe399 + oIm385 * tRe385);
        out512[447] = resIm415_s;
        out512[451] = -resIm415_s;
        
        let oRe386 = out512[452];
        let oIm386 = out512[453];
        let eRe386 = out512[388];
        let eIm386 = out512[389];
        let tRe386 = 0.9807852506637573;
        let tRe398 = 0.1950903534889221;
        let resIm386_s = eIm386 + (oRe386 * tRe398 + oIm386 * tRe386);
        out512[389] = resIm386_s;
        out512[509] = -resIm386_s;
        let resRe386_s = eRe386 + (oRe386 * tRe386 - oIm386 * tRe398);
        out512[508] = resRe386_s;
        out512[388] = resRe386_s;
        let resRe414_s = eRe386 - (oRe386 * tRe386 - oIm386 * tRe398);
        out512[452] = resRe414_s;
        out512[444] = resRe414_s;
        let resIm414_s = -eIm386 + (oRe386 * tRe398 + oIm386 * tRe386);
        out512[445] = resIm414_s;
        out512[453] = -resIm414_s;
        
        let oRe387 = out512[454];
        let oIm387 = out512[455];
        let eRe387 = out512[390];
        let eIm387 = out512[391];
        let tRe387 = 0.9569403529167175;
        let tRe397 = 0.2902846336364746;
        let resIm387_s = eIm387 + (oRe387 * tRe397 + oIm387 * tRe387);
        out512[391] = resIm387_s;
        out512[507] = -resIm387_s;
        let resRe387_s = eRe387 + (oRe387 * tRe387 - oIm387 * tRe397);
        out512[506] = resRe387_s;
        out512[390] = resRe387_s;
        let resRe413_s = eRe387 - (oRe387 * tRe387 - oIm387 * tRe397);
        out512[454] = resRe413_s;
        out512[442] = resRe413_s;
        let resIm413_s = -eIm387 + (oRe387 * tRe397 + oIm387 * tRe387);
        out512[443] = resIm413_s;
        out512[455] = -resIm413_s;
        
        let oRe388 = out512[456];
        let oIm388 = out512[457];
        let eRe388 = out512[392];
        let eIm388 = out512[393];
        let tRe388 = 0.9238795042037964;
        let tRe396 = 0.3826834261417389;
        let resIm388_s = eIm388 + (oRe388 * tRe396 + oIm388 * tRe388);
        out512[393] = resIm388_s;
        out512[505] = -resIm388_s;
        let resRe388_s = eRe388 + (oRe388 * tRe388 - oIm388 * tRe396);
        out512[504] = resRe388_s;
        out512[392] = resRe388_s;
        let resRe412_s = eRe388 - (oRe388 * tRe388 - oIm388 * tRe396);
        out512[456] = resRe412_s;
        out512[440] = resRe412_s;
        let resIm412_s = -eIm388 + (oRe388 * tRe396 + oIm388 * tRe388);
        out512[441] = resIm412_s;
        out512[457] = -resIm412_s;
        
        let oRe389 = out512[458];
        let oIm389 = out512[459];
        let eRe389 = out512[394];
        let eIm389 = out512[395];
        let tRe389 = 0.8819212913513184;
        let tRe395 = 0.4713967740535736;
        let resIm389_s = eIm389 + (oRe389 * tRe395 + oIm389 * tRe389);
        out512[395] = resIm389_s;
        out512[503] = -resIm389_s;
        let resRe389_s = eRe389 + (oRe389 * tRe389 - oIm389 * tRe395);
        out512[502] = resRe389_s;
        out512[394] = resRe389_s;
        let resRe411_s = eRe389 - (oRe389 * tRe389 - oIm389 * tRe395);
        out512[458] = resRe411_s;
        out512[438] = resRe411_s;
        let resIm411_s = -eIm389 + (oRe389 * tRe395 + oIm389 * tRe389);
        out512[439] = resIm411_s;
        out512[459] = -resIm411_s;
        
        let oRe390 = out512[460];
        let oIm390 = out512[461];
        let eRe390 = out512[396];
        let eIm390 = out512[397];
        let tRe390 = 0.8314695954322815;
        let tRe394 = 0.5555702447891235;
        let resIm390_s = eIm390 + (oRe390 * tRe394 + oIm390 * tRe390);
        out512[397] = resIm390_s;
        out512[501] = -resIm390_s;
        let resRe390_s = eRe390 + (oRe390 * tRe390 - oIm390 * tRe394);
        out512[500] = resRe390_s;
        out512[396] = resRe390_s;
        let resRe410_s = eRe390 - (oRe390 * tRe390 - oIm390 * tRe394);
        out512[460] = resRe410_s;
        out512[436] = resRe410_s;
        let resIm410_s = -eIm390 + (oRe390 * tRe394 + oIm390 * tRe390);
        out512[437] = resIm410_s;
        out512[461] = -resIm410_s;
        
        let oRe391 = out512[462];
        let oIm391 = out512[463];
        let eRe391 = out512[398];
        let eIm391 = out512[399];
        let tRe391 = 0.7730104923248291;
        let tRe393 = 0.6343932747840881;
        let resIm391_s = eIm391 + (oRe391 * tRe393 + oIm391 * tRe391);
        out512[399] = resIm391_s;
        out512[499] = -resIm391_s;
        let resRe391_s = eRe391 + (oRe391 * tRe391 - oIm391 * tRe393);
        out512[498] = resRe391_s;
        out512[398] = resRe391_s;
        let resRe409_s = eRe391 - (oRe391 * tRe391 - oIm391 * tRe393);
        out512[462] = resRe409_s;
        out512[434] = resRe409_s;
        let resIm409_s = -eIm391 + (oRe391 * tRe393 + oIm391 * tRe391);
        out512[435] = resIm409_s;
        out512[463] = -resIm409_s;
        
        let oRe392 = out512[464];
        let oIm392 = out512[465];
        let eRe392 = out512[400];
        let eIm392 = out512[401];
        let tRe392 = 0.7071067690849304;
        let resIm392_s = eIm392 + (oRe392 * tRe392 + oIm392 * tRe392);
        out512[401] = resIm392_s;
        out512[497] = -resIm392_s;
        let resRe392_s = eRe392 + (oRe392 * tRe392 - oIm392 * tRe392);
        out512[496] = resRe392_s;
        out512[400] = resRe392_s;
        let resRe408_s = eRe392 - (oRe392 * tRe392 - oIm392 * tRe392);
        out512[464] = resRe408_s;
        out512[432] = resRe408_s;
        let resIm408_s = -eIm392 + (oRe392 * tRe392 + oIm392 * tRe392);
        out512[433] = resIm408_s;
        out512[465] = -resIm408_s;
        
        let oRe393 = out512[466];
        let oIm393 = out512[467];
        let eRe393 = out512[402];
        let eIm393 = out512[403];
        let resIm393_s = eIm393 + (oRe393 * tRe391 + oIm393 * tRe393);
        out512[403] = resIm393_s;
        out512[495] = -resIm393_s;
        let resRe393_s = eRe393 + (oRe393 * tRe393 - oIm393 * tRe391);
        out512[494] = resRe393_s;
        out512[402] = resRe393_s;
        let resRe407_s = eRe393 - (oRe393 * tRe393 - oIm393 * tRe391);
        out512[466] = resRe407_s;
        out512[430] = resRe407_s;
        let resIm407_s = -eIm393 + (oRe393 * tRe391 + oIm393 * tRe393);
        out512[431] = resIm407_s;
        out512[467] = -resIm407_s;
        
        let oRe394 = out512[468];
        let oIm394 = out512[469];
        let eRe394 = out512[404];
        let eIm394 = out512[405];
        let resIm394_s = eIm394 + (oRe394 * tRe390 + oIm394 * tRe394);
        out512[405] = resIm394_s;
        out512[493] = -resIm394_s;
        let resRe394_s = eRe394 + (oRe394 * tRe394 - oIm394 * tRe390);
        out512[492] = resRe394_s;
        out512[404] = resRe394_s;
        let resRe406_s = eRe394 - (oRe394 * tRe394 - oIm394 * tRe390);
        out512[468] = resRe406_s;
        out512[428] = resRe406_s;
        let resIm406_s = -eIm394 + (oRe394 * tRe390 + oIm394 * tRe394);
        out512[429] = resIm406_s;
        out512[469] = -resIm406_s;
        
        let oRe395 = out512[470];
        let oIm395 = out512[471];
        let eRe395 = out512[406];
        let eIm395 = out512[407];
        let resIm395_s = eIm395 + (oRe395 * tRe389 + oIm395 * tRe395);
        out512[407] = resIm395_s;
        out512[491] = -resIm395_s;
        let resRe395_s = eRe395 + (oRe395 * tRe395 - oIm395 * tRe389);
        out512[490] = resRe395_s;
        out512[406] = resRe395_s;
        let resRe405_s = eRe395 - (oRe395 * tRe395 - oIm395 * tRe389);
        out512[470] = resRe405_s;
        out512[426] = resRe405_s;
        let resIm405_s = -eIm395 + (oRe395 * tRe389 + oIm395 * tRe395);
        out512[427] = resIm405_s;
        out512[471] = -resIm405_s;
        
        let oRe396 = out512[472];
        let oIm396 = out512[473];
        let eRe396 = out512[408];
        let eIm396 = out512[409];
        let resIm396_s = eIm396 + (oRe396 * tRe388 + oIm396 * tRe396);
        out512[409] = resIm396_s;
        out512[489] = -resIm396_s;
        let resRe396_s = eRe396 + (oRe396 * tRe396 - oIm396 * tRe388);
        out512[488] = resRe396_s;
        out512[408] = resRe396_s;
        let resRe404_s = eRe396 - (oRe396 * tRe396 - oIm396 * tRe388);
        out512[472] = resRe404_s;
        out512[424] = resRe404_s;
        let resIm404_s = -eIm396 + (oRe396 * tRe388 + oIm396 * tRe396);
        out512[425] = resIm404_s;
        out512[473] = -resIm404_s;
        
        let oRe397 = out512[474];
        let oIm397 = out512[475];
        let eRe397 = out512[410];
        let eIm397 = out512[411];
        let resIm397_s = eIm397 + (oRe397 * tRe387 + oIm397 * tRe397);
        out512[411] = resIm397_s;
        out512[487] = -resIm397_s;
        let resRe397_s = eRe397 + (oRe397 * tRe397 - oIm397 * tRe387);
        out512[486] = resRe397_s;
        out512[410] = resRe397_s;
        let resRe403_s = eRe397 - (oRe397 * tRe397 - oIm397 * tRe387);
        out512[474] = resRe403_s;
        out512[422] = resRe403_s;
        let resIm403_s = -eIm397 + (oRe397 * tRe387 + oIm397 * tRe397);
        out512[423] = resIm403_s;
        out512[475] = -resIm403_s;
        
        let oRe398 = out512[476];
        let oIm398 = out512[477];
        let eRe398 = out512[412];
        let eIm398 = out512[413];
        let resIm398_s = eIm398 + (oRe398 * tRe386 + oIm398 * tRe398);
        out512[413] = resIm398_s;
        out512[485] = -resIm398_s;
        let resRe398_s = eRe398 + (oRe398 * tRe398 - oIm398 * tRe386);
        out512[484] = resRe398_s;
        out512[412] = resRe398_s;
        let resRe402_s = eRe398 - (oRe398 * tRe398 - oIm398 * tRe386);
        out512[476] = resRe402_s;
        out512[420] = resRe402_s;
        let resIm402_s = -eIm398 + (oRe398 * tRe386 + oIm398 * tRe398);
        out512[421] = resIm402_s;
        out512[477] = -resIm402_s;
        
        let oRe399 = out512[478];
        let oIm399 = out512[479];
        let eRe399 = out512[414];
        let eIm399 = out512[415];
        let resIm399_s = eIm399 + (oRe399 * tRe385 + oIm399 * tRe399);
        out512[415] = resIm399_s;
        out512[483] = -resIm399_s;
        let resRe399_s = eRe399 + (oRe399 * tRe399 - oIm399 * tRe385);
        out512[482] = resRe399_s;
        out512[414] = resRe399_s;
        let resRe401_s = eRe399 - (oRe399 * tRe399 - oIm399 * tRe385);
        out512[478] = resRe401_s;
        out512[418] = resRe401_s;
        let resIm401_s = -eIm399 + (oRe399 * tRe385 + oIm399 * tRe399);
        out512[419] = resIm401_s;
        out512[479] = -resIm401_s;
        
        let oRe400 = out512[480];
        let oIm400 = out512[481];
        let eRe400 = out512[416];
        let eIm400 = out512[417];
        let resIm400_s = eIm400 + oRe400;
        out512[417] = resIm400_s;
        out512[481] = -resIm400_s;
        let resRe400_s = eRe400 - oIm400;
        out512[480] = resRe400_s;
        out512[416] = resRe400_s;
        
        let oRe512 = out512[576];
        let oIm512 = out512[577];
        let eRe512 = out512[512];
        let eIm512 = out512[513];
        let resRe512_s = eRe512 + oRe512;
        out512[512] = resRe512_s;
        let resIm512_s = eIm512 + oIm512;
        out512[513] = resIm512_s;
        let resRe512_d = eRe512 - oRe512;
        out512[576] = resRe512_d;
        let resIm512_d = eIm512 - oIm512;
        out512[577] = resIm512_d;
        
        let oRe513 = out512[578];
        let oIm513 = out512[579];
        let eRe513 = out512[514];
        let eIm513 = out512[515];
        let tRe513 = 0.9951847195625305;
        let tRe527 = 0.0980171337723732;
        let resIm513_s = eIm513 + (oRe513 * tRe527 + oIm513 * tRe513);
        out512[515] = resIm513_s;
        out512[639] = -resIm513_s;
        let resRe513_s = eRe513 + (oRe513 * tRe513 - oIm513 * tRe527);
        out512[638] = resRe513_s;
        out512[514] = resRe513_s;
        let resRe543_s = eRe513 - (oRe513 * tRe513 - oIm513 * tRe527);
        out512[578] = resRe543_s;
        out512[574] = resRe543_s;
        let resIm543_s = -eIm513 + (oRe513 * tRe527 + oIm513 * tRe513);
        out512[575] = resIm543_s;
        out512[579] = -resIm543_s;
        
        let oRe514 = out512[580];
        let oIm514 = out512[581];
        let eRe514 = out512[516];
        let eIm514 = out512[517];
        let tRe514 = 0.9807852506637573;
        let tRe526 = 0.1950903534889221;
        let resIm514_s = eIm514 + (oRe514 * tRe526 + oIm514 * tRe514);
        out512[517] = resIm514_s;
        out512[637] = -resIm514_s;
        let resRe514_s = eRe514 + (oRe514 * tRe514 - oIm514 * tRe526);
        out512[636] = resRe514_s;
        out512[516] = resRe514_s;
        let resRe542_s = eRe514 - (oRe514 * tRe514 - oIm514 * tRe526);
        out512[580] = resRe542_s;
        out512[572] = resRe542_s;
        let resIm542_s = -eIm514 + (oRe514 * tRe526 + oIm514 * tRe514);
        out512[573] = resIm542_s;
        out512[581] = -resIm542_s;
        
        let oRe515 = out512[582];
        let oIm515 = out512[583];
        let eRe515 = out512[518];
        let eIm515 = out512[519];
        let tRe515 = 0.9569403529167175;
        let tRe525 = 0.2902846336364746;
        let resIm515_s = eIm515 + (oRe515 * tRe525 + oIm515 * tRe515);
        out512[519] = resIm515_s;
        out512[635] = -resIm515_s;
        let resRe515_s = eRe515 + (oRe515 * tRe515 - oIm515 * tRe525);
        out512[634] = resRe515_s;
        out512[518] = resRe515_s;
        let resRe541_s = eRe515 - (oRe515 * tRe515 - oIm515 * tRe525);
        out512[582] = resRe541_s;
        out512[570] = resRe541_s;
        let resIm541_s = -eIm515 + (oRe515 * tRe525 + oIm515 * tRe515);
        out512[571] = resIm541_s;
        out512[583] = -resIm541_s;
        
        let oRe516 = out512[584];
        let oIm516 = out512[585];
        let eRe516 = out512[520];
        let eIm516 = out512[521];
        let tRe516 = 0.9238795042037964;
        let tRe524 = 0.3826834261417389;
        let resIm516_s = eIm516 + (oRe516 * tRe524 + oIm516 * tRe516);
        out512[521] = resIm516_s;
        out512[633] = -resIm516_s;
        let resRe516_s = eRe516 + (oRe516 * tRe516 - oIm516 * tRe524);
        out512[632] = resRe516_s;
        out512[520] = resRe516_s;
        let resRe540_s = eRe516 - (oRe516 * tRe516 - oIm516 * tRe524);
        out512[584] = resRe540_s;
        out512[568] = resRe540_s;
        let resIm540_s = -eIm516 + (oRe516 * tRe524 + oIm516 * tRe516);
        out512[569] = resIm540_s;
        out512[585] = -resIm540_s;
        
        let oRe517 = out512[586];
        let oIm517 = out512[587];
        let eRe517 = out512[522];
        let eIm517 = out512[523];
        let tRe517 = 0.8819212913513184;
        let tRe523 = 0.4713967740535736;
        let resIm517_s = eIm517 + (oRe517 * tRe523 + oIm517 * tRe517);
        out512[523] = resIm517_s;
        out512[631] = -resIm517_s;
        let resRe517_s = eRe517 + (oRe517 * tRe517 - oIm517 * tRe523);
        out512[630] = resRe517_s;
        out512[522] = resRe517_s;
        let resRe539_s = eRe517 - (oRe517 * tRe517 - oIm517 * tRe523);
        out512[586] = resRe539_s;
        out512[566] = resRe539_s;
        let resIm539_s = -eIm517 + (oRe517 * tRe523 + oIm517 * tRe517);
        out512[567] = resIm539_s;
        out512[587] = -resIm539_s;
        
        let oRe518 = out512[588];
        let oIm518 = out512[589];
        let eRe518 = out512[524];
        let eIm518 = out512[525];
        let tRe518 = 0.8314695954322815;
        let tRe522 = 0.5555702447891235;
        let resIm518_s = eIm518 + (oRe518 * tRe522 + oIm518 * tRe518);
        out512[525] = resIm518_s;
        out512[629] = -resIm518_s;
        let resRe518_s = eRe518 + (oRe518 * tRe518 - oIm518 * tRe522);
        out512[628] = resRe518_s;
        out512[524] = resRe518_s;
        let resRe538_s = eRe518 - (oRe518 * tRe518 - oIm518 * tRe522);
        out512[588] = resRe538_s;
        out512[564] = resRe538_s;
        let resIm538_s = -eIm518 + (oRe518 * tRe522 + oIm518 * tRe518);
        out512[565] = resIm538_s;
        out512[589] = -resIm538_s;
        
        let oRe519 = out512[590];
        let oIm519 = out512[591];
        let eRe519 = out512[526];
        let eIm519 = out512[527];
        let tRe519 = 0.7730104923248291;
        let tRe521 = 0.6343932747840881;
        let resIm519_s = eIm519 + (oRe519 * tRe521 + oIm519 * tRe519);
        out512[527] = resIm519_s;
        out512[627] = -resIm519_s;
        let resRe519_s = eRe519 + (oRe519 * tRe519 - oIm519 * tRe521);
        out512[626] = resRe519_s;
        out512[526] = resRe519_s;
        let resRe537_s = eRe519 - (oRe519 * tRe519 - oIm519 * tRe521);
        out512[590] = resRe537_s;
        out512[562] = resRe537_s;
        let resIm537_s = -eIm519 + (oRe519 * tRe521 + oIm519 * tRe519);
        out512[563] = resIm537_s;
        out512[591] = -resIm537_s;
        
        let oRe520 = out512[592];
        let oIm520 = out512[593];
        let eRe520 = out512[528];
        let eIm520 = out512[529];
        let tRe520 = 0.7071067690849304;
        let resIm520_s = eIm520 + (oRe520 * tRe520 + oIm520 * tRe520);
        out512[529] = resIm520_s;
        out512[625] = -resIm520_s;
        let resRe520_s = eRe520 + (oRe520 * tRe520 - oIm520 * tRe520);
        out512[624] = resRe520_s;
        out512[528] = resRe520_s;
        let resRe536_s = eRe520 - (oRe520 * tRe520 - oIm520 * tRe520);
        out512[592] = resRe536_s;
        out512[560] = resRe536_s;
        let resIm536_s = -eIm520 + (oRe520 * tRe520 + oIm520 * tRe520);
        out512[561] = resIm536_s;
        out512[593] = -resIm536_s;
        
        let oRe521 = out512[594];
        let oIm521 = out512[595];
        let eRe521 = out512[530];
        let eIm521 = out512[531];
        let resIm521_s = eIm521 + (oRe521 * tRe519 + oIm521 * tRe521);
        out512[531] = resIm521_s;
        out512[623] = -resIm521_s;
        let resRe521_s = eRe521 + (oRe521 * tRe521 - oIm521 * tRe519);
        out512[622] = resRe521_s;
        out512[530] = resRe521_s;
        let resRe535_s = eRe521 - (oRe521 * tRe521 - oIm521 * tRe519);
        out512[594] = resRe535_s;
        out512[558] = resRe535_s;
        let resIm535_s = -eIm521 + (oRe521 * tRe519 + oIm521 * tRe521);
        out512[559] = resIm535_s;
        out512[595] = -resIm535_s;
        
        let oRe522 = out512[596];
        let oIm522 = out512[597];
        let eRe522 = out512[532];
        let eIm522 = out512[533];
        let resIm522_s = eIm522 + (oRe522 * tRe518 + oIm522 * tRe522);
        out512[533] = resIm522_s;
        out512[621] = -resIm522_s;
        let resRe522_s = eRe522 + (oRe522 * tRe522 - oIm522 * tRe518);
        out512[620] = resRe522_s;
        out512[532] = resRe522_s;
        let resRe534_s = eRe522 - (oRe522 * tRe522 - oIm522 * tRe518);
        out512[596] = resRe534_s;
        out512[556] = resRe534_s;
        let resIm534_s = -eIm522 + (oRe522 * tRe518 + oIm522 * tRe522);
        out512[557] = resIm534_s;
        out512[597] = -resIm534_s;
        
        let oRe523 = out512[598];
        let oIm523 = out512[599];
        let eRe523 = out512[534];
        let eIm523 = out512[535];
        let resIm523_s = eIm523 + (oRe523 * tRe517 + oIm523 * tRe523);
        out512[535] = resIm523_s;
        out512[619] = -resIm523_s;
        let resRe523_s = eRe523 + (oRe523 * tRe523 - oIm523 * tRe517);
        out512[618] = resRe523_s;
        out512[534] = resRe523_s;
        let resRe533_s = eRe523 - (oRe523 * tRe523 - oIm523 * tRe517);
        out512[598] = resRe533_s;
        out512[554] = resRe533_s;
        let resIm533_s = -eIm523 + (oRe523 * tRe517 + oIm523 * tRe523);
        out512[555] = resIm533_s;
        out512[599] = -resIm533_s;
        
        let oRe524 = out512[600];
        let oIm524 = out512[601];
        let eRe524 = out512[536];
        let eIm524 = out512[537];
        let resIm524_s = eIm524 + (oRe524 * tRe516 + oIm524 * tRe524);
        out512[537] = resIm524_s;
        out512[617] = -resIm524_s;
        let resRe524_s = eRe524 + (oRe524 * tRe524 - oIm524 * tRe516);
        out512[616] = resRe524_s;
        out512[536] = resRe524_s;
        let resRe532_s = eRe524 - (oRe524 * tRe524 - oIm524 * tRe516);
        out512[600] = resRe532_s;
        out512[552] = resRe532_s;
        let resIm532_s = -eIm524 + (oRe524 * tRe516 + oIm524 * tRe524);
        out512[553] = resIm532_s;
        out512[601] = -resIm532_s;
        
        let oRe525 = out512[602];
        let oIm525 = out512[603];
        let eRe525 = out512[538];
        let eIm525 = out512[539];
        let resIm525_s = eIm525 + (oRe525 * tRe515 + oIm525 * tRe525);
        out512[539] = resIm525_s;
        out512[615] = -resIm525_s;
        let resRe525_s = eRe525 + (oRe525 * tRe525 - oIm525 * tRe515);
        out512[614] = resRe525_s;
        out512[538] = resRe525_s;
        let resRe531_s = eRe525 - (oRe525 * tRe525 - oIm525 * tRe515);
        out512[602] = resRe531_s;
        out512[550] = resRe531_s;
        let resIm531_s = -eIm525 + (oRe525 * tRe515 + oIm525 * tRe525);
        out512[551] = resIm531_s;
        out512[603] = -resIm531_s;
        
        let oRe526 = out512[604];
        let oIm526 = out512[605];
        let eRe526 = out512[540];
        let eIm526 = out512[541];
        let resIm526_s = eIm526 + (oRe526 * tRe514 + oIm526 * tRe526);
        out512[541] = resIm526_s;
        out512[613] = -resIm526_s;
        let resRe526_s = eRe526 + (oRe526 * tRe526 - oIm526 * tRe514);
        out512[612] = resRe526_s;
        out512[540] = resRe526_s;
        let resRe530_s = eRe526 - (oRe526 * tRe526 - oIm526 * tRe514);
        out512[604] = resRe530_s;
        out512[548] = resRe530_s;
        let resIm530_s = -eIm526 + (oRe526 * tRe514 + oIm526 * tRe526);
        out512[549] = resIm530_s;
        out512[605] = -resIm530_s;
        
        let oRe527 = out512[606];
        let oIm527 = out512[607];
        let eRe527 = out512[542];
        let eIm527 = out512[543];
        let resIm527_s = eIm527 + (oRe527 * tRe513 + oIm527 * tRe527);
        out512[543] = resIm527_s;
        out512[611] = -resIm527_s;
        let resRe527_s = eRe527 + (oRe527 * tRe527 - oIm527 * tRe513);
        out512[610] = resRe527_s;
        out512[542] = resRe527_s;
        let resRe529_s = eRe527 - (oRe527 * tRe527 - oIm527 * tRe513);
        out512[606] = resRe529_s;
        out512[546] = resRe529_s;
        let resIm529_s = -eIm527 + (oRe527 * tRe513 + oIm527 * tRe527);
        out512[547] = resIm529_s;
        out512[607] = -resIm529_s;
        
        let oRe528 = out512[608];
        let oIm528 = out512[609];
        let eRe528 = out512[544];
        let eIm528 = out512[545];
        let resIm528_s = eIm528 + oRe528;
        out512[545] = resIm528_s;
        out512[609] = -resIm528_s;
        let resRe528_s = eRe528 - oIm528;
        out512[608] = resRe528_s;
        out512[544] = resRe528_s;
        
        let oRe640 = out512[704];
        let oIm640 = out512[705];
        let eRe640 = out512[640];
        let eIm640 = out512[641];
        let resRe640_s = eRe640 + oRe640;
        out512[640] = resRe640_s;
        let resIm640_s = eIm640 + oIm640;
        out512[641] = resIm640_s;
        let resRe640_d = eRe640 - oRe640;
        out512[704] = resRe640_d;
        let resIm640_d = eIm640 - oIm640;
        out512[705] = resIm640_d;
        
        let oRe641 = out512[706];
        let oIm641 = out512[707];
        let eRe641 = out512[642];
        let eIm641 = out512[643];
        let tRe641 = 0.9951847195625305;
        let tRe655 = 0.0980171337723732;
        let resIm641_s = eIm641 + (oRe641 * tRe655 + oIm641 * tRe641);
        out512[643] = resIm641_s;
        out512[767] = -resIm641_s;
        let resRe641_s = eRe641 + (oRe641 * tRe641 - oIm641 * tRe655);
        out512[766] = resRe641_s;
        out512[642] = resRe641_s;
        let resRe671_s = eRe641 - (oRe641 * tRe641 - oIm641 * tRe655);
        out512[706] = resRe671_s;
        out512[702] = resRe671_s;
        let resIm671_s = -eIm641 + (oRe641 * tRe655 + oIm641 * tRe641);
        out512[703] = resIm671_s;
        out512[707] = -resIm671_s;
        
        let oRe642 = out512[708];
        let oIm642 = out512[709];
        let eRe642 = out512[644];
        let eIm642 = out512[645];
        let tRe642 = 0.9807852506637573;
        let tRe654 = 0.1950903534889221;
        let resIm642_s = eIm642 + (oRe642 * tRe654 + oIm642 * tRe642);
        out512[645] = resIm642_s;
        out512[765] = -resIm642_s;
        let resRe642_s = eRe642 + (oRe642 * tRe642 - oIm642 * tRe654);
        out512[764] = resRe642_s;
        out512[644] = resRe642_s;
        let resRe670_s = eRe642 - (oRe642 * tRe642 - oIm642 * tRe654);
        out512[708] = resRe670_s;
        out512[700] = resRe670_s;
        let resIm670_s = -eIm642 + (oRe642 * tRe654 + oIm642 * tRe642);
        out512[701] = resIm670_s;
        out512[709] = -resIm670_s;
        
        let oRe643 = out512[710];
        let oIm643 = out512[711];
        let eRe643 = out512[646];
        let eIm643 = out512[647];
        let tRe643 = 0.9569403529167175;
        let tRe653 = 0.2902846336364746;
        let resIm643_s = eIm643 + (oRe643 * tRe653 + oIm643 * tRe643);
        out512[647] = resIm643_s;
        out512[763] = -resIm643_s;
        let resRe643_s = eRe643 + (oRe643 * tRe643 - oIm643 * tRe653);
        out512[762] = resRe643_s;
        out512[646] = resRe643_s;
        let resRe669_s = eRe643 - (oRe643 * tRe643 - oIm643 * tRe653);
        out512[710] = resRe669_s;
        out512[698] = resRe669_s;
        let resIm669_s = -eIm643 + (oRe643 * tRe653 + oIm643 * tRe643);
        out512[699] = resIm669_s;
        out512[711] = -resIm669_s;
        
        let oRe644 = out512[712];
        let oIm644 = out512[713];
        let eRe644 = out512[648];
        let eIm644 = out512[649];
        let tRe644 = 0.9238795042037964;
        let tRe652 = 0.3826834261417389;
        let resIm644_s = eIm644 + (oRe644 * tRe652 + oIm644 * tRe644);
        out512[649] = resIm644_s;
        out512[761] = -resIm644_s;
        let resRe644_s = eRe644 + (oRe644 * tRe644 - oIm644 * tRe652);
        out512[760] = resRe644_s;
        out512[648] = resRe644_s;
        let resRe668_s = eRe644 - (oRe644 * tRe644 - oIm644 * tRe652);
        out512[712] = resRe668_s;
        out512[696] = resRe668_s;
        let resIm668_s = -eIm644 + (oRe644 * tRe652 + oIm644 * tRe644);
        out512[697] = resIm668_s;
        out512[713] = -resIm668_s;
        
        let oRe645 = out512[714];
        let oIm645 = out512[715];
        let eRe645 = out512[650];
        let eIm645 = out512[651];
        let tRe645 = 0.8819212913513184;
        let tRe651 = 0.4713967740535736;
        let resIm645_s = eIm645 + (oRe645 * tRe651 + oIm645 * tRe645);
        out512[651] = resIm645_s;
        out512[759] = -resIm645_s;
        let resRe645_s = eRe645 + (oRe645 * tRe645 - oIm645 * tRe651);
        out512[758] = resRe645_s;
        out512[650] = resRe645_s;
        let resRe667_s = eRe645 - (oRe645 * tRe645 - oIm645 * tRe651);
        out512[714] = resRe667_s;
        out512[694] = resRe667_s;
        let resIm667_s = -eIm645 + (oRe645 * tRe651 + oIm645 * tRe645);
        out512[695] = resIm667_s;
        out512[715] = -resIm667_s;
        
        let oRe646 = out512[716];
        let oIm646 = out512[717];
        let eRe646 = out512[652];
        let eIm646 = out512[653];
        let tRe646 = 0.8314695954322815;
        let tRe650 = 0.5555702447891235;
        let resIm646_s = eIm646 + (oRe646 * tRe650 + oIm646 * tRe646);
        out512[653] = resIm646_s;
        out512[757] = -resIm646_s;
        let resRe646_s = eRe646 + (oRe646 * tRe646 - oIm646 * tRe650);
        out512[756] = resRe646_s;
        out512[652] = resRe646_s;
        let resRe666_s = eRe646 - (oRe646 * tRe646 - oIm646 * tRe650);
        out512[716] = resRe666_s;
        out512[692] = resRe666_s;
        let resIm666_s = -eIm646 + (oRe646 * tRe650 + oIm646 * tRe646);
        out512[693] = resIm666_s;
        out512[717] = -resIm666_s;
        
        let oRe647 = out512[718];
        let oIm647 = out512[719];
        let eRe647 = out512[654];
        let eIm647 = out512[655];
        let tRe647 = 0.7730104923248291;
        let tRe649 = 0.6343932747840881;
        let resIm647_s = eIm647 + (oRe647 * tRe649 + oIm647 * tRe647);
        out512[655] = resIm647_s;
        out512[755] = -resIm647_s;
        let resRe647_s = eRe647 + (oRe647 * tRe647 - oIm647 * tRe649);
        out512[754] = resRe647_s;
        out512[654] = resRe647_s;
        let resRe665_s = eRe647 - (oRe647 * tRe647 - oIm647 * tRe649);
        out512[718] = resRe665_s;
        out512[690] = resRe665_s;
        let resIm665_s = -eIm647 + (oRe647 * tRe649 + oIm647 * tRe647);
        out512[691] = resIm665_s;
        out512[719] = -resIm665_s;
        
        let oRe648 = out512[720];
        let oIm648 = out512[721];
        let eRe648 = out512[656];
        let eIm648 = out512[657];
        let tRe648 = 0.7071067690849304;
        let resIm648_s = eIm648 + (oRe648 * tRe648 + oIm648 * tRe648);
        out512[657] = resIm648_s;
        out512[753] = -resIm648_s;
        let resRe648_s = eRe648 + (oRe648 * tRe648 - oIm648 * tRe648);
        out512[752] = resRe648_s;
        out512[656] = resRe648_s;
        let resRe664_s = eRe648 - (oRe648 * tRe648 - oIm648 * tRe648);
        out512[720] = resRe664_s;
        out512[688] = resRe664_s;
        let resIm664_s = -eIm648 + (oRe648 * tRe648 + oIm648 * tRe648);
        out512[689] = resIm664_s;
        out512[721] = -resIm664_s;
        
        let oRe649 = out512[722];
        let oIm649 = out512[723];
        let eRe649 = out512[658];
        let eIm649 = out512[659];
        let resIm649_s = eIm649 + (oRe649 * tRe647 + oIm649 * tRe649);
        out512[659] = resIm649_s;
        out512[751] = -resIm649_s;
        let resRe649_s = eRe649 + (oRe649 * tRe649 - oIm649 * tRe647);
        out512[750] = resRe649_s;
        out512[658] = resRe649_s;
        let resRe663_s = eRe649 - (oRe649 * tRe649 - oIm649 * tRe647);
        out512[722] = resRe663_s;
        out512[686] = resRe663_s;
        let resIm663_s = -eIm649 + (oRe649 * tRe647 + oIm649 * tRe649);
        out512[687] = resIm663_s;
        out512[723] = -resIm663_s;
        
        let oRe650 = out512[724];
        let oIm650 = out512[725];
        let eRe650 = out512[660];
        let eIm650 = out512[661];
        let resIm650_s = eIm650 + (oRe650 * tRe646 + oIm650 * tRe650);
        out512[661] = resIm650_s;
        out512[749] = -resIm650_s;
        let resRe650_s = eRe650 + (oRe650 * tRe650 - oIm650 * tRe646);
        out512[748] = resRe650_s;
        out512[660] = resRe650_s;
        let resRe662_s = eRe650 - (oRe650 * tRe650 - oIm650 * tRe646);
        out512[724] = resRe662_s;
        out512[684] = resRe662_s;
        let resIm662_s = -eIm650 + (oRe650 * tRe646 + oIm650 * tRe650);
        out512[685] = resIm662_s;
        out512[725] = -resIm662_s;
        
        let oRe651 = out512[726];
        let oIm651 = out512[727];
        let eRe651 = out512[662];
        let eIm651 = out512[663];
        let resIm651_s = eIm651 + (oRe651 * tRe645 + oIm651 * tRe651);
        out512[663] = resIm651_s;
        out512[747] = -resIm651_s;
        let resRe651_s = eRe651 + (oRe651 * tRe651 - oIm651 * tRe645);
        out512[746] = resRe651_s;
        out512[662] = resRe651_s;
        let resRe661_s = eRe651 - (oRe651 * tRe651 - oIm651 * tRe645);
        out512[726] = resRe661_s;
        out512[682] = resRe661_s;
        let resIm661_s = -eIm651 + (oRe651 * tRe645 + oIm651 * tRe651);
        out512[683] = resIm661_s;
        out512[727] = -resIm661_s;
        
        let oRe652 = out512[728];
        let oIm652 = out512[729];
        let eRe652 = out512[664];
        let eIm652 = out512[665];
        let resIm652_s = eIm652 + (oRe652 * tRe644 + oIm652 * tRe652);
        out512[665] = resIm652_s;
        out512[745] = -resIm652_s;
        let resRe652_s = eRe652 + (oRe652 * tRe652 - oIm652 * tRe644);
        out512[744] = resRe652_s;
        out512[664] = resRe652_s;
        let resRe660_s = eRe652 - (oRe652 * tRe652 - oIm652 * tRe644);
        out512[728] = resRe660_s;
        out512[680] = resRe660_s;
        let resIm660_s = -eIm652 + (oRe652 * tRe644 + oIm652 * tRe652);
        out512[681] = resIm660_s;
        out512[729] = -resIm660_s;
        
        let oRe653 = out512[730];
        let oIm653 = out512[731];
        let eRe653 = out512[666];
        let eIm653 = out512[667];
        let resIm653_s = eIm653 + (oRe653 * tRe643 + oIm653 * tRe653);
        out512[667] = resIm653_s;
        out512[743] = -resIm653_s;
        let resRe653_s = eRe653 + (oRe653 * tRe653 - oIm653 * tRe643);
        out512[742] = resRe653_s;
        out512[666] = resRe653_s;
        let resRe659_s = eRe653 - (oRe653 * tRe653 - oIm653 * tRe643);
        out512[730] = resRe659_s;
        out512[678] = resRe659_s;
        let resIm659_s = -eIm653 + (oRe653 * tRe643 + oIm653 * tRe653);
        out512[679] = resIm659_s;
        out512[731] = -resIm659_s;
        
        let oRe654 = out512[732];
        let oIm654 = out512[733];
        let eRe654 = out512[668];
        let eIm654 = out512[669];
        let resIm654_s = eIm654 + (oRe654 * tRe642 + oIm654 * tRe654);
        out512[669] = resIm654_s;
        out512[741] = -resIm654_s;
        let resRe654_s = eRe654 + (oRe654 * tRe654 - oIm654 * tRe642);
        out512[740] = resRe654_s;
        out512[668] = resRe654_s;
        let resRe658_s = eRe654 - (oRe654 * tRe654 - oIm654 * tRe642);
        out512[732] = resRe658_s;
        out512[676] = resRe658_s;
        let resIm658_s = -eIm654 + (oRe654 * tRe642 + oIm654 * tRe654);
        out512[677] = resIm658_s;
        out512[733] = -resIm658_s;
        
        let oRe655 = out512[734];
        let oIm655 = out512[735];
        let eRe655 = out512[670];
        let eIm655 = out512[671];
        let resIm655_s = eIm655 + (oRe655 * tRe641 + oIm655 * tRe655);
        out512[671] = resIm655_s;
        out512[739] = -resIm655_s;
        let resRe655_s = eRe655 + (oRe655 * tRe655 - oIm655 * tRe641);
        out512[738] = resRe655_s;
        out512[670] = resRe655_s;
        let resRe657_s = eRe655 - (oRe655 * tRe655 - oIm655 * tRe641);
        out512[734] = resRe657_s;
        out512[674] = resRe657_s;
        let resIm657_s = -eIm655 + (oRe655 * tRe641 + oIm655 * tRe655);
        out512[675] = resIm657_s;
        out512[735] = -resIm657_s;
        
        let oRe656 = out512[736];
        let oIm656 = out512[737];
        let eRe656 = out512[672];
        let eIm656 = out512[673];
        let resIm656_s = eIm656 + oRe656;
        out512[673] = resIm656_s;
        out512[737] = -resIm656_s;
        let resRe656_s = eRe656 - oIm656;
        out512[736] = resRe656_s;
        out512[672] = resRe656_s;
        
        let oRe768 = out512[832];
        let oIm768 = out512[833];
        let eRe768 = out512[768];
        let eIm768 = out512[769];
        let resRe768_s = eRe768 + oRe768;
        out512[768] = resRe768_s;
        let resIm768_s = eIm768 + oIm768;
        out512[769] = resIm768_s;
        let resRe768_d = eRe768 - oRe768;
        out512[832] = resRe768_d;
        let resIm768_d = eIm768 - oIm768;
        out512[833] = resIm768_d;
        
        let oRe769 = out512[834];
        let oIm769 = out512[835];
        let eRe769 = out512[770];
        let eIm769 = out512[771];
        let tRe769 = 0.9951847195625305;
        let tRe783 = 0.0980171337723732;
        let resIm769_s = eIm769 + (oRe769 * tRe783 + oIm769 * tRe769);
        out512[771] = resIm769_s;
        out512[895] = -resIm769_s;
        let resRe769_s = eRe769 + (oRe769 * tRe769 - oIm769 * tRe783);
        out512[894] = resRe769_s;
        out512[770] = resRe769_s;
        let resRe799_s = eRe769 - (oRe769 * tRe769 - oIm769 * tRe783);
        out512[834] = resRe799_s;
        out512[830] = resRe799_s;
        let resIm799_s = -eIm769 + (oRe769 * tRe783 + oIm769 * tRe769);
        out512[831] = resIm799_s;
        out512[835] = -resIm799_s;
        
        let oRe770 = out512[836];
        let oIm770 = out512[837];
        let eRe770 = out512[772];
        let eIm770 = out512[773];
        let tRe770 = 0.9807852506637573;
        let tRe782 = 0.1950903534889221;
        let resIm770_s = eIm770 + (oRe770 * tRe782 + oIm770 * tRe770);
        out512[773] = resIm770_s;
        out512[893] = -resIm770_s;
        let resRe770_s = eRe770 + (oRe770 * tRe770 - oIm770 * tRe782);
        out512[892] = resRe770_s;
        out512[772] = resRe770_s;
        let resRe798_s = eRe770 - (oRe770 * tRe770 - oIm770 * tRe782);
        out512[836] = resRe798_s;
        out512[828] = resRe798_s;
        let resIm798_s = -eIm770 + (oRe770 * tRe782 + oIm770 * tRe770);
        out512[829] = resIm798_s;
        out512[837] = -resIm798_s;
        
        let oRe771 = out512[838];
        let oIm771 = out512[839];
        let eRe771 = out512[774];
        let eIm771 = out512[775];
        let tRe771 = 0.9569403529167175;
        let tRe781 = 0.2902846336364746;
        let resIm771_s = eIm771 + (oRe771 * tRe781 + oIm771 * tRe771);
        out512[775] = resIm771_s;
        out512[891] = -resIm771_s;
        let resRe771_s = eRe771 + (oRe771 * tRe771 - oIm771 * tRe781);
        out512[890] = resRe771_s;
        out512[774] = resRe771_s;
        let resRe797_s = eRe771 - (oRe771 * tRe771 - oIm771 * tRe781);
        out512[838] = resRe797_s;
        out512[826] = resRe797_s;
        let resIm797_s = -eIm771 + (oRe771 * tRe781 + oIm771 * tRe771);
        out512[827] = resIm797_s;
        out512[839] = -resIm797_s;
        
        let oRe772 = out512[840];
        let oIm772 = out512[841];
        let eRe772 = out512[776];
        let eIm772 = out512[777];
        let tRe772 = 0.9238795042037964;
        let tRe780 = 0.3826834261417389;
        let resIm772_s = eIm772 + (oRe772 * tRe780 + oIm772 * tRe772);
        out512[777] = resIm772_s;
        out512[889] = -resIm772_s;
        let resRe772_s = eRe772 + (oRe772 * tRe772 - oIm772 * tRe780);
        out512[888] = resRe772_s;
        out512[776] = resRe772_s;
        let resRe796_s = eRe772 - (oRe772 * tRe772 - oIm772 * tRe780);
        out512[840] = resRe796_s;
        out512[824] = resRe796_s;
        let resIm796_s = -eIm772 + (oRe772 * tRe780 + oIm772 * tRe772);
        out512[825] = resIm796_s;
        out512[841] = -resIm796_s;
        
        let oRe773 = out512[842];
        let oIm773 = out512[843];
        let eRe773 = out512[778];
        let eIm773 = out512[779];
        let tRe773 = 0.8819212913513184;
        let tRe779 = 0.4713967740535736;
        let resIm773_s = eIm773 + (oRe773 * tRe779 + oIm773 * tRe773);
        out512[779] = resIm773_s;
        out512[887] = -resIm773_s;
        let resRe773_s = eRe773 + (oRe773 * tRe773 - oIm773 * tRe779);
        out512[886] = resRe773_s;
        out512[778] = resRe773_s;
        let resRe795_s = eRe773 - (oRe773 * tRe773 - oIm773 * tRe779);
        out512[842] = resRe795_s;
        out512[822] = resRe795_s;
        let resIm795_s = -eIm773 + (oRe773 * tRe779 + oIm773 * tRe773);
        out512[823] = resIm795_s;
        out512[843] = -resIm795_s;
        
        let oRe774 = out512[844];
        let oIm774 = out512[845];
        let eRe774 = out512[780];
        let eIm774 = out512[781];
        let tRe774 = 0.8314695954322815;
        let tRe778 = 0.5555702447891235;
        let resIm774_s = eIm774 + (oRe774 * tRe778 + oIm774 * tRe774);
        out512[781] = resIm774_s;
        out512[885] = -resIm774_s;
        let resRe774_s = eRe774 + (oRe774 * tRe774 - oIm774 * tRe778);
        out512[884] = resRe774_s;
        out512[780] = resRe774_s;
        let resRe794_s = eRe774 - (oRe774 * tRe774 - oIm774 * tRe778);
        out512[844] = resRe794_s;
        out512[820] = resRe794_s;
        let resIm794_s = -eIm774 + (oRe774 * tRe778 + oIm774 * tRe774);
        out512[821] = resIm794_s;
        out512[845] = -resIm794_s;
        
        let oRe775 = out512[846];
        let oIm775 = out512[847];
        let eRe775 = out512[782];
        let eIm775 = out512[783];
        let tRe775 = 0.7730104923248291;
        let tRe777 = 0.6343932747840881;
        let resIm775_s = eIm775 + (oRe775 * tRe777 + oIm775 * tRe775);
        out512[783] = resIm775_s;
        out512[883] = -resIm775_s;
        let resRe775_s = eRe775 + (oRe775 * tRe775 - oIm775 * tRe777);
        out512[882] = resRe775_s;
        out512[782] = resRe775_s;
        let resRe793_s = eRe775 - (oRe775 * tRe775 - oIm775 * tRe777);
        out512[846] = resRe793_s;
        out512[818] = resRe793_s;
        let resIm793_s = -eIm775 + (oRe775 * tRe777 + oIm775 * tRe775);
        out512[819] = resIm793_s;
        out512[847] = -resIm793_s;
        
        let oRe776 = out512[848];
        let oIm776 = out512[849];
        let eRe776 = out512[784];
        let eIm776 = out512[785];
        let tRe776 = 0.7071067690849304;
        let resIm776_s = eIm776 + (oRe776 * tRe776 + oIm776 * tRe776);
        out512[785] = resIm776_s;
        out512[881] = -resIm776_s;
        let resRe776_s = eRe776 + (oRe776 * tRe776 - oIm776 * tRe776);
        out512[880] = resRe776_s;
        out512[784] = resRe776_s;
        let resRe792_s = eRe776 - (oRe776 * tRe776 - oIm776 * tRe776);
        out512[848] = resRe792_s;
        out512[816] = resRe792_s;
        let resIm792_s = -eIm776 + (oRe776 * tRe776 + oIm776 * tRe776);
        out512[817] = resIm792_s;
        out512[849] = -resIm792_s;
        
        let oRe777 = out512[850];
        let oIm777 = out512[851];
        let eRe777 = out512[786];
        let eIm777 = out512[787];
        let resIm777_s = eIm777 + (oRe777 * tRe775 + oIm777 * tRe777);
        out512[787] = resIm777_s;
        out512[879] = -resIm777_s;
        let resRe777_s = eRe777 + (oRe777 * tRe777 - oIm777 * tRe775);
        out512[878] = resRe777_s;
        out512[786] = resRe777_s;
        let resRe791_s = eRe777 - (oRe777 * tRe777 - oIm777 * tRe775);
        out512[850] = resRe791_s;
        out512[814] = resRe791_s;
        let resIm791_s = -eIm777 + (oRe777 * tRe775 + oIm777 * tRe777);
        out512[815] = resIm791_s;
        out512[851] = -resIm791_s;
        
        let oRe778 = out512[852];
        let oIm778 = out512[853];
        let eRe778 = out512[788];
        let eIm778 = out512[789];
        let resIm778_s = eIm778 + (oRe778 * tRe774 + oIm778 * tRe778);
        out512[789] = resIm778_s;
        out512[877] = -resIm778_s;
        let resRe778_s = eRe778 + (oRe778 * tRe778 - oIm778 * tRe774);
        out512[876] = resRe778_s;
        out512[788] = resRe778_s;
        let resRe790_s = eRe778 - (oRe778 * tRe778 - oIm778 * tRe774);
        out512[852] = resRe790_s;
        out512[812] = resRe790_s;
        let resIm790_s = -eIm778 + (oRe778 * tRe774 + oIm778 * tRe778);
        out512[813] = resIm790_s;
        out512[853] = -resIm790_s;
        
        let oRe779 = out512[854];
        let oIm779 = out512[855];
        let eRe779 = out512[790];
        let eIm779 = out512[791];
        let resIm779_s = eIm779 + (oRe779 * tRe773 + oIm779 * tRe779);
        out512[791] = resIm779_s;
        out512[875] = -resIm779_s;
        let resRe779_s = eRe779 + (oRe779 * tRe779 - oIm779 * tRe773);
        out512[874] = resRe779_s;
        out512[790] = resRe779_s;
        let resRe789_s = eRe779 - (oRe779 * tRe779 - oIm779 * tRe773);
        out512[854] = resRe789_s;
        out512[810] = resRe789_s;
        let resIm789_s = -eIm779 + (oRe779 * tRe773 + oIm779 * tRe779);
        out512[811] = resIm789_s;
        out512[855] = -resIm789_s;
        
        let oRe780 = out512[856];
        let oIm780 = out512[857];
        let eRe780 = out512[792];
        let eIm780 = out512[793];
        let resIm780_s = eIm780 + (oRe780 * tRe772 + oIm780 * tRe780);
        out512[793] = resIm780_s;
        out512[873] = -resIm780_s;
        let resRe780_s = eRe780 + (oRe780 * tRe780 - oIm780 * tRe772);
        out512[872] = resRe780_s;
        out512[792] = resRe780_s;
        let resRe788_s = eRe780 - (oRe780 * tRe780 - oIm780 * tRe772);
        out512[856] = resRe788_s;
        out512[808] = resRe788_s;
        let resIm788_s = -eIm780 + (oRe780 * tRe772 + oIm780 * tRe780);
        out512[809] = resIm788_s;
        out512[857] = -resIm788_s;
        
        let oRe781 = out512[858];
        let oIm781 = out512[859];
        let eRe781 = out512[794];
        let eIm781 = out512[795];
        let resIm781_s = eIm781 + (oRe781 * tRe771 + oIm781 * tRe781);
        out512[795] = resIm781_s;
        out512[871] = -resIm781_s;
        let resRe781_s = eRe781 + (oRe781 * tRe781 - oIm781 * tRe771);
        out512[870] = resRe781_s;
        out512[794] = resRe781_s;
        let resRe787_s = eRe781 - (oRe781 * tRe781 - oIm781 * tRe771);
        out512[858] = resRe787_s;
        out512[806] = resRe787_s;
        let resIm787_s = -eIm781 + (oRe781 * tRe771 + oIm781 * tRe781);
        out512[807] = resIm787_s;
        out512[859] = -resIm787_s;
        
        let oRe782 = out512[860];
        let oIm782 = out512[861];
        let eRe782 = out512[796];
        let eIm782 = out512[797];
        let resIm782_s = eIm782 + (oRe782 * tRe770 + oIm782 * tRe782);
        out512[797] = resIm782_s;
        out512[869] = -resIm782_s;
        let resRe782_s = eRe782 + (oRe782 * tRe782 - oIm782 * tRe770);
        out512[868] = resRe782_s;
        out512[796] = resRe782_s;
        let resRe786_s = eRe782 - (oRe782 * tRe782 - oIm782 * tRe770);
        out512[860] = resRe786_s;
        out512[804] = resRe786_s;
        let resIm786_s = -eIm782 + (oRe782 * tRe770 + oIm782 * tRe782);
        out512[805] = resIm786_s;
        out512[861] = -resIm786_s;
        
        let oRe783 = out512[862];
        let oIm783 = out512[863];
        let eRe783 = out512[798];
        let eIm783 = out512[799];
        let resIm783_s = eIm783 + (oRe783 * tRe769 + oIm783 * tRe783);
        out512[799] = resIm783_s;
        out512[867] = -resIm783_s;
        let resRe783_s = eRe783 + (oRe783 * tRe783 - oIm783 * tRe769);
        out512[866] = resRe783_s;
        out512[798] = resRe783_s;
        let resRe785_s = eRe783 - (oRe783 * tRe783 - oIm783 * tRe769);
        out512[862] = resRe785_s;
        out512[802] = resRe785_s;
        let resIm785_s = -eIm783 + (oRe783 * tRe769 + oIm783 * tRe783);
        out512[803] = resIm785_s;
        out512[863] = -resIm785_s;
        
        let oRe784 = out512[864];
        let oIm784 = out512[865];
        let eRe784 = out512[800];
        let eIm784 = out512[801];
        let resIm784_s = eIm784 + oRe784;
        out512[801] = resIm784_s;
        out512[865] = -resIm784_s;
        let resRe784_s = eRe784 - oIm784;
        out512[864] = resRe784_s;
        out512[800] = resRe784_s;
        
        let oRe896 = out512[960];
        let oIm896 = out512[961];
        let eRe896 = out512[896];
        let eIm896 = out512[897];
        let resRe896_s = eRe896 + oRe896;
        out512[896] = resRe896_s;
        let resIm896_s = eIm896 + oIm896;
        out512[897] = resIm896_s;
        let resRe896_d = eRe896 - oRe896;
        out512[960] = resRe896_d;
        let resIm896_d = eIm896 - oIm896;
        out512[961] = resIm896_d;
        
        let oRe897 = out512[962];
        let oIm897 = out512[963];
        let eRe897 = out512[898];
        let eIm897 = out512[899];
        let tRe897 = 0.9951847195625305;
        let tRe911 = 0.0980171337723732;
        let resIm897_s = eIm897 + (oRe897 * tRe911 + oIm897 * tRe897);
        out512[899] = resIm897_s;
        out512[1023] = -resIm897_s;
        let resRe897_s = eRe897 + (oRe897 * tRe897 - oIm897 * tRe911);
        out512[1022] = resRe897_s;
        out512[898] = resRe897_s;
        let resRe927_s = eRe897 - (oRe897 * tRe897 - oIm897 * tRe911);
        out512[962] = resRe927_s;
        out512[958] = resRe927_s;
        let resIm927_s = -eIm897 + (oRe897 * tRe911 + oIm897 * tRe897);
        out512[959] = resIm927_s;
        out512[963] = -resIm927_s;
        
        let oRe898 = out512[964];
        let oIm898 = out512[965];
        let eRe898 = out512[900];
        let eIm898 = out512[901];
        let tRe898 = 0.9807852506637573;
        let tRe910 = 0.1950903534889221;
        let resIm898_s = eIm898 + (oRe898 * tRe910 + oIm898 * tRe898);
        out512[901] = resIm898_s;
        out512[1021] = -resIm898_s;
        let resRe898_s = eRe898 + (oRe898 * tRe898 - oIm898 * tRe910);
        out512[1020] = resRe898_s;
        out512[900] = resRe898_s;
        let resRe926_s = eRe898 - (oRe898 * tRe898 - oIm898 * tRe910);
        out512[964] = resRe926_s;
        out512[956] = resRe926_s;
        let resIm926_s = -eIm898 + (oRe898 * tRe910 + oIm898 * tRe898);
        out512[957] = resIm926_s;
        out512[965] = -resIm926_s;
        
        let oRe899 = out512[966];
        let oIm899 = out512[967];
        let eRe899 = out512[902];
        let eIm899 = out512[903];
        let tRe899 = 0.9569403529167175;
        let tRe909 = 0.2902846336364746;
        let resIm899_s = eIm899 + (oRe899 * tRe909 + oIm899 * tRe899);
        out512[903] = resIm899_s;
        out512[1019] = -resIm899_s;
        let resRe899_s = eRe899 + (oRe899 * tRe899 - oIm899 * tRe909);
        out512[1018] = resRe899_s;
        out512[902] = resRe899_s;
        let resRe925_s = eRe899 - (oRe899 * tRe899 - oIm899 * tRe909);
        out512[966] = resRe925_s;
        out512[954] = resRe925_s;
        let resIm925_s = -eIm899 + (oRe899 * tRe909 + oIm899 * tRe899);
        out512[955] = resIm925_s;
        out512[967] = -resIm925_s;
        
        let oRe900 = out512[968];
        let oIm900 = out512[969];
        let eRe900 = out512[904];
        let eIm900 = out512[905];
        let tRe900 = 0.9238795042037964;
        let tRe908 = 0.3826834261417389;
        let resIm900_s = eIm900 + (oRe900 * tRe908 + oIm900 * tRe900);
        out512[905] = resIm900_s;
        out512[1017] = -resIm900_s;
        let resRe900_s = eRe900 + (oRe900 * tRe900 - oIm900 * tRe908);
        out512[1016] = resRe900_s;
        out512[904] = resRe900_s;
        let resRe924_s = eRe900 - (oRe900 * tRe900 - oIm900 * tRe908);
        out512[968] = resRe924_s;
        out512[952] = resRe924_s;
        let resIm924_s = -eIm900 + (oRe900 * tRe908 + oIm900 * tRe900);
        out512[953] = resIm924_s;
        out512[969] = -resIm924_s;
        
        let oRe901 = out512[970];
        let oIm901 = out512[971];
        let eRe901 = out512[906];
        let eIm901 = out512[907];
        let tRe901 = 0.8819212913513184;
        let tRe907 = 0.4713967740535736;
        let resIm901_s = eIm901 + (oRe901 * tRe907 + oIm901 * tRe901);
        out512[907] = resIm901_s;
        out512[1015] = -resIm901_s;
        let resRe901_s = eRe901 + (oRe901 * tRe901 - oIm901 * tRe907);
        out512[1014] = resRe901_s;
        out512[906] = resRe901_s;
        let resRe923_s = eRe901 - (oRe901 * tRe901 - oIm901 * tRe907);
        out512[970] = resRe923_s;
        out512[950] = resRe923_s;
        let resIm923_s = -eIm901 + (oRe901 * tRe907 + oIm901 * tRe901);
        out512[951] = resIm923_s;
        out512[971] = -resIm923_s;
        
        let oRe902 = out512[972];
        let oIm902 = out512[973];
        let eRe902 = out512[908];
        let eIm902 = out512[909];
        let tRe902 = 0.8314695954322815;
        let tRe906 = 0.5555702447891235;
        let resIm902_s = eIm902 + (oRe902 * tRe906 + oIm902 * tRe902);
        out512[909] = resIm902_s;
        out512[1013] = -resIm902_s;
        let resRe902_s = eRe902 + (oRe902 * tRe902 - oIm902 * tRe906);
        out512[1012] = resRe902_s;
        out512[908] = resRe902_s;
        let resRe922_s = eRe902 - (oRe902 * tRe902 - oIm902 * tRe906);
        out512[972] = resRe922_s;
        out512[948] = resRe922_s;
        let resIm922_s = -eIm902 + (oRe902 * tRe906 + oIm902 * tRe902);
        out512[949] = resIm922_s;
        out512[973] = -resIm922_s;
        
        let oRe903 = out512[974];
        let oIm903 = out512[975];
        let eRe903 = out512[910];
        let eIm903 = out512[911];
        let tRe903 = 0.7730104923248291;
        let tRe905 = 0.6343932747840881;
        let resIm903_s = eIm903 + (oRe903 * tRe905 + oIm903 * tRe903);
        out512[911] = resIm903_s;
        out512[1011] = -resIm903_s;
        let resRe903_s = eRe903 + (oRe903 * tRe903 - oIm903 * tRe905);
        out512[1010] = resRe903_s;
        out512[910] = resRe903_s;
        let resRe921_s = eRe903 - (oRe903 * tRe903 - oIm903 * tRe905);
        out512[974] = resRe921_s;
        out512[946] = resRe921_s;
        let resIm921_s = -eIm903 + (oRe903 * tRe905 + oIm903 * tRe903);
        out512[947] = resIm921_s;
        out512[975] = -resIm921_s;
        
        let oRe904 = out512[976];
        let oIm904 = out512[977];
        let eRe904 = out512[912];
        let eIm904 = out512[913];
        let tRe904 = 0.7071067690849304;
        let resIm904_s = eIm904 + (oRe904 * tRe904 + oIm904 * tRe904);
        out512[913] = resIm904_s;
        out512[1009] = -resIm904_s;
        let resRe904_s = eRe904 + (oRe904 * tRe904 - oIm904 * tRe904);
        out512[1008] = resRe904_s;
        out512[912] = resRe904_s;
        let resRe920_s = eRe904 - (oRe904 * tRe904 - oIm904 * tRe904);
        out512[976] = resRe920_s;
        out512[944] = resRe920_s;
        let resIm920_s = -eIm904 + (oRe904 * tRe904 + oIm904 * tRe904);
        out512[945] = resIm920_s;
        out512[977] = -resIm920_s;
        
        let oRe905 = out512[978];
        let oIm905 = out512[979];
        let eRe905 = out512[914];
        let eIm905 = out512[915];
        let resIm905_s = eIm905 + (oRe905 * tRe903 + oIm905 * tRe905);
        out512[915] = resIm905_s;
        out512[1007] = -resIm905_s;
        let resRe905_s = eRe905 + (oRe905 * tRe905 - oIm905 * tRe903);
        out512[1006] = resRe905_s;
        out512[914] = resRe905_s;
        let resRe919_s = eRe905 - (oRe905 * tRe905 - oIm905 * tRe903);
        out512[978] = resRe919_s;
        out512[942] = resRe919_s;
        let resIm919_s = -eIm905 + (oRe905 * tRe903 + oIm905 * tRe905);
        out512[943] = resIm919_s;
        out512[979] = -resIm919_s;
        
        let oRe906 = out512[980];
        let oIm906 = out512[981];
        let eRe906 = out512[916];
        let eIm906 = out512[917];
        let resIm906_s = eIm906 + (oRe906 * tRe902 + oIm906 * tRe906);
        out512[917] = resIm906_s;
        out512[1005] = -resIm906_s;
        let resRe906_s = eRe906 + (oRe906 * tRe906 - oIm906 * tRe902);
        out512[1004] = resRe906_s;
        out512[916] = resRe906_s;
        let resRe918_s = eRe906 - (oRe906 * tRe906 - oIm906 * tRe902);
        out512[980] = resRe918_s;
        out512[940] = resRe918_s;
        let resIm918_s = -eIm906 + (oRe906 * tRe902 + oIm906 * tRe906);
        out512[941] = resIm918_s;
        out512[981] = -resIm918_s;
        
        let oRe907 = out512[982];
        let oIm907 = out512[983];
        let eRe907 = out512[918];
        let eIm907 = out512[919];
        let resIm907_s = eIm907 + (oRe907 * tRe901 + oIm907 * tRe907);
        out512[919] = resIm907_s;
        out512[1003] = -resIm907_s;
        let resRe907_s = eRe907 + (oRe907 * tRe907 - oIm907 * tRe901);
        out512[1002] = resRe907_s;
        out512[918] = resRe907_s;
        let resRe917_s = eRe907 - (oRe907 * tRe907 - oIm907 * tRe901);
        out512[982] = resRe917_s;
        out512[938] = resRe917_s;
        let resIm917_s = -eIm907 + (oRe907 * tRe901 + oIm907 * tRe907);
        out512[939] = resIm917_s;
        out512[983] = -resIm917_s;
        
        let oRe908 = out512[984];
        let oIm908 = out512[985];
        let eRe908 = out512[920];
        let eIm908 = out512[921];
        let resIm908_s = eIm908 + (oRe908 * tRe900 + oIm908 * tRe908);
        out512[921] = resIm908_s;
        out512[1001] = -resIm908_s;
        let resRe908_s = eRe908 + (oRe908 * tRe908 - oIm908 * tRe900);
        out512[1000] = resRe908_s;
        out512[920] = resRe908_s;
        let resRe916_s = eRe908 - (oRe908 * tRe908 - oIm908 * tRe900);
        out512[984] = resRe916_s;
        out512[936] = resRe916_s;
        let resIm916_s = -eIm908 + (oRe908 * tRe900 + oIm908 * tRe908);
        out512[937] = resIm916_s;
        out512[985] = -resIm916_s;
        
        let oRe909 = out512[986];
        let oIm909 = out512[987];
        let eRe909 = out512[922];
        let eIm909 = out512[923];
        let resIm909_s = eIm909 + (oRe909 * tRe899 + oIm909 * tRe909);
        out512[923] = resIm909_s;
        out512[999] = -resIm909_s;
        let resRe909_s = eRe909 + (oRe909 * tRe909 - oIm909 * tRe899);
        out512[998] = resRe909_s;
        out512[922] = resRe909_s;
        let resRe915_s = eRe909 - (oRe909 * tRe909 - oIm909 * tRe899);
        out512[986] = resRe915_s;
        out512[934] = resRe915_s;
        let resIm915_s = -eIm909 + (oRe909 * tRe899 + oIm909 * tRe909);
        out512[935] = resIm915_s;
        out512[987] = -resIm915_s;
        
        let oRe910 = out512[988];
        let oIm910 = out512[989];
        let eRe910 = out512[924];
        let eIm910 = out512[925];
        let resIm910_s = eIm910 + (oRe910 * tRe898 + oIm910 * tRe910);
        out512[925] = resIm910_s;
        out512[997] = -resIm910_s;
        let resRe910_s = eRe910 + (oRe910 * tRe910 - oIm910 * tRe898);
        out512[996] = resRe910_s;
        out512[924] = resRe910_s;
        let resRe914_s = eRe910 - (oRe910 * tRe910 - oIm910 * tRe898);
        out512[988] = resRe914_s;
        out512[932] = resRe914_s;
        let resIm914_s = -eIm910 + (oRe910 * tRe898 + oIm910 * tRe910);
        out512[933] = resIm914_s;
        out512[989] = -resIm914_s;
        
        let oRe911 = out512[990];
        let oIm911 = out512[991];
        let eRe911 = out512[926];
        let eIm911 = out512[927];
        let resIm911_s = eIm911 + (oRe911 * tRe897 + oIm911 * tRe911);
        out512[927] = resIm911_s;
        out512[995] = -resIm911_s;
        let resRe911_s = eRe911 + (oRe911 * tRe911 - oIm911 * tRe897);
        out512[994] = resRe911_s;
        out512[926] = resRe911_s;
        let resRe913_s = eRe911 - (oRe911 * tRe911 - oIm911 * tRe897);
        out512[990] = resRe913_s;
        out512[930] = resRe913_s;
        let resIm913_s = -eIm911 + (oRe911 * tRe897 + oIm911 * tRe911);
        out512[931] = resIm913_s;
        out512[991] = -resIm913_s;
        
        let oRe912 = out512[992];
        let oIm912 = out512[993];
        let eRe912 = out512[928];
        let eIm912 = out512[929];
        let resIm912_s = eIm912 + oRe912;
        out512[929] = resIm912_s;
        out512[993] = -resIm912_s;
        let resRe912_s = eRe912 - oIm912;
        out512[992] = resRe912_s;
        out512[928] = resRe912_s;
        
    } 
    ////////////////////////////////////////////////
    ////////////////////////////////////////////////
    // RADIX 2 (unrolled) - FFT step for SIZE 128 
    ////////////////////////////////////////////////
    { 
        let oRe0 = out512[128];
        let oIm0 = out512[129];
        let eRe0 = out512[0];
        let eIm0 = out512[1];
        let resRe0_s = eRe0 + oRe0;
        out512[0] = resRe0_s;
        let resIm0_s = eIm0 + oIm0;
        out512[1] = resIm0_s;
        let resRe0_d = eRe0 - oRe0;
        out512[128] = resRe0_d;
        let resIm0_d = eIm0 - oIm0;
        out512[129] = resIm0_d;
        
        let oRe1 = out512[130];
        let oIm1 = out512[131];
        let eRe1 = out512[2];
        let eIm1 = out512[3];
        let tRe1 = 0.9987954497337341;
        let tRe31 = 0.0490676499903202;
        let resIm1_s = eIm1 + (oRe1 * tRe31 + oIm1 * tRe1);
        out512[3] = resIm1_s;
        out512[255] = -resIm1_s;
        let resRe1_s = eRe1 + (oRe1 * tRe1 - oIm1 * tRe31);
        out512[254] = resRe1_s;
        out512[2] = resRe1_s;
        let resRe63_s = eRe1 - (oRe1 * tRe1 - oIm1 * tRe31);
        out512[130] = resRe63_s;
        out512[126] = resRe63_s;
        let resIm63_s = -eIm1 + (oRe1 * tRe31 + oIm1 * tRe1);
        out512[127] = resIm63_s;
        out512[131] = -resIm63_s;
        
        let oRe2 = out512[132];
        let oIm2 = out512[133];
        let eRe2 = out512[4];
        let eIm2 = out512[5];
        let tRe2 = 0.9951847195625305;
        let tRe30 = 0.0980171337723732;
        let resIm2_s = eIm2 + (oRe2 * tRe30 + oIm2 * tRe2);
        out512[5] = resIm2_s;
        out512[253] = -resIm2_s;
        let resRe2_s = eRe2 + (oRe2 * tRe2 - oIm2 * tRe30);
        out512[252] = resRe2_s;
        out512[4] = resRe2_s;
        let resRe62_s = eRe2 - (oRe2 * tRe2 - oIm2 * tRe30);
        out512[132] = resRe62_s;
        out512[124] = resRe62_s;
        let resIm62_s = -eIm2 + (oRe2 * tRe30 + oIm2 * tRe2);
        out512[125] = resIm62_s;
        out512[133] = -resIm62_s;
        
        let oRe3 = out512[134];
        let oIm3 = out512[135];
        let eRe3 = out512[6];
        let eIm3 = out512[7];
        let tRe3 = 0.9891765117645264;
        let tRe29 = 0.1467304974794388;
        let resIm3_s = eIm3 + (oRe3 * tRe29 + oIm3 * tRe3);
        out512[7] = resIm3_s;
        out512[251] = -resIm3_s;
        let resRe3_s = eRe3 + (oRe3 * tRe3 - oIm3 * tRe29);
        out512[250] = resRe3_s;
        out512[6] = resRe3_s;
        let resRe61_s = eRe3 - (oRe3 * tRe3 - oIm3 * tRe29);
        out512[134] = resRe61_s;
        out512[122] = resRe61_s;
        let resIm61_s = -eIm3 + (oRe3 * tRe29 + oIm3 * tRe3);
        out512[123] = resIm61_s;
        out512[135] = -resIm61_s;
        
        let oRe4 = out512[136];
        let oIm4 = out512[137];
        let eRe4 = out512[8];
        let eIm4 = out512[9];
        let tRe4 = 0.9807852506637573;
        let tRe28 = 0.1950903534889221;
        let resIm4_s = eIm4 + (oRe4 * tRe28 + oIm4 * tRe4);
        out512[9] = resIm4_s;
        out512[249] = -resIm4_s;
        let resRe4_s = eRe4 + (oRe4 * tRe4 - oIm4 * tRe28);
        out512[248] = resRe4_s;
        out512[8] = resRe4_s;
        let resRe60_s = eRe4 - (oRe4 * tRe4 - oIm4 * tRe28);
        out512[136] = resRe60_s;
        out512[120] = resRe60_s;
        let resIm60_s = -eIm4 + (oRe4 * tRe28 + oIm4 * tRe4);
        out512[121] = resIm60_s;
        out512[137] = -resIm60_s;
        
        let oRe5 = out512[138];
        let oIm5 = out512[139];
        let eRe5 = out512[10];
        let eIm5 = out512[11];
        let tRe5 = 0.9700312614440918;
        let tRe27 = 0.2429802417755127;
        let resIm5_s = eIm5 + (oRe5 * tRe27 + oIm5 * tRe5);
        out512[11] = resIm5_s;
        out512[247] = -resIm5_s;
        let resRe5_s = eRe5 + (oRe5 * tRe5 - oIm5 * tRe27);
        out512[246] = resRe5_s;
        out512[10] = resRe5_s;
        let resRe59_s = eRe5 - (oRe5 * tRe5 - oIm5 * tRe27);
        out512[138] = resRe59_s;
        out512[118] = resRe59_s;
        let resIm59_s = -eIm5 + (oRe5 * tRe27 + oIm5 * tRe5);
        out512[119] = resIm59_s;
        out512[139] = -resIm59_s;
        
        let oRe6 = out512[140];
        let oIm6 = out512[141];
        let eRe6 = out512[12];
        let eIm6 = out512[13];
        let tRe6 = 0.9569403529167175;
        let tRe26 = 0.2902846336364746;
        let resIm6_s = eIm6 + (oRe6 * tRe26 + oIm6 * tRe6);
        out512[13] = resIm6_s;
        out512[245] = -resIm6_s;
        let resRe6_s = eRe6 + (oRe6 * tRe6 - oIm6 * tRe26);
        out512[244] = resRe6_s;
        out512[12] = resRe6_s;
        let resRe58_s = eRe6 - (oRe6 * tRe6 - oIm6 * tRe26);
        out512[140] = resRe58_s;
        out512[116] = resRe58_s;
        let resIm58_s = -eIm6 + (oRe6 * tRe26 + oIm6 * tRe6);
        out512[117] = resIm58_s;
        out512[141] = -resIm58_s;
        
        let oRe7 = out512[142];
        let oIm7 = out512[143];
        let eRe7 = out512[14];
        let eIm7 = out512[15];
        let tRe7 = 0.9415440559387207;
        let tRe25 = 0.3368898332118988;
        let resIm7_s = eIm7 + (oRe7 * tRe25 + oIm7 * tRe7);
        out512[15] = resIm7_s;
        out512[243] = -resIm7_s;
        let resRe7_s = eRe7 + (oRe7 * tRe7 - oIm7 * tRe25);
        out512[242] = resRe7_s;
        out512[14] = resRe7_s;
        let resRe57_s = eRe7 - (oRe7 * tRe7 - oIm7 * tRe25);
        out512[142] = resRe57_s;
        out512[114] = resRe57_s;
        let resIm57_s = -eIm7 + (oRe7 * tRe25 + oIm7 * tRe7);
        out512[115] = resIm57_s;
        out512[143] = -resIm57_s;
        
        let oRe8 = out512[144];
        let oIm8 = out512[145];
        let eRe8 = out512[16];
        let eIm8 = out512[17];
        let tRe8 = 0.9238795042037964;
        let tRe24 = 0.3826834261417389;
        let resIm8_s = eIm8 + (oRe8 * tRe24 + oIm8 * tRe8);
        out512[17] = resIm8_s;
        out512[241] = -resIm8_s;
        let resRe8_s = eRe8 + (oRe8 * tRe8 - oIm8 * tRe24);
        out512[240] = resRe8_s;
        out512[16] = resRe8_s;
        let resRe56_s = eRe8 - (oRe8 * tRe8 - oIm8 * tRe24);
        out512[144] = resRe56_s;
        out512[112] = resRe56_s;
        let resIm56_s = -eIm8 + (oRe8 * tRe24 + oIm8 * tRe8);
        out512[113] = resIm56_s;
        out512[145] = -resIm56_s;
        
        let oRe9 = out512[146];
        let oIm9 = out512[147];
        let eRe9 = out512[18];
        let eIm9 = out512[19];
        let tRe9 = 0.9039893150329590;
        let tRe23 = 0.4275551140308380;
        let resIm9_s = eIm9 + (oRe9 * tRe23 + oIm9 * tRe9);
        out512[19] = resIm9_s;
        out512[239] = -resIm9_s;
        let resRe9_s = eRe9 + (oRe9 * tRe9 - oIm9 * tRe23);
        out512[238] = resRe9_s;
        out512[18] = resRe9_s;
        let resRe55_s = eRe9 - (oRe9 * tRe9 - oIm9 * tRe23);
        out512[146] = resRe55_s;
        out512[110] = resRe55_s;
        let resIm55_s = -eIm9 + (oRe9 * tRe23 + oIm9 * tRe9);
        out512[111] = resIm55_s;
        out512[147] = -resIm55_s;
        
        let oRe10 = out512[148];
        let oIm10 = out512[149];
        let eRe10 = out512[20];
        let eIm10 = out512[21];
        let tRe10 = 0.8819212913513184;
        let tRe22 = 0.4713967740535736;
        let resIm10_s = eIm10 + (oRe10 * tRe22 + oIm10 * tRe10);
        out512[21] = resIm10_s;
        out512[237] = -resIm10_s;
        let resRe10_s = eRe10 + (oRe10 * tRe10 - oIm10 * tRe22);
        out512[236] = resRe10_s;
        out512[20] = resRe10_s;
        let resRe54_s = eRe10 - (oRe10 * tRe10 - oIm10 * tRe22);
        out512[148] = resRe54_s;
        out512[108] = resRe54_s;
        let resIm54_s = -eIm10 + (oRe10 * tRe22 + oIm10 * tRe10);
        out512[109] = resIm54_s;
        out512[149] = -resIm54_s;
        
        let oRe11 = out512[150];
        let oIm11 = out512[151];
        let eRe11 = out512[22];
        let eIm11 = out512[23];
        let tRe11 = 0.8577286005020142;
        let tRe21 = 0.5141028165817261;
        let resIm11_s = eIm11 + (oRe11 * tRe21 + oIm11 * tRe11);
        out512[23] = resIm11_s;
        out512[235] = -resIm11_s;
        let resRe11_s = eRe11 + (oRe11 * tRe11 - oIm11 * tRe21);
        out512[234] = resRe11_s;
        out512[22] = resRe11_s;
        let resRe53_s = eRe11 - (oRe11 * tRe11 - oIm11 * tRe21);
        out512[150] = resRe53_s;
        out512[106] = resRe53_s;
        let resIm53_s = -eIm11 + (oRe11 * tRe21 + oIm11 * tRe11);
        out512[107] = resIm53_s;
        out512[151] = -resIm53_s;
        
        let oRe12 = out512[152];
        let oIm12 = out512[153];
        let eRe12 = out512[24];
        let eIm12 = out512[25];
        let tRe12 = 0.8314695954322815;
        let tRe20 = 0.5555702447891235;
        let resIm12_s = eIm12 + (oRe12 * tRe20 + oIm12 * tRe12);
        out512[25] = resIm12_s;
        out512[233] = -resIm12_s;
        let resRe12_s = eRe12 + (oRe12 * tRe12 - oIm12 * tRe20);
        out512[232] = resRe12_s;
        out512[24] = resRe12_s;
        let resRe52_s = eRe12 - (oRe12 * tRe12 - oIm12 * tRe20);
        out512[152] = resRe52_s;
        out512[104] = resRe52_s;
        let resIm52_s = -eIm12 + (oRe12 * tRe20 + oIm12 * tRe12);
        out512[105] = resIm52_s;
        out512[153] = -resIm52_s;
        
        let oRe13 = out512[154];
        let oIm13 = out512[155];
        let eRe13 = out512[26];
        let eIm13 = out512[27];
        let tRe13 = 0.8032075166702271;
        let tRe19 = 0.5956993103027344;
        let resIm13_s = eIm13 + (oRe13 * tRe19 + oIm13 * tRe13);
        out512[27] = resIm13_s;
        out512[231] = -resIm13_s;
        let resRe13_s = eRe13 + (oRe13 * tRe13 - oIm13 * tRe19);
        out512[230] = resRe13_s;
        out512[26] = resRe13_s;
        let resRe51_s = eRe13 - (oRe13 * tRe13 - oIm13 * tRe19);
        out512[154] = resRe51_s;
        out512[102] = resRe51_s;
        let resIm51_s = -eIm13 + (oRe13 * tRe19 + oIm13 * tRe13);
        out512[103] = resIm51_s;
        out512[155] = -resIm51_s;
        
        let oRe14 = out512[156];
        let oIm14 = out512[157];
        let eRe14 = out512[28];
        let eIm14 = out512[29];
        let tRe14 = 0.7730104923248291;
        let tRe18 = 0.6343932747840881;
        let resIm14_s = eIm14 + (oRe14 * tRe18 + oIm14 * tRe14);
        out512[29] = resIm14_s;
        out512[229] = -resIm14_s;
        let resRe14_s = eRe14 + (oRe14 * tRe14 - oIm14 * tRe18);
        out512[228] = resRe14_s;
        out512[28] = resRe14_s;
        let resRe50_s = eRe14 - (oRe14 * tRe14 - oIm14 * tRe18);
        out512[156] = resRe50_s;
        out512[100] = resRe50_s;
        let resIm50_s = -eIm14 + (oRe14 * tRe18 + oIm14 * tRe14);
        out512[101] = resIm50_s;
        out512[157] = -resIm50_s;
        
        let oRe15 = out512[158];
        let oIm15 = out512[159];
        let eRe15 = out512[30];
        let eIm15 = out512[31];
        let tRe15 = 0.7409511208534241;
        let tRe17 = 0.6715589761734009;
        let resIm15_s = eIm15 + (oRe15 * tRe17 + oIm15 * tRe15);
        out512[31] = resIm15_s;
        out512[227] = -resIm15_s;
        let resRe15_s = eRe15 + (oRe15 * tRe15 - oIm15 * tRe17);
        out512[226] = resRe15_s;
        out512[30] = resRe15_s;
        let resRe49_s = eRe15 - (oRe15 * tRe15 - oIm15 * tRe17);
        out512[158] = resRe49_s;
        out512[98] = resRe49_s;
        let resIm49_s = -eIm15 + (oRe15 * tRe17 + oIm15 * tRe15);
        out512[99] = resIm49_s;
        out512[159] = -resIm49_s;
        
        let oRe16 = out512[160];
        let oIm16 = out512[161];
        let eRe16 = out512[32];
        let eIm16 = out512[33];
        let tRe16 = 0.7071067690849304;
        let resIm16_s = eIm16 + (oRe16 * tRe16 + oIm16 * tRe16);
        out512[33] = resIm16_s;
        out512[225] = -resIm16_s;
        let resRe16_s = eRe16 + (oRe16 * tRe16 - oIm16 * tRe16);
        out512[224] = resRe16_s;
        out512[32] = resRe16_s;
        let resRe48_s = eRe16 - (oRe16 * tRe16 - oIm16 * tRe16);
        out512[160] = resRe48_s;
        out512[96] = resRe48_s;
        let resIm48_s = -eIm16 + (oRe16 * tRe16 + oIm16 * tRe16);
        out512[97] = resIm48_s;
        out512[161] = -resIm48_s;
        
        let oRe17 = out512[162];
        let oIm17 = out512[163];
        let eRe17 = out512[34];
        let eIm17 = out512[35];
        let resIm17_s = eIm17 + (oRe17 * tRe15 + oIm17 * tRe17);
        out512[35] = resIm17_s;
        out512[223] = -resIm17_s;
        let resRe17_s = eRe17 + (oRe17 * tRe17 - oIm17 * tRe15);
        out512[222] = resRe17_s;
        out512[34] = resRe17_s;
        let resRe47_s = eRe17 - (oRe17 * tRe17 - oIm17 * tRe15);
        out512[162] = resRe47_s;
        out512[94] = resRe47_s;
        let resIm47_s = -eIm17 + (oRe17 * tRe15 + oIm17 * tRe17);
        out512[95] = resIm47_s;
        out512[163] = -resIm47_s;
        
        let oRe18 = out512[164];
        let oIm18 = out512[165];
        let eRe18 = out512[36];
        let eIm18 = out512[37];
        let resIm18_s = eIm18 + (oRe18 * tRe14 + oIm18 * tRe18);
        out512[37] = resIm18_s;
        out512[221] = -resIm18_s;
        let resRe18_s = eRe18 + (oRe18 * tRe18 - oIm18 * tRe14);
        out512[220] = resRe18_s;
        out512[36] = resRe18_s;
        let resRe46_s = eRe18 - (oRe18 * tRe18 - oIm18 * tRe14);
        out512[164] = resRe46_s;
        out512[92] = resRe46_s;
        let resIm46_s = -eIm18 + (oRe18 * tRe14 + oIm18 * tRe18);
        out512[93] = resIm46_s;
        out512[165] = -resIm46_s;
        
        let oRe19 = out512[166];
        let oIm19 = out512[167];
        let eRe19 = out512[38];
        let eIm19 = out512[39];
        let resIm19_s = eIm19 + (oRe19 * tRe13 + oIm19 * tRe19);
        out512[39] = resIm19_s;
        out512[219] = -resIm19_s;
        let resRe19_s = eRe19 + (oRe19 * tRe19 - oIm19 * tRe13);
        out512[218] = resRe19_s;
        out512[38] = resRe19_s;
        let resRe45_s = eRe19 - (oRe19 * tRe19 - oIm19 * tRe13);
        out512[166] = resRe45_s;
        out512[90] = resRe45_s;
        let resIm45_s = -eIm19 + (oRe19 * tRe13 + oIm19 * tRe19);
        out512[91] = resIm45_s;
        out512[167] = -resIm45_s;
        
        let oRe20 = out512[168];
        let oIm20 = out512[169];
        let eRe20 = out512[40];
        let eIm20 = out512[41];
        let resIm20_s = eIm20 + (oRe20 * tRe12 + oIm20 * tRe20);
        out512[41] = resIm20_s;
        out512[217] = -resIm20_s;
        let resRe20_s = eRe20 + (oRe20 * tRe20 - oIm20 * tRe12);
        out512[216] = resRe20_s;
        out512[40] = resRe20_s;
        let resRe44_s = eRe20 - (oRe20 * tRe20 - oIm20 * tRe12);
        out512[168] = resRe44_s;
        out512[88] = resRe44_s;
        let resIm44_s = -eIm20 + (oRe20 * tRe12 + oIm20 * tRe20);
        out512[89] = resIm44_s;
        out512[169] = -resIm44_s;
        
        let oRe21 = out512[170];
        let oIm21 = out512[171];
        let eRe21 = out512[42];
        let eIm21 = out512[43];
        let resIm21_s = eIm21 + (oRe21 * tRe11 + oIm21 * tRe21);
        out512[43] = resIm21_s;
        out512[215] = -resIm21_s;
        let resRe21_s = eRe21 + (oRe21 * tRe21 - oIm21 * tRe11);
        out512[214] = resRe21_s;
        out512[42] = resRe21_s;
        let resRe43_s = eRe21 - (oRe21 * tRe21 - oIm21 * tRe11);
        out512[170] = resRe43_s;
        out512[86] = resRe43_s;
        let resIm43_s = -eIm21 + (oRe21 * tRe11 + oIm21 * tRe21);
        out512[87] = resIm43_s;
        out512[171] = -resIm43_s;
        
        let oRe22 = out512[172];
        let oIm22 = out512[173];
        let eRe22 = out512[44];
        let eIm22 = out512[45];
        let resIm22_s = eIm22 + (oRe22 * tRe10 + oIm22 * tRe22);
        out512[45] = resIm22_s;
        out512[213] = -resIm22_s;
        let resRe22_s = eRe22 + (oRe22 * tRe22 - oIm22 * tRe10);
        out512[212] = resRe22_s;
        out512[44] = resRe22_s;
        let resRe42_s = eRe22 - (oRe22 * tRe22 - oIm22 * tRe10);
        out512[172] = resRe42_s;
        out512[84] = resRe42_s;
        let resIm42_s = -eIm22 + (oRe22 * tRe10 + oIm22 * tRe22);
        out512[85] = resIm42_s;
        out512[173] = -resIm42_s;
        
        let oRe23 = out512[174];
        let oIm23 = out512[175];
        let eRe23 = out512[46];
        let eIm23 = out512[47];
        let resIm23_s = eIm23 + (oRe23 * tRe9 + oIm23 * tRe23);
        out512[47] = resIm23_s;
        out512[211] = -resIm23_s;
        let resRe23_s = eRe23 + (oRe23 * tRe23 - oIm23 * tRe9);
        out512[210] = resRe23_s;
        out512[46] = resRe23_s;
        let resRe41_s = eRe23 - (oRe23 * tRe23 - oIm23 * tRe9);
        out512[174] = resRe41_s;
        out512[82] = resRe41_s;
        let resIm41_s = -eIm23 + (oRe23 * tRe9 + oIm23 * tRe23);
        out512[83] = resIm41_s;
        out512[175] = -resIm41_s;
        
        let oRe24 = out512[176];
        let oIm24 = out512[177];
        let eRe24 = out512[48];
        let eIm24 = out512[49];
        let resIm24_s = eIm24 + (oRe24 * tRe8 + oIm24 * tRe24);
        out512[49] = resIm24_s;
        out512[209] = -resIm24_s;
        let resRe24_s = eRe24 + (oRe24 * tRe24 - oIm24 * tRe8);
        out512[208] = resRe24_s;
        out512[48] = resRe24_s;
        let resRe40_s = eRe24 - (oRe24 * tRe24 - oIm24 * tRe8);
        out512[176] = resRe40_s;
        out512[80] = resRe40_s;
        let resIm40_s = -eIm24 + (oRe24 * tRe8 + oIm24 * tRe24);
        out512[81] = resIm40_s;
        out512[177] = -resIm40_s;
        
        let oRe25 = out512[178];
        let oIm25 = out512[179];
        let eRe25 = out512[50];
        let eIm25 = out512[51];
        let resIm25_s = eIm25 + (oRe25 * tRe7 + oIm25 * tRe25);
        out512[51] = resIm25_s;
        out512[207] = -resIm25_s;
        let resRe25_s = eRe25 + (oRe25 * tRe25 - oIm25 * tRe7);
        out512[206] = resRe25_s;
        out512[50] = resRe25_s;
        let resRe39_s = eRe25 - (oRe25 * tRe25 - oIm25 * tRe7);
        out512[178] = resRe39_s;
        out512[78] = resRe39_s;
        let resIm39_s = -eIm25 + (oRe25 * tRe7 + oIm25 * tRe25);
        out512[79] = resIm39_s;
        out512[179] = -resIm39_s;
        
        let oRe26 = out512[180];
        let oIm26 = out512[181];
        let eRe26 = out512[52];
        let eIm26 = out512[53];
        let resIm26_s = eIm26 + (oRe26 * tRe6 + oIm26 * tRe26);
        out512[53] = resIm26_s;
        out512[205] = -resIm26_s;
        let resRe26_s = eRe26 + (oRe26 * tRe26 - oIm26 * tRe6);
        out512[204] = resRe26_s;
        out512[52] = resRe26_s;
        let resRe38_s = eRe26 - (oRe26 * tRe26 - oIm26 * tRe6);
        out512[180] = resRe38_s;
        out512[76] = resRe38_s;
        let resIm38_s = -eIm26 + (oRe26 * tRe6 + oIm26 * tRe26);
        out512[77] = resIm38_s;
        out512[181] = -resIm38_s;
        
        let oRe27 = out512[182];
        let oIm27 = out512[183];
        let eRe27 = out512[54];
        let eIm27 = out512[55];
        let resIm27_s = eIm27 + (oRe27 * tRe5 + oIm27 * tRe27);
        out512[55] = resIm27_s;
        out512[203] = -resIm27_s;
        let resRe27_s = eRe27 + (oRe27 * tRe27 - oIm27 * tRe5);
        out512[202] = resRe27_s;
        out512[54] = resRe27_s;
        let resRe37_s = eRe27 - (oRe27 * tRe27 - oIm27 * tRe5);
        out512[182] = resRe37_s;
        out512[74] = resRe37_s;
        let resIm37_s = -eIm27 + (oRe27 * tRe5 + oIm27 * tRe27);
        out512[75] = resIm37_s;
        out512[183] = -resIm37_s;
        
        let oRe28 = out512[184];
        let oIm28 = out512[185];
        let eRe28 = out512[56];
        let eIm28 = out512[57];
        let resIm28_s = eIm28 + (oRe28 * tRe4 + oIm28 * tRe28);
        out512[57] = resIm28_s;
        out512[201] = -resIm28_s;
        let resRe28_s = eRe28 + (oRe28 * tRe28 - oIm28 * tRe4);
        out512[200] = resRe28_s;
        out512[56] = resRe28_s;
        let resRe36_s = eRe28 - (oRe28 * tRe28 - oIm28 * tRe4);
        out512[184] = resRe36_s;
        out512[72] = resRe36_s;
        let resIm36_s = -eIm28 + (oRe28 * tRe4 + oIm28 * tRe28);
        out512[73] = resIm36_s;
        out512[185] = -resIm36_s;
        
        let oRe29 = out512[186];
        let oIm29 = out512[187];
        let eRe29 = out512[58];
        let eIm29 = out512[59];
        let resIm29_s = eIm29 + (oRe29 * tRe3 + oIm29 * tRe29);
        out512[59] = resIm29_s;
        out512[199] = -resIm29_s;
        let resRe29_s = eRe29 + (oRe29 * tRe29 - oIm29 * tRe3);
        out512[198] = resRe29_s;
        out512[58] = resRe29_s;
        let resRe35_s = eRe29 - (oRe29 * tRe29 - oIm29 * tRe3);
        out512[186] = resRe35_s;
        out512[70] = resRe35_s;
        let resIm35_s = -eIm29 + (oRe29 * tRe3 + oIm29 * tRe29);
        out512[71] = resIm35_s;
        out512[187] = -resIm35_s;
        
        let oRe30 = out512[188];
        let oIm30 = out512[189];
        let eRe30 = out512[60];
        let eIm30 = out512[61];
        let resIm30_s = eIm30 + (oRe30 * tRe2 + oIm30 * tRe30);
        out512[61] = resIm30_s;
        out512[197] = -resIm30_s;
        let resRe30_s = eRe30 + (oRe30 * tRe30 - oIm30 * tRe2);
        out512[196] = resRe30_s;
        out512[60] = resRe30_s;
        let resRe34_s = eRe30 - (oRe30 * tRe30 - oIm30 * tRe2);
        out512[188] = resRe34_s;
        out512[68] = resRe34_s;
        let resIm34_s = -eIm30 + (oRe30 * tRe2 + oIm30 * tRe30);
        out512[69] = resIm34_s;
        out512[189] = -resIm34_s;
        
        let oRe31 = out512[190];
        let oIm31 = out512[191];
        let eRe31 = out512[62];
        let eIm31 = out512[63];
        let resIm31_s = eIm31 + (oRe31 * tRe1 + oIm31 * tRe31);
        out512[63] = resIm31_s;
        out512[195] = -resIm31_s;
        let resRe31_s = eRe31 + (oRe31 * tRe31 - oIm31 * tRe1);
        out512[194] = resRe31_s;
        out512[62] = resRe31_s;
        let resRe33_s = eRe31 - (oRe31 * tRe31 - oIm31 * tRe1);
        out512[190] = resRe33_s;
        out512[66] = resRe33_s;
        let resIm33_s = -eIm31 + (oRe31 * tRe1 + oIm31 * tRe31);
        out512[67] = resIm33_s;
        out512[191] = -resIm33_s;
        
        let oRe32 = out512[192];
        let oIm32 = out512[193];
        let eRe32 = out512[64];
        let eIm32 = out512[65];
        let resIm32_s = eIm32 + oRe32;
        out512[65] = resIm32_s;
        out512[193] = -resIm32_s;
        let resRe32_s = eRe32 - oIm32;
        out512[192] = resRe32_s;
        out512[64] = resRe32_s;
        
        let oRe256 = out512[384];
        let oIm256 = out512[385];
        let eRe256 = out512[256];
        let eIm256 = out512[257];
        let resRe256_s = eRe256 + oRe256;
        out512[256] = resRe256_s;
        let resIm256_s = eIm256 + oIm256;
        out512[257] = resIm256_s;
        let resRe256_d = eRe256 - oRe256;
        out512[384] = resRe256_d;
        let resIm256_d = eIm256 - oIm256;
        out512[385] = resIm256_d;
        
        let oRe257 = out512[386];
        let oIm257 = out512[387];
        let eRe257 = out512[258];
        let eIm257 = out512[259];
        let tRe257 = 0.9987954497337341;
        let tRe287 = 0.0490676499903202;
        let resIm257_s = eIm257 + (oRe257 * tRe287 + oIm257 * tRe257);
        out512[259] = resIm257_s;
        out512[511] = -resIm257_s;
        let resRe257_s = eRe257 + (oRe257 * tRe257 - oIm257 * tRe287);
        out512[510] = resRe257_s;
        out512[258] = resRe257_s;
        let resRe319_s = eRe257 - (oRe257 * tRe257 - oIm257 * tRe287);
        out512[386] = resRe319_s;
        out512[382] = resRe319_s;
        let resIm319_s = -eIm257 + (oRe257 * tRe287 + oIm257 * tRe257);
        out512[383] = resIm319_s;
        out512[387] = -resIm319_s;
        
        let oRe258 = out512[388];
        let oIm258 = out512[389];
        let eRe258 = out512[260];
        let eIm258 = out512[261];
        let tRe258 = 0.9951847195625305;
        let tRe286 = 0.0980171337723732;
        let resIm258_s = eIm258 + (oRe258 * tRe286 + oIm258 * tRe258);
        out512[261] = resIm258_s;
        out512[509] = -resIm258_s;
        let resRe258_s = eRe258 + (oRe258 * tRe258 - oIm258 * tRe286);
        out512[508] = resRe258_s;
        out512[260] = resRe258_s;
        let resRe318_s = eRe258 - (oRe258 * tRe258 - oIm258 * tRe286);
        out512[388] = resRe318_s;
        out512[380] = resRe318_s;
        let resIm318_s = -eIm258 + (oRe258 * tRe286 + oIm258 * tRe258);
        out512[381] = resIm318_s;
        out512[389] = -resIm318_s;
        
        let oRe259 = out512[390];
        let oIm259 = out512[391];
        let eRe259 = out512[262];
        let eIm259 = out512[263];
        let tRe259 = 0.9891765117645264;
        let tRe285 = 0.1467304974794388;
        let resIm259_s = eIm259 + (oRe259 * tRe285 + oIm259 * tRe259);
        out512[263] = resIm259_s;
        out512[507] = -resIm259_s;
        let resRe259_s = eRe259 + (oRe259 * tRe259 - oIm259 * tRe285);
        out512[506] = resRe259_s;
        out512[262] = resRe259_s;
        let resRe317_s = eRe259 - (oRe259 * tRe259 - oIm259 * tRe285);
        out512[390] = resRe317_s;
        out512[378] = resRe317_s;
        let resIm317_s = -eIm259 + (oRe259 * tRe285 + oIm259 * tRe259);
        out512[379] = resIm317_s;
        out512[391] = -resIm317_s;
        
        let oRe260 = out512[392];
        let oIm260 = out512[393];
        let eRe260 = out512[264];
        let eIm260 = out512[265];
        let tRe260 = 0.9807852506637573;
        let tRe284 = 0.1950903534889221;
        let resIm260_s = eIm260 + (oRe260 * tRe284 + oIm260 * tRe260);
        out512[265] = resIm260_s;
        out512[505] = -resIm260_s;
        let resRe260_s = eRe260 + (oRe260 * tRe260 - oIm260 * tRe284);
        out512[504] = resRe260_s;
        out512[264] = resRe260_s;
        let resRe316_s = eRe260 - (oRe260 * tRe260 - oIm260 * tRe284);
        out512[392] = resRe316_s;
        out512[376] = resRe316_s;
        let resIm316_s = -eIm260 + (oRe260 * tRe284 + oIm260 * tRe260);
        out512[377] = resIm316_s;
        out512[393] = -resIm316_s;
        
        let oRe261 = out512[394];
        let oIm261 = out512[395];
        let eRe261 = out512[266];
        let eIm261 = out512[267];
        let tRe261 = 0.9700312614440918;
        let tRe283 = 0.2429802417755127;
        let resIm261_s = eIm261 + (oRe261 * tRe283 + oIm261 * tRe261);
        out512[267] = resIm261_s;
        out512[503] = -resIm261_s;
        let resRe261_s = eRe261 + (oRe261 * tRe261 - oIm261 * tRe283);
        out512[502] = resRe261_s;
        out512[266] = resRe261_s;
        let resRe315_s = eRe261 - (oRe261 * tRe261 - oIm261 * tRe283);
        out512[394] = resRe315_s;
        out512[374] = resRe315_s;
        let resIm315_s = -eIm261 + (oRe261 * tRe283 + oIm261 * tRe261);
        out512[375] = resIm315_s;
        out512[395] = -resIm315_s;
        
        let oRe262 = out512[396];
        let oIm262 = out512[397];
        let eRe262 = out512[268];
        let eIm262 = out512[269];
        let tRe262 = 0.9569403529167175;
        let tRe282 = 0.2902846336364746;
        let resIm262_s = eIm262 + (oRe262 * tRe282 + oIm262 * tRe262);
        out512[269] = resIm262_s;
        out512[501] = -resIm262_s;
        let resRe262_s = eRe262 + (oRe262 * tRe262 - oIm262 * tRe282);
        out512[500] = resRe262_s;
        out512[268] = resRe262_s;
        let resRe314_s = eRe262 - (oRe262 * tRe262 - oIm262 * tRe282);
        out512[396] = resRe314_s;
        out512[372] = resRe314_s;
        let resIm314_s = -eIm262 + (oRe262 * tRe282 + oIm262 * tRe262);
        out512[373] = resIm314_s;
        out512[397] = -resIm314_s;
        
        let oRe263 = out512[398];
        let oIm263 = out512[399];
        let eRe263 = out512[270];
        let eIm263 = out512[271];
        let tRe263 = 0.9415440559387207;
        let tRe281 = 0.3368898332118988;
        let resIm263_s = eIm263 + (oRe263 * tRe281 + oIm263 * tRe263);
        out512[271] = resIm263_s;
        out512[499] = -resIm263_s;
        let resRe263_s = eRe263 + (oRe263 * tRe263 - oIm263 * tRe281);
        out512[498] = resRe263_s;
        out512[270] = resRe263_s;
        let resRe313_s = eRe263 - (oRe263 * tRe263 - oIm263 * tRe281);
        out512[398] = resRe313_s;
        out512[370] = resRe313_s;
        let resIm313_s = -eIm263 + (oRe263 * tRe281 + oIm263 * tRe263);
        out512[371] = resIm313_s;
        out512[399] = -resIm313_s;
        
        let oRe264 = out512[400];
        let oIm264 = out512[401];
        let eRe264 = out512[272];
        let eIm264 = out512[273];
        let tRe264 = 0.9238795042037964;
        let tRe280 = 0.3826834261417389;
        let resIm264_s = eIm264 + (oRe264 * tRe280 + oIm264 * tRe264);
        out512[273] = resIm264_s;
        out512[497] = -resIm264_s;
        let resRe264_s = eRe264 + (oRe264 * tRe264 - oIm264 * tRe280);
        out512[496] = resRe264_s;
        out512[272] = resRe264_s;
        let resRe312_s = eRe264 - (oRe264 * tRe264 - oIm264 * tRe280);
        out512[400] = resRe312_s;
        out512[368] = resRe312_s;
        let resIm312_s = -eIm264 + (oRe264 * tRe280 + oIm264 * tRe264);
        out512[369] = resIm312_s;
        out512[401] = -resIm312_s;
        
        let oRe265 = out512[402];
        let oIm265 = out512[403];
        let eRe265 = out512[274];
        let eIm265 = out512[275];
        let tRe265 = 0.9039893150329590;
        let tRe279 = 0.4275551140308380;
        let resIm265_s = eIm265 + (oRe265 * tRe279 + oIm265 * tRe265);
        out512[275] = resIm265_s;
        out512[495] = -resIm265_s;
        let resRe265_s = eRe265 + (oRe265 * tRe265 - oIm265 * tRe279);
        out512[494] = resRe265_s;
        out512[274] = resRe265_s;
        let resRe311_s = eRe265 - (oRe265 * tRe265 - oIm265 * tRe279);
        out512[402] = resRe311_s;
        out512[366] = resRe311_s;
        let resIm311_s = -eIm265 + (oRe265 * tRe279 + oIm265 * tRe265);
        out512[367] = resIm311_s;
        out512[403] = -resIm311_s;
        
        let oRe266 = out512[404];
        let oIm266 = out512[405];
        let eRe266 = out512[276];
        let eIm266 = out512[277];
        let tRe266 = 0.8819212913513184;
        let tRe278 = 0.4713967740535736;
        let resIm266_s = eIm266 + (oRe266 * tRe278 + oIm266 * tRe266);
        out512[277] = resIm266_s;
        out512[493] = -resIm266_s;
        let resRe266_s = eRe266 + (oRe266 * tRe266 - oIm266 * tRe278);
        out512[492] = resRe266_s;
        out512[276] = resRe266_s;
        let resRe310_s = eRe266 - (oRe266 * tRe266 - oIm266 * tRe278);
        out512[404] = resRe310_s;
        out512[364] = resRe310_s;
        let resIm310_s = -eIm266 + (oRe266 * tRe278 + oIm266 * tRe266);
        out512[365] = resIm310_s;
        out512[405] = -resIm310_s;
        
        let oRe267 = out512[406];
        let oIm267 = out512[407];
        let eRe267 = out512[278];
        let eIm267 = out512[279];
        let tRe267 = 0.8577286005020142;
        let tRe277 = 0.5141028165817261;
        let resIm267_s = eIm267 + (oRe267 * tRe277 + oIm267 * tRe267);
        out512[279] = resIm267_s;
        out512[491] = -resIm267_s;
        let resRe267_s = eRe267 + (oRe267 * tRe267 - oIm267 * tRe277);
        out512[490] = resRe267_s;
        out512[278] = resRe267_s;
        let resRe309_s = eRe267 - (oRe267 * tRe267 - oIm267 * tRe277);
        out512[406] = resRe309_s;
        out512[362] = resRe309_s;
        let resIm309_s = -eIm267 + (oRe267 * tRe277 + oIm267 * tRe267);
        out512[363] = resIm309_s;
        out512[407] = -resIm309_s;
        
        let oRe268 = out512[408];
        let oIm268 = out512[409];
        let eRe268 = out512[280];
        let eIm268 = out512[281];
        let tRe268 = 0.8314695954322815;
        let tRe276 = 0.5555702447891235;
        let resIm268_s = eIm268 + (oRe268 * tRe276 + oIm268 * tRe268);
        out512[281] = resIm268_s;
        out512[489] = -resIm268_s;
        let resRe268_s = eRe268 + (oRe268 * tRe268 - oIm268 * tRe276);
        out512[488] = resRe268_s;
        out512[280] = resRe268_s;
        let resRe308_s = eRe268 - (oRe268 * tRe268 - oIm268 * tRe276);
        out512[408] = resRe308_s;
        out512[360] = resRe308_s;
        let resIm308_s = -eIm268 + (oRe268 * tRe276 + oIm268 * tRe268);
        out512[361] = resIm308_s;
        out512[409] = -resIm308_s;
        
        let oRe269 = out512[410];
        let oIm269 = out512[411];
        let eRe269 = out512[282];
        let eIm269 = out512[283];
        let tRe269 = 0.8032075166702271;
        let tRe275 = 0.5956993103027344;
        let resIm269_s = eIm269 + (oRe269 * tRe275 + oIm269 * tRe269);
        out512[283] = resIm269_s;
        out512[487] = -resIm269_s;
        let resRe269_s = eRe269 + (oRe269 * tRe269 - oIm269 * tRe275);
        out512[486] = resRe269_s;
        out512[282] = resRe269_s;
        let resRe307_s = eRe269 - (oRe269 * tRe269 - oIm269 * tRe275);
        out512[410] = resRe307_s;
        out512[358] = resRe307_s;
        let resIm307_s = -eIm269 + (oRe269 * tRe275 + oIm269 * tRe269);
        out512[359] = resIm307_s;
        out512[411] = -resIm307_s;
        
        let oRe270 = out512[412];
        let oIm270 = out512[413];
        let eRe270 = out512[284];
        let eIm270 = out512[285];
        let tRe270 = 0.7730104923248291;
        let tRe274 = 0.6343932747840881;
        let resIm270_s = eIm270 + (oRe270 * tRe274 + oIm270 * tRe270);
        out512[285] = resIm270_s;
        out512[485] = -resIm270_s;
        let resRe270_s = eRe270 + (oRe270 * tRe270 - oIm270 * tRe274);
        out512[484] = resRe270_s;
        out512[284] = resRe270_s;
        let resRe306_s = eRe270 - (oRe270 * tRe270 - oIm270 * tRe274);
        out512[412] = resRe306_s;
        out512[356] = resRe306_s;
        let resIm306_s = -eIm270 + (oRe270 * tRe274 + oIm270 * tRe270);
        out512[357] = resIm306_s;
        out512[413] = -resIm306_s;
        
        let oRe271 = out512[414];
        let oIm271 = out512[415];
        let eRe271 = out512[286];
        let eIm271 = out512[287];
        let tRe271 = 0.7409511208534241;
        let tRe273 = 0.6715589761734009;
        let resIm271_s = eIm271 + (oRe271 * tRe273 + oIm271 * tRe271);
        out512[287] = resIm271_s;
        out512[483] = -resIm271_s;
        let resRe271_s = eRe271 + (oRe271 * tRe271 - oIm271 * tRe273);
        out512[482] = resRe271_s;
        out512[286] = resRe271_s;
        let resRe305_s = eRe271 - (oRe271 * tRe271 - oIm271 * tRe273);
        out512[414] = resRe305_s;
        out512[354] = resRe305_s;
        let resIm305_s = -eIm271 + (oRe271 * tRe273 + oIm271 * tRe271);
        out512[355] = resIm305_s;
        out512[415] = -resIm305_s;
        
        let oRe272 = out512[416];
        let oIm272 = out512[417];
        let eRe272 = out512[288];
        let eIm272 = out512[289];
        let tRe272 = 0.7071067690849304;
        let resIm272_s = eIm272 + (oRe272 * tRe272 + oIm272 * tRe272);
        out512[289] = resIm272_s;
        out512[481] = -resIm272_s;
        let resRe272_s = eRe272 + (oRe272 * tRe272 - oIm272 * tRe272);
        out512[480] = resRe272_s;
        out512[288] = resRe272_s;
        let resRe304_s = eRe272 - (oRe272 * tRe272 - oIm272 * tRe272);
        out512[416] = resRe304_s;
        out512[352] = resRe304_s;
        let resIm304_s = -eIm272 + (oRe272 * tRe272 + oIm272 * tRe272);
        out512[353] = resIm304_s;
        out512[417] = -resIm304_s;
        
        let oRe273 = out512[418];
        let oIm273 = out512[419];
        let eRe273 = out512[290];
        let eIm273 = out512[291];
        let resIm273_s = eIm273 + (oRe273 * tRe271 + oIm273 * tRe273);
        out512[291] = resIm273_s;
        out512[479] = -resIm273_s;
        let resRe273_s = eRe273 + (oRe273 * tRe273 - oIm273 * tRe271);
        out512[478] = resRe273_s;
        out512[290] = resRe273_s;
        let resRe303_s = eRe273 - (oRe273 * tRe273 - oIm273 * tRe271);
        out512[418] = resRe303_s;
        out512[350] = resRe303_s;
        let resIm303_s = -eIm273 + (oRe273 * tRe271 + oIm273 * tRe273);
        out512[351] = resIm303_s;
        out512[419] = -resIm303_s;
        
        let oRe274 = out512[420];
        let oIm274 = out512[421];
        let eRe274 = out512[292];
        let eIm274 = out512[293];
        let resIm274_s = eIm274 + (oRe274 * tRe270 + oIm274 * tRe274);
        out512[293] = resIm274_s;
        out512[477] = -resIm274_s;
        let resRe274_s = eRe274 + (oRe274 * tRe274 - oIm274 * tRe270);
        out512[476] = resRe274_s;
        out512[292] = resRe274_s;
        let resRe302_s = eRe274 - (oRe274 * tRe274 - oIm274 * tRe270);
        out512[420] = resRe302_s;
        out512[348] = resRe302_s;
        let resIm302_s = -eIm274 + (oRe274 * tRe270 + oIm274 * tRe274);
        out512[349] = resIm302_s;
        out512[421] = -resIm302_s;
        
        let oRe275 = out512[422];
        let oIm275 = out512[423];
        let eRe275 = out512[294];
        let eIm275 = out512[295];
        let resIm275_s = eIm275 + (oRe275 * tRe269 + oIm275 * tRe275);
        out512[295] = resIm275_s;
        out512[475] = -resIm275_s;
        let resRe275_s = eRe275 + (oRe275 * tRe275 - oIm275 * tRe269);
        out512[474] = resRe275_s;
        out512[294] = resRe275_s;
        let resRe301_s = eRe275 - (oRe275 * tRe275 - oIm275 * tRe269);
        out512[422] = resRe301_s;
        out512[346] = resRe301_s;
        let resIm301_s = -eIm275 + (oRe275 * tRe269 + oIm275 * tRe275);
        out512[347] = resIm301_s;
        out512[423] = -resIm301_s;
        
        let oRe276 = out512[424];
        let oIm276 = out512[425];
        let eRe276 = out512[296];
        let eIm276 = out512[297];
        let resIm276_s = eIm276 + (oRe276 * tRe268 + oIm276 * tRe276);
        out512[297] = resIm276_s;
        out512[473] = -resIm276_s;
        let resRe276_s = eRe276 + (oRe276 * tRe276 - oIm276 * tRe268);
        out512[472] = resRe276_s;
        out512[296] = resRe276_s;
        let resRe300_s = eRe276 - (oRe276 * tRe276 - oIm276 * tRe268);
        out512[424] = resRe300_s;
        out512[344] = resRe300_s;
        let resIm300_s = -eIm276 + (oRe276 * tRe268 + oIm276 * tRe276);
        out512[345] = resIm300_s;
        out512[425] = -resIm300_s;
        
        let oRe277 = out512[426];
        let oIm277 = out512[427];
        let eRe277 = out512[298];
        let eIm277 = out512[299];
        let resIm277_s = eIm277 + (oRe277 * tRe267 + oIm277 * tRe277);
        out512[299] = resIm277_s;
        out512[471] = -resIm277_s;
        let resRe277_s = eRe277 + (oRe277 * tRe277 - oIm277 * tRe267);
        out512[470] = resRe277_s;
        out512[298] = resRe277_s;
        let resRe299_s = eRe277 - (oRe277 * tRe277 - oIm277 * tRe267);
        out512[426] = resRe299_s;
        out512[342] = resRe299_s;
        let resIm299_s = -eIm277 + (oRe277 * tRe267 + oIm277 * tRe277);
        out512[343] = resIm299_s;
        out512[427] = -resIm299_s;
        
        let oRe278 = out512[428];
        let oIm278 = out512[429];
        let eRe278 = out512[300];
        let eIm278 = out512[301];
        let resIm278_s = eIm278 + (oRe278 * tRe266 + oIm278 * tRe278);
        out512[301] = resIm278_s;
        out512[469] = -resIm278_s;
        let resRe278_s = eRe278 + (oRe278 * tRe278 - oIm278 * tRe266);
        out512[468] = resRe278_s;
        out512[300] = resRe278_s;
        let resRe298_s = eRe278 - (oRe278 * tRe278 - oIm278 * tRe266);
        out512[428] = resRe298_s;
        out512[340] = resRe298_s;
        let resIm298_s = -eIm278 + (oRe278 * tRe266 + oIm278 * tRe278);
        out512[341] = resIm298_s;
        out512[429] = -resIm298_s;
        
        let oRe279 = out512[430];
        let oIm279 = out512[431];
        let eRe279 = out512[302];
        let eIm279 = out512[303];
        let resIm279_s = eIm279 + (oRe279 * tRe265 + oIm279 * tRe279);
        out512[303] = resIm279_s;
        out512[467] = -resIm279_s;
        let resRe279_s = eRe279 + (oRe279 * tRe279 - oIm279 * tRe265);
        out512[466] = resRe279_s;
        out512[302] = resRe279_s;
        let resRe297_s = eRe279 - (oRe279 * tRe279 - oIm279 * tRe265);
        out512[430] = resRe297_s;
        out512[338] = resRe297_s;
        let resIm297_s = -eIm279 + (oRe279 * tRe265 + oIm279 * tRe279);
        out512[339] = resIm297_s;
        out512[431] = -resIm297_s;
        
        let oRe280 = out512[432];
        let oIm280 = out512[433];
        let eRe280 = out512[304];
        let eIm280 = out512[305];
        let resIm280_s = eIm280 + (oRe280 * tRe264 + oIm280 * tRe280);
        out512[305] = resIm280_s;
        out512[465] = -resIm280_s;
        let resRe280_s = eRe280 + (oRe280 * tRe280 - oIm280 * tRe264);
        out512[464] = resRe280_s;
        out512[304] = resRe280_s;
        let resRe296_s = eRe280 - (oRe280 * tRe280 - oIm280 * tRe264);
        out512[432] = resRe296_s;
        out512[336] = resRe296_s;
        let resIm296_s = -eIm280 + (oRe280 * tRe264 + oIm280 * tRe280);
        out512[337] = resIm296_s;
        out512[433] = -resIm296_s;
        
        let oRe281 = out512[434];
        let oIm281 = out512[435];
        let eRe281 = out512[306];
        let eIm281 = out512[307];
        let resIm281_s = eIm281 + (oRe281 * tRe263 + oIm281 * tRe281);
        out512[307] = resIm281_s;
        out512[463] = -resIm281_s;
        let resRe281_s = eRe281 + (oRe281 * tRe281 - oIm281 * tRe263);
        out512[462] = resRe281_s;
        out512[306] = resRe281_s;
        let resRe295_s = eRe281 - (oRe281 * tRe281 - oIm281 * tRe263);
        out512[434] = resRe295_s;
        out512[334] = resRe295_s;
        let resIm295_s = -eIm281 + (oRe281 * tRe263 + oIm281 * tRe281);
        out512[335] = resIm295_s;
        out512[435] = -resIm295_s;
        
        let oRe282 = out512[436];
        let oIm282 = out512[437];
        let eRe282 = out512[308];
        let eIm282 = out512[309];
        let resIm282_s = eIm282 + (oRe282 * tRe262 + oIm282 * tRe282);
        out512[309] = resIm282_s;
        out512[461] = -resIm282_s;
        let resRe282_s = eRe282 + (oRe282 * tRe282 - oIm282 * tRe262);
        out512[460] = resRe282_s;
        out512[308] = resRe282_s;
        let resRe294_s = eRe282 - (oRe282 * tRe282 - oIm282 * tRe262);
        out512[436] = resRe294_s;
        out512[332] = resRe294_s;
        let resIm294_s = -eIm282 + (oRe282 * tRe262 + oIm282 * tRe282);
        out512[333] = resIm294_s;
        out512[437] = -resIm294_s;
        
        let oRe283 = out512[438];
        let oIm283 = out512[439];
        let eRe283 = out512[310];
        let eIm283 = out512[311];
        let resIm283_s = eIm283 + (oRe283 * tRe261 + oIm283 * tRe283);
        out512[311] = resIm283_s;
        out512[459] = -resIm283_s;
        let resRe283_s = eRe283 + (oRe283 * tRe283 - oIm283 * tRe261);
        out512[458] = resRe283_s;
        out512[310] = resRe283_s;
        let resRe293_s = eRe283 - (oRe283 * tRe283 - oIm283 * tRe261);
        out512[438] = resRe293_s;
        out512[330] = resRe293_s;
        let resIm293_s = -eIm283 + (oRe283 * tRe261 + oIm283 * tRe283);
        out512[331] = resIm293_s;
        out512[439] = -resIm293_s;
        
        let oRe284 = out512[440];
        let oIm284 = out512[441];
        let eRe284 = out512[312];
        let eIm284 = out512[313];
        let resIm284_s = eIm284 + (oRe284 * tRe260 + oIm284 * tRe284);
        out512[313] = resIm284_s;
        out512[457] = -resIm284_s;
        let resRe284_s = eRe284 + (oRe284 * tRe284 - oIm284 * tRe260);
        out512[456] = resRe284_s;
        out512[312] = resRe284_s;
        let resRe292_s = eRe284 - (oRe284 * tRe284 - oIm284 * tRe260);
        out512[440] = resRe292_s;
        out512[328] = resRe292_s;
        let resIm292_s = -eIm284 + (oRe284 * tRe260 + oIm284 * tRe284);
        out512[329] = resIm292_s;
        out512[441] = -resIm292_s;
        
        let oRe285 = out512[442];
        let oIm285 = out512[443];
        let eRe285 = out512[314];
        let eIm285 = out512[315];
        let resIm285_s = eIm285 + (oRe285 * tRe259 + oIm285 * tRe285);
        out512[315] = resIm285_s;
        out512[455] = -resIm285_s;
        let resRe285_s = eRe285 + (oRe285 * tRe285 - oIm285 * tRe259);
        out512[454] = resRe285_s;
        out512[314] = resRe285_s;
        let resRe291_s = eRe285 - (oRe285 * tRe285 - oIm285 * tRe259);
        out512[442] = resRe291_s;
        out512[326] = resRe291_s;
        let resIm291_s = -eIm285 + (oRe285 * tRe259 + oIm285 * tRe285);
        out512[327] = resIm291_s;
        out512[443] = -resIm291_s;
        
        let oRe286 = out512[444];
        let oIm286 = out512[445];
        let eRe286 = out512[316];
        let eIm286 = out512[317];
        let resIm286_s = eIm286 + (oRe286 * tRe258 + oIm286 * tRe286);
        out512[317] = resIm286_s;
        out512[453] = -resIm286_s;
        let resRe286_s = eRe286 + (oRe286 * tRe286 - oIm286 * tRe258);
        out512[452] = resRe286_s;
        out512[316] = resRe286_s;
        let resRe290_s = eRe286 - (oRe286 * tRe286 - oIm286 * tRe258);
        out512[444] = resRe290_s;
        out512[324] = resRe290_s;
        let resIm290_s = -eIm286 + (oRe286 * tRe258 + oIm286 * tRe286);
        out512[325] = resIm290_s;
        out512[445] = -resIm290_s;
        
        let oRe287 = out512[446];
        let oIm287 = out512[447];
        let eRe287 = out512[318];
        let eIm287 = out512[319];
        let resIm287_s = eIm287 + (oRe287 * tRe257 + oIm287 * tRe287);
        out512[319] = resIm287_s;
        out512[451] = -resIm287_s;
        let resRe287_s = eRe287 + (oRe287 * tRe287 - oIm287 * tRe257);
        out512[450] = resRe287_s;
        out512[318] = resRe287_s;
        let resRe289_s = eRe287 - (oRe287 * tRe287 - oIm287 * tRe257);
        out512[446] = resRe289_s;
        out512[322] = resRe289_s;
        let resIm289_s = -eIm287 + (oRe287 * tRe257 + oIm287 * tRe287);
        out512[323] = resIm289_s;
        out512[447] = -resIm289_s;
        
        let oRe288 = out512[448];
        let oIm288 = out512[449];
        let eRe288 = out512[320];
        let eIm288 = out512[321];
        let resIm288_s = eIm288 + oRe288;
        out512[321] = resIm288_s;
        out512[449] = -resIm288_s;
        let resRe288_s = eRe288 - oIm288;
        out512[448] = resRe288_s;
        out512[320] = resRe288_s;
        
        let oRe512 = out512[640];
        let oIm512 = out512[641];
        let eRe512 = out512[512];
        let eIm512 = out512[513];
        let resRe512_s = eRe512 + oRe512;
        out512[512] = resRe512_s;
        let resIm512_s = eIm512 + oIm512;
        out512[513] = resIm512_s;
        let resRe512_d = eRe512 - oRe512;
        out512[640] = resRe512_d;
        let resIm512_d = eIm512 - oIm512;
        out512[641] = resIm512_d;
        
        let oRe513 = out512[642];
        let oIm513 = out512[643];
        let eRe513 = out512[514];
        let eIm513 = out512[515];
        let tRe513 = 0.9987954497337341;
        let tRe543 = 0.0490676499903202;
        let resIm513_s = eIm513 + (oRe513 * tRe543 + oIm513 * tRe513);
        out512[515] = resIm513_s;
        out512[767] = -resIm513_s;
        let resRe513_s = eRe513 + (oRe513 * tRe513 - oIm513 * tRe543);
        out512[766] = resRe513_s;
        out512[514] = resRe513_s;
        let resRe575_s = eRe513 - (oRe513 * tRe513 - oIm513 * tRe543);
        out512[642] = resRe575_s;
        out512[638] = resRe575_s;
        let resIm575_s = -eIm513 + (oRe513 * tRe543 + oIm513 * tRe513);
        out512[639] = resIm575_s;
        out512[643] = -resIm575_s;
        
        let oRe514 = out512[644];
        let oIm514 = out512[645];
        let eRe514 = out512[516];
        let eIm514 = out512[517];
        let tRe514 = 0.9951847195625305;
        let tRe542 = 0.0980171337723732;
        let resIm514_s = eIm514 + (oRe514 * tRe542 + oIm514 * tRe514);
        out512[517] = resIm514_s;
        out512[765] = -resIm514_s;
        let resRe514_s = eRe514 + (oRe514 * tRe514 - oIm514 * tRe542);
        out512[764] = resRe514_s;
        out512[516] = resRe514_s;
        let resRe574_s = eRe514 - (oRe514 * tRe514 - oIm514 * tRe542);
        out512[644] = resRe574_s;
        out512[636] = resRe574_s;
        let resIm574_s = -eIm514 + (oRe514 * tRe542 + oIm514 * tRe514);
        out512[637] = resIm574_s;
        out512[645] = -resIm574_s;
        
        let oRe515 = out512[646];
        let oIm515 = out512[647];
        let eRe515 = out512[518];
        let eIm515 = out512[519];
        let tRe515 = 0.9891765117645264;
        let tRe541 = 0.1467304974794388;
        let resIm515_s = eIm515 + (oRe515 * tRe541 + oIm515 * tRe515);
        out512[519] = resIm515_s;
        out512[763] = -resIm515_s;
        let resRe515_s = eRe515 + (oRe515 * tRe515 - oIm515 * tRe541);
        out512[762] = resRe515_s;
        out512[518] = resRe515_s;
        let resRe573_s = eRe515 - (oRe515 * tRe515 - oIm515 * tRe541);
        out512[646] = resRe573_s;
        out512[634] = resRe573_s;
        let resIm573_s = -eIm515 + (oRe515 * tRe541 + oIm515 * tRe515);
        out512[635] = resIm573_s;
        out512[647] = -resIm573_s;
        
        let oRe516 = out512[648];
        let oIm516 = out512[649];
        let eRe516 = out512[520];
        let eIm516 = out512[521];
        let tRe516 = 0.9807852506637573;
        let tRe540 = 0.1950903534889221;
        let resIm516_s = eIm516 + (oRe516 * tRe540 + oIm516 * tRe516);
        out512[521] = resIm516_s;
        out512[761] = -resIm516_s;
        let resRe516_s = eRe516 + (oRe516 * tRe516 - oIm516 * tRe540);
        out512[760] = resRe516_s;
        out512[520] = resRe516_s;
        let resRe572_s = eRe516 - (oRe516 * tRe516 - oIm516 * tRe540);
        out512[648] = resRe572_s;
        out512[632] = resRe572_s;
        let resIm572_s = -eIm516 + (oRe516 * tRe540 + oIm516 * tRe516);
        out512[633] = resIm572_s;
        out512[649] = -resIm572_s;
        
        let oRe517 = out512[650];
        let oIm517 = out512[651];
        let eRe517 = out512[522];
        let eIm517 = out512[523];
        let tRe517 = 0.9700312614440918;
        let tRe539 = 0.2429802417755127;
        let resIm517_s = eIm517 + (oRe517 * tRe539 + oIm517 * tRe517);
        out512[523] = resIm517_s;
        out512[759] = -resIm517_s;
        let resRe517_s = eRe517 + (oRe517 * tRe517 - oIm517 * tRe539);
        out512[758] = resRe517_s;
        out512[522] = resRe517_s;
        let resRe571_s = eRe517 - (oRe517 * tRe517 - oIm517 * tRe539);
        out512[650] = resRe571_s;
        out512[630] = resRe571_s;
        let resIm571_s = -eIm517 + (oRe517 * tRe539 + oIm517 * tRe517);
        out512[631] = resIm571_s;
        out512[651] = -resIm571_s;
        
        let oRe518 = out512[652];
        let oIm518 = out512[653];
        let eRe518 = out512[524];
        let eIm518 = out512[525];
        let tRe518 = 0.9569403529167175;
        let tRe538 = 0.2902846336364746;
        let resIm518_s = eIm518 + (oRe518 * tRe538 + oIm518 * tRe518);
        out512[525] = resIm518_s;
        out512[757] = -resIm518_s;
        let resRe518_s = eRe518 + (oRe518 * tRe518 - oIm518 * tRe538);
        out512[756] = resRe518_s;
        out512[524] = resRe518_s;
        let resRe570_s = eRe518 - (oRe518 * tRe518 - oIm518 * tRe538);
        out512[652] = resRe570_s;
        out512[628] = resRe570_s;
        let resIm570_s = -eIm518 + (oRe518 * tRe538 + oIm518 * tRe518);
        out512[629] = resIm570_s;
        out512[653] = -resIm570_s;
        
        let oRe519 = out512[654];
        let oIm519 = out512[655];
        let eRe519 = out512[526];
        let eIm519 = out512[527];
        let tRe519 = 0.9415440559387207;
        let tRe537 = 0.3368898332118988;
        let resIm519_s = eIm519 + (oRe519 * tRe537 + oIm519 * tRe519);
        out512[527] = resIm519_s;
        out512[755] = -resIm519_s;
        let resRe519_s = eRe519 + (oRe519 * tRe519 - oIm519 * tRe537);
        out512[754] = resRe519_s;
        out512[526] = resRe519_s;
        let resRe569_s = eRe519 - (oRe519 * tRe519 - oIm519 * tRe537);
        out512[654] = resRe569_s;
        out512[626] = resRe569_s;
        let resIm569_s = -eIm519 + (oRe519 * tRe537 + oIm519 * tRe519);
        out512[627] = resIm569_s;
        out512[655] = -resIm569_s;
        
        let oRe520 = out512[656];
        let oIm520 = out512[657];
        let eRe520 = out512[528];
        let eIm520 = out512[529];
        let tRe520 = 0.9238795042037964;
        let tRe536 = 0.3826834261417389;
        let resIm520_s = eIm520 + (oRe520 * tRe536 + oIm520 * tRe520);
        out512[529] = resIm520_s;
        out512[753] = -resIm520_s;
        let resRe520_s = eRe520 + (oRe520 * tRe520 - oIm520 * tRe536);
        out512[752] = resRe520_s;
        out512[528] = resRe520_s;
        let resRe568_s = eRe520 - (oRe520 * tRe520 - oIm520 * tRe536);
        out512[656] = resRe568_s;
        out512[624] = resRe568_s;
        let resIm568_s = -eIm520 + (oRe520 * tRe536 + oIm520 * tRe520);
        out512[625] = resIm568_s;
        out512[657] = -resIm568_s;
        
        let oRe521 = out512[658];
        let oIm521 = out512[659];
        let eRe521 = out512[530];
        let eIm521 = out512[531];
        let tRe521 = 0.9039893150329590;
        let tRe535 = 0.4275551140308380;
        let resIm521_s = eIm521 + (oRe521 * tRe535 + oIm521 * tRe521);
        out512[531] = resIm521_s;
        out512[751] = -resIm521_s;
        let resRe521_s = eRe521 + (oRe521 * tRe521 - oIm521 * tRe535);
        out512[750] = resRe521_s;
        out512[530] = resRe521_s;
        let resRe567_s = eRe521 - (oRe521 * tRe521 - oIm521 * tRe535);
        out512[658] = resRe567_s;
        out512[622] = resRe567_s;
        let resIm567_s = -eIm521 + (oRe521 * tRe535 + oIm521 * tRe521);
        out512[623] = resIm567_s;
        out512[659] = -resIm567_s;
        
        let oRe522 = out512[660];
        let oIm522 = out512[661];
        let eRe522 = out512[532];
        let eIm522 = out512[533];
        let tRe522 = 0.8819212913513184;
        let tRe534 = 0.4713967740535736;
        let resIm522_s = eIm522 + (oRe522 * tRe534 + oIm522 * tRe522);
        out512[533] = resIm522_s;
        out512[749] = -resIm522_s;
        let resRe522_s = eRe522 + (oRe522 * tRe522 - oIm522 * tRe534);
        out512[748] = resRe522_s;
        out512[532] = resRe522_s;
        let resRe566_s = eRe522 - (oRe522 * tRe522 - oIm522 * tRe534);
        out512[660] = resRe566_s;
        out512[620] = resRe566_s;
        let resIm566_s = -eIm522 + (oRe522 * tRe534 + oIm522 * tRe522);
        out512[621] = resIm566_s;
        out512[661] = -resIm566_s;
        
        let oRe523 = out512[662];
        let oIm523 = out512[663];
        let eRe523 = out512[534];
        let eIm523 = out512[535];
        let tRe523 = 0.8577286005020142;
        let tRe533 = 0.5141028165817261;
        let resIm523_s = eIm523 + (oRe523 * tRe533 + oIm523 * tRe523);
        out512[535] = resIm523_s;
        out512[747] = -resIm523_s;
        let resRe523_s = eRe523 + (oRe523 * tRe523 - oIm523 * tRe533);
        out512[746] = resRe523_s;
        out512[534] = resRe523_s;
        let resRe565_s = eRe523 - (oRe523 * tRe523 - oIm523 * tRe533);
        out512[662] = resRe565_s;
        out512[618] = resRe565_s;
        let resIm565_s = -eIm523 + (oRe523 * tRe533 + oIm523 * tRe523);
        out512[619] = resIm565_s;
        out512[663] = -resIm565_s;
        
        let oRe524 = out512[664];
        let oIm524 = out512[665];
        let eRe524 = out512[536];
        let eIm524 = out512[537];
        let tRe524 = 0.8314695954322815;
        let tRe532 = 0.5555702447891235;
        let resIm524_s = eIm524 + (oRe524 * tRe532 + oIm524 * tRe524);
        out512[537] = resIm524_s;
        out512[745] = -resIm524_s;
        let resRe524_s = eRe524 + (oRe524 * tRe524 - oIm524 * tRe532);
        out512[744] = resRe524_s;
        out512[536] = resRe524_s;
        let resRe564_s = eRe524 - (oRe524 * tRe524 - oIm524 * tRe532);
        out512[664] = resRe564_s;
        out512[616] = resRe564_s;
        let resIm564_s = -eIm524 + (oRe524 * tRe532 + oIm524 * tRe524);
        out512[617] = resIm564_s;
        out512[665] = -resIm564_s;
        
        let oRe525 = out512[666];
        let oIm525 = out512[667];
        let eRe525 = out512[538];
        let eIm525 = out512[539];
        let tRe525 = 0.8032075166702271;
        let tRe531 = 0.5956993103027344;
        let resIm525_s = eIm525 + (oRe525 * tRe531 + oIm525 * tRe525);
        out512[539] = resIm525_s;
        out512[743] = -resIm525_s;
        let resRe525_s = eRe525 + (oRe525 * tRe525 - oIm525 * tRe531);
        out512[742] = resRe525_s;
        out512[538] = resRe525_s;
        let resRe563_s = eRe525 - (oRe525 * tRe525 - oIm525 * tRe531);
        out512[666] = resRe563_s;
        out512[614] = resRe563_s;
        let resIm563_s = -eIm525 + (oRe525 * tRe531 + oIm525 * tRe525);
        out512[615] = resIm563_s;
        out512[667] = -resIm563_s;
        
        let oRe526 = out512[668];
        let oIm526 = out512[669];
        let eRe526 = out512[540];
        let eIm526 = out512[541];
        let tRe526 = 0.7730104923248291;
        let tRe530 = 0.6343932747840881;
        let resIm526_s = eIm526 + (oRe526 * tRe530 + oIm526 * tRe526);
        out512[541] = resIm526_s;
        out512[741] = -resIm526_s;
        let resRe526_s = eRe526 + (oRe526 * tRe526 - oIm526 * tRe530);
        out512[740] = resRe526_s;
        out512[540] = resRe526_s;
        let resRe562_s = eRe526 - (oRe526 * tRe526 - oIm526 * tRe530);
        out512[668] = resRe562_s;
        out512[612] = resRe562_s;
        let resIm562_s = -eIm526 + (oRe526 * tRe530 + oIm526 * tRe526);
        out512[613] = resIm562_s;
        out512[669] = -resIm562_s;
        
        let oRe527 = out512[670];
        let oIm527 = out512[671];
        let eRe527 = out512[542];
        let eIm527 = out512[543];
        let tRe527 = 0.7409511208534241;
        let tRe529 = 0.6715589761734009;
        let resIm527_s = eIm527 + (oRe527 * tRe529 + oIm527 * tRe527);
        out512[543] = resIm527_s;
        out512[739] = -resIm527_s;
        let resRe527_s = eRe527 + (oRe527 * tRe527 - oIm527 * tRe529);
        out512[738] = resRe527_s;
        out512[542] = resRe527_s;
        let resRe561_s = eRe527 - (oRe527 * tRe527 - oIm527 * tRe529);
        out512[670] = resRe561_s;
        out512[610] = resRe561_s;
        let resIm561_s = -eIm527 + (oRe527 * tRe529 + oIm527 * tRe527);
        out512[611] = resIm561_s;
        out512[671] = -resIm561_s;
        
        let oRe528 = out512[672];
        let oIm528 = out512[673];
        let eRe528 = out512[544];
        let eIm528 = out512[545];
        let tRe528 = 0.7071067690849304;
        let resIm528_s = eIm528 + (oRe528 * tRe528 + oIm528 * tRe528);
        out512[545] = resIm528_s;
        out512[737] = -resIm528_s;
        let resRe528_s = eRe528 + (oRe528 * tRe528 - oIm528 * tRe528);
        out512[736] = resRe528_s;
        out512[544] = resRe528_s;
        let resRe560_s = eRe528 - (oRe528 * tRe528 - oIm528 * tRe528);
        out512[672] = resRe560_s;
        out512[608] = resRe560_s;
        let resIm560_s = -eIm528 + (oRe528 * tRe528 + oIm528 * tRe528);
        out512[609] = resIm560_s;
        out512[673] = -resIm560_s;
        
        let oRe529 = out512[674];
        let oIm529 = out512[675];
        let eRe529 = out512[546];
        let eIm529 = out512[547];
        let resIm529_s = eIm529 + (oRe529 * tRe527 + oIm529 * tRe529);
        out512[547] = resIm529_s;
        out512[735] = -resIm529_s;
        let resRe529_s = eRe529 + (oRe529 * tRe529 - oIm529 * tRe527);
        out512[734] = resRe529_s;
        out512[546] = resRe529_s;
        let resRe559_s = eRe529 - (oRe529 * tRe529 - oIm529 * tRe527);
        out512[674] = resRe559_s;
        out512[606] = resRe559_s;
        let resIm559_s = -eIm529 + (oRe529 * tRe527 + oIm529 * tRe529);
        out512[607] = resIm559_s;
        out512[675] = -resIm559_s;
        
        let oRe530 = out512[676];
        let oIm530 = out512[677];
        let eRe530 = out512[548];
        let eIm530 = out512[549];
        let resIm530_s = eIm530 + (oRe530 * tRe526 + oIm530 * tRe530);
        out512[549] = resIm530_s;
        out512[733] = -resIm530_s;
        let resRe530_s = eRe530 + (oRe530 * tRe530 - oIm530 * tRe526);
        out512[732] = resRe530_s;
        out512[548] = resRe530_s;
        let resRe558_s = eRe530 - (oRe530 * tRe530 - oIm530 * tRe526);
        out512[676] = resRe558_s;
        out512[604] = resRe558_s;
        let resIm558_s = -eIm530 + (oRe530 * tRe526 + oIm530 * tRe530);
        out512[605] = resIm558_s;
        out512[677] = -resIm558_s;
        
        let oRe531 = out512[678];
        let oIm531 = out512[679];
        let eRe531 = out512[550];
        let eIm531 = out512[551];
        let resIm531_s = eIm531 + (oRe531 * tRe525 + oIm531 * tRe531);
        out512[551] = resIm531_s;
        out512[731] = -resIm531_s;
        let resRe531_s = eRe531 + (oRe531 * tRe531 - oIm531 * tRe525);
        out512[730] = resRe531_s;
        out512[550] = resRe531_s;
        let resRe557_s = eRe531 - (oRe531 * tRe531 - oIm531 * tRe525);
        out512[678] = resRe557_s;
        out512[602] = resRe557_s;
        let resIm557_s = -eIm531 + (oRe531 * tRe525 + oIm531 * tRe531);
        out512[603] = resIm557_s;
        out512[679] = -resIm557_s;
        
        let oRe532 = out512[680];
        let oIm532 = out512[681];
        let eRe532 = out512[552];
        let eIm532 = out512[553];
        let resIm532_s = eIm532 + (oRe532 * tRe524 + oIm532 * tRe532);
        out512[553] = resIm532_s;
        out512[729] = -resIm532_s;
        let resRe532_s = eRe532 + (oRe532 * tRe532 - oIm532 * tRe524);
        out512[728] = resRe532_s;
        out512[552] = resRe532_s;
        let resRe556_s = eRe532 - (oRe532 * tRe532 - oIm532 * tRe524);
        out512[680] = resRe556_s;
        out512[600] = resRe556_s;
        let resIm556_s = -eIm532 + (oRe532 * tRe524 + oIm532 * tRe532);
        out512[601] = resIm556_s;
        out512[681] = -resIm556_s;
        
        let oRe533 = out512[682];
        let oIm533 = out512[683];
        let eRe533 = out512[554];
        let eIm533 = out512[555];
        let resIm533_s = eIm533 + (oRe533 * tRe523 + oIm533 * tRe533);
        out512[555] = resIm533_s;
        out512[727] = -resIm533_s;
        let resRe533_s = eRe533 + (oRe533 * tRe533 - oIm533 * tRe523);
        out512[726] = resRe533_s;
        out512[554] = resRe533_s;
        let resRe555_s = eRe533 - (oRe533 * tRe533 - oIm533 * tRe523);
        out512[682] = resRe555_s;
        out512[598] = resRe555_s;
        let resIm555_s = -eIm533 + (oRe533 * tRe523 + oIm533 * tRe533);
        out512[599] = resIm555_s;
        out512[683] = -resIm555_s;
        
        let oRe534 = out512[684];
        let oIm534 = out512[685];
        let eRe534 = out512[556];
        let eIm534 = out512[557];
        let resIm534_s = eIm534 + (oRe534 * tRe522 + oIm534 * tRe534);
        out512[557] = resIm534_s;
        out512[725] = -resIm534_s;
        let resRe534_s = eRe534 + (oRe534 * tRe534 - oIm534 * tRe522);
        out512[724] = resRe534_s;
        out512[556] = resRe534_s;
        let resRe554_s = eRe534 - (oRe534 * tRe534 - oIm534 * tRe522);
        out512[684] = resRe554_s;
        out512[596] = resRe554_s;
        let resIm554_s = -eIm534 + (oRe534 * tRe522 + oIm534 * tRe534);
        out512[597] = resIm554_s;
        out512[685] = -resIm554_s;
        
        let oRe535 = out512[686];
        let oIm535 = out512[687];
        let eRe535 = out512[558];
        let eIm535 = out512[559];
        let resIm535_s = eIm535 + (oRe535 * tRe521 + oIm535 * tRe535);
        out512[559] = resIm535_s;
        out512[723] = -resIm535_s;
        let resRe535_s = eRe535 + (oRe535 * tRe535 - oIm535 * tRe521);
        out512[722] = resRe535_s;
        out512[558] = resRe535_s;
        let resRe553_s = eRe535 - (oRe535 * tRe535 - oIm535 * tRe521);
        out512[686] = resRe553_s;
        out512[594] = resRe553_s;
        let resIm553_s = -eIm535 + (oRe535 * tRe521 + oIm535 * tRe535);
        out512[595] = resIm553_s;
        out512[687] = -resIm553_s;
        
        let oRe536 = out512[688];
        let oIm536 = out512[689];
        let eRe536 = out512[560];
        let eIm536 = out512[561];
        let resIm536_s = eIm536 + (oRe536 * tRe520 + oIm536 * tRe536);
        out512[561] = resIm536_s;
        out512[721] = -resIm536_s;
        let resRe536_s = eRe536 + (oRe536 * tRe536 - oIm536 * tRe520);
        out512[720] = resRe536_s;
        out512[560] = resRe536_s;
        let resRe552_s = eRe536 - (oRe536 * tRe536 - oIm536 * tRe520);
        out512[688] = resRe552_s;
        out512[592] = resRe552_s;
        let resIm552_s = -eIm536 + (oRe536 * tRe520 + oIm536 * tRe536);
        out512[593] = resIm552_s;
        out512[689] = -resIm552_s;
        
        let oRe537 = out512[690];
        let oIm537 = out512[691];
        let eRe537 = out512[562];
        let eIm537 = out512[563];
        let resIm537_s = eIm537 + (oRe537 * tRe519 + oIm537 * tRe537);
        out512[563] = resIm537_s;
        out512[719] = -resIm537_s;
        let resRe537_s = eRe537 + (oRe537 * tRe537 - oIm537 * tRe519);
        out512[718] = resRe537_s;
        out512[562] = resRe537_s;
        let resRe551_s = eRe537 - (oRe537 * tRe537 - oIm537 * tRe519);
        out512[690] = resRe551_s;
        out512[590] = resRe551_s;
        let resIm551_s = -eIm537 + (oRe537 * tRe519 + oIm537 * tRe537);
        out512[591] = resIm551_s;
        out512[691] = -resIm551_s;
        
        let oRe538 = out512[692];
        let oIm538 = out512[693];
        let eRe538 = out512[564];
        let eIm538 = out512[565];
        let resIm538_s = eIm538 + (oRe538 * tRe518 + oIm538 * tRe538);
        out512[565] = resIm538_s;
        out512[717] = -resIm538_s;
        let resRe538_s = eRe538 + (oRe538 * tRe538 - oIm538 * tRe518);
        out512[716] = resRe538_s;
        out512[564] = resRe538_s;
        let resRe550_s = eRe538 - (oRe538 * tRe538 - oIm538 * tRe518);
        out512[692] = resRe550_s;
        out512[588] = resRe550_s;
        let resIm550_s = -eIm538 + (oRe538 * tRe518 + oIm538 * tRe538);
        out512[589] = resIm550_s;
        out512[693] = -resIm550_s;
        
        let oRe539 = out512[694];
        let oIm539 = out512[695];
        let eRe539 = out512[566];
        let eIm539 = out512[567];
        let resIm539_s = eIm539 + (oRe539 * tRe517 + oIm539 * tRe539);
        out512[567] = resIm539_s;
        out512[715] = -resIm539_s;
        let resRe539_s = eRe539 + (oRe539 * tRe539 - oIm539 * tRe517);
        out512[714] = resRe539_s;
        out512[566] = resRe539_s;
        let resRe549_s = eRe539 - (oRe539 * tRe539 - oIm539 * tRe517);
        out512[694] = resRe549_s;
        out512[586] = resRe549_s;
        let resIm549_s = -eIm539 + (oRe539 * tRe517 + oIm539 * tRe539);
        out512[587] = resIm549_s;
        out512[695] = -resIm549_s;
        
        let oRe540 = out512[696];
        let oIm540 = out512[697];
        let eRe540 = out512[568];
        let eIm540 = out512[569];
        let resIm540_s = eIm540 + (oRe540 * tRe516 + oIm540 * tRe540);
        out512[569] = resIm540_s;
        out512[713] = -resIm540_s;
        let resRe540_s = eRe540 + (oRe540 * tRe540 - oIm540 * tRe516);
        out512[712] = resRe540_s;
        out512[568] = resRe540_s;
        let resRe548_s = eRe540 - (oRe540 * tRe540 - oIm540 * tRe516);
        out512[696] = resRe548_s;
        out512[584] = resRe548_s;
        let resIm548_s = -eIm540 + (oRe540 * tRe516 + oIm540 * tRe540);
        out512[585] = resIm548_s;
        out512[697] = -resIm548_s;
        
        let oRe541 = out512[698];
        let oIm541 = out512[699];
        let eRe541 = out512[570];
        let eIm541 = out512[571];
        let resIm541_s = eIm541 + (oRe541 * tRe515 + oIm541 * tRe541);
        out512[571] = resIm541_s;
        out512[711] = -resIm541_s;
        let resRe541_s = eRe541 + (oRe541 * tRe541 - oIm541 * tRe515);
        out512[710] = resRe541_s;
        out512[570] = resRe541_s;
        let resRe547_s = eRe541 - (oRe541 * tRe541 - oIm541 * tRe515);
        out512[698] = resRe547_s;
        out512[582] = resRe547_s;
        let resIm547_s = -eIm541 + (oRe541 * tRe515 + oIm541 * tRe541);
        out512[583] = resIm547_s;
        out512[699] = -resIm547_s;
        
        let oRe542 = out512[700];
        let oIm542 = out512[701];
        let eRe542 = out512[572];
        let eIm542 = out512[573];
        let resIm542_s = eIm542 + (oRe542 * tRe514 + oIm542 * tRe542);
        out512[573] = resIm542_s;
        out512[709] = -resIm542_s;
        let resRe542_s = eRe542 + (oRe542 * tRe542 - oIm542 * tRe514);
        out512[708] = resRe542_s;
        out512[572] = resRe542_s;
        let resRe546_s = eRe542 - (oRe542 * tRe542 - oIm542 * tRe514);
        out512[700] = resRe546_s;
        out512[580] = resRe546_s;
        let resIm546_s = -eIm542 + (oRe542 * tRe514 + oIm542 * tRe542);
        out512[581] = resIm546_s;
        out512[701] = -resIm546_s;
        
        let oRe543 = out512[702];
        let oIm543 = out512[703];
        let eRe543 = out512[574];
        let eIm543 = out512[575];
        let resIm543_s = eIm543 + (oRe543 * tRe513 + oIm543 * tRe543);
        out512[575] = resIm543_s;
        out512[707] = -resIm543_s;
        let resRe543_s = eRe543 + (oRe543 * tRe543 - oIm543 * tRe513);
        out512[706] = resRe543_s;
        out512[574] = resRe543_s;
        let resRe545_s = eRe543 - (oRe543 * tRe543 - oIm543 * tRe513);
        out512[702] = resRe545_s;
        out512[578] = resRe545_s;
        let resIm545_s = -eIm543 + (oRe543 * tRe513 + oIm543 * tRe543);
        out512[579] = resIm545_s;
        out512[703] = -resIm545_s;
        
        let oRe544 = out512[704];
        let oIm544 = out512[705];
        let eRe544 = out512[576];
        let eIm544 = out512[577];
        let resIm544_s = eIm544 + oRe544;
        out512[577] = resIm544_s;
        out512[705] = -resIm544_s;
        let resRe544_s = eRe544 - oIm544;
        out512[704] = resRe544_s;
        out512[576] = resRe544_s;
        
        let oRe768 = out512[896];
        let oIm768 = out512[897];
        let eRe768 = out512[768];
        let eIm768 = out512[769];
        let resRe768_s = eRe768 + oRe768;
        out512[768] = resRe768_s;
        let resIm768_s = eIm768 + oIm768;
        out512[769] = resIm768_s;
        let resRe768_d = eRe768 - oRe768;
        out512[896] = resRe768_d;
        let resIm768_d = eIm768 - oIm768;
        out512[897] = resIm768_d;
        
        let oRe769 = out512[898];
        let oIm769 = out512[899];
        let eRe769 = out512[770];
        let eIm769 = out512[771];
        let tRe769 = 0.9987954497337341;
        let tRe799 = 0.0490676499903202;
        let resIm769_s = eIm769 + (oRe769 * tRe799 + oIm769 * tRe769);
        out512[771] = resIm769_s;
        out512[1023] = -resIm769_s;
        let resRe769_s = eRe769 + (oRe769 * tRe769 - oIm769 * tRe799);
        out512[1022] = resRe769_s;
        out512[770] = resRe769_s;
        let resRe831_s = eRe769 - (oRe769 * tRe769 - oIm769 * tRe799);
        out512[898] = resRe831_s;
        out512[894] = resRe831_s;
        let resIm831_s = -eIm769 + (oRe769 * tRe799 + oIm769 * tRe769);
        out512[895] = resIm831_s;
        out512[899] = -resIm831_s;
        
        let oRe770 = out512[900];
        let oIm770 = out512[901];
        let eRe770 = out512[772];
        let eIm770 = out512[773];
        let tRe770 = 0.9951847195625305;
        let tRe798 = 0.0980171337723732;
        let resIm770_s = eIm770 + (oRe770 * tRe798 + oIm770 * tRe770);
        out512[773] = resIm770_s;
        out512[1021] = -resIm770_s;
        let resRe770_s = eRe770 + (oRe770 * tRe770 - oIm770 * tRe798);
        out512[1020] = resRe770_s;
        out512[772] = resRe770_s;
        let resRe830_s = eRe770 - (oRe770 * tRe770 - oIm770 * tRe798);
        out512[900] = resRe830_s;
        out512[892] = resRe830_s;
        let resIm830_s = -eIm770 + (oRe770 * tRe798 + oIm770 * tRe770);
        out512[893] = resIm830_s;
        out512[901] = -resIm830_s;
        
        let oRe771 = out512[902];
        let oIm771 = out512[903];
        let eRe771 = out512[774];
        let eIm771 = out512[775];
        let tRe771 = 0.9891765117645264;
        let tRe797 = 0.1467304974794388;
        let resIm771_s = eIm771 + (oRe771 * tRe797 + oIm771 * tRe771);
        out512[775] = resIm771_s;
        out512[1019] = -resIm771_s;
        let resRe771_s = eRe771 + (oRe771 * tRe771 - oIm771 * tRe797);
        out512[1018] = resRe771_s;
        out512[774] = resRe771_s;
        let resRe829_s = eRe771 - (oRe771 * tRe771 - oIm771 * tRe797);
        out512[902] = resRe829_s;
        out512[890] = resRe829_s;
        let resIm829_s = -eIm771 + (oRe771 * tRe797 + oIm771 * tRe771);
        out512[891] = resIm829_s;
        out512[903] = -resIm829_s;
        
        let oRe772 = out512[904];
        let oIm772 = out512[905];
        let eRe772 = out512[776];
        let eIm772 = out512[777];
        let tRe772 = 0.9807852506637573;
        let tRe796 = 0.1950903534889221;
        let resIm772_s = eIm772 + (oRe772 * tRe796 + oIm772 * tRe772);
        out512[777] = resIm772_s;
        out512[1017] = -resIm772_s;
        let resRe772_s = eRe772 + (oRe772 * tRe772 - oIm772 * tRe796);
        out512[1016] = resRe772_s;
        out512[776] = resRe772_s;
        let resRe828_s = eRe772 - (oRe772 * tRe772 - oIm772 * tRe796);
        out512[904] = resRe828_s;
        out512[888] = resRe828_s;
        let resIm828_s = -eIm772 + (oRe772 * tRe796 + oIm772 * tRe772);
        out512[889] = resIm828_s;
        out512[905] = -resIm828_s;
        
        let oRe773 = out512[906];
        let oIm773 = out512[907];
        let eRe773 = out512[778];
        let eIm773 = out512[779];
        let tRe773 = 0.9700312614440918;
        let tRe795 = 0.2429802417755127;
        let resIm773_s = eIm773 + (oRe773 * tRe795 + oIm773 * tRe773);
        out512[779] = resIm773_s;
        out512[1015] = -resIm773_s;
        let resRe773_s = eRe773 + (oRe773 * tRe773 - oIm773 * tRe795);
        out512[1014] = resRe773_s;
        out512[778] = resRe773_s;
        let resRe827_s = eRe773 - (oRe773 * tRe773 - oIm773 * tRe795);
        out512[906] = resRe827_s;
        out512[886] = resRe827_s;
        let resIm827_s = -eIm773 + (oRe773 * tRe795 + oIm773 * tRe773);
        out512[887] = resIm827_s;
        out512[907] = -resIm827_s;
        
        let oRe774 = out512[908];
        let oIm774 = out512[909];
        let eRe774 = out512[780];
        let eIm774 = out512[781];
        let tRe774 = 0.9569403529167175;
        let tRe794 = 0.2902846336364746;
        let resIm774_s = eIm774 + (oRe774 * tRe794 + oIm774 * tRe774);
        out512[781] = resIm774_s;
        out512[1013] = -resIm774_s;
        let resRe774_s = eRe774 + (oRe774 * tRe774 - oIm774 * tRe794);
        out512[1012] = resRe774_s;
        out512[780] = resRe774_s;
        let resRe826_s = eRe774 - (oRe774 * tRe774 - oIm774 * tRe794);
        out512[908] = resRe826_s;
        out512[884] = resRe826_s;
        let resIm826_s = -eIm774 + (oRe774 * tRe794 + oIm774 * tRe774);
        out512[885] = resIm826_s;
        out512[909] = -resIm826_s;
        
        let oRe775 = out512[910];
        let oIm775 = out512[911];
        let eRe775 = out512[782];
        let eIm775 = out512[783];
        let tRe775 = 0.9415440559387207;
        let tRe793 = 0.3368898332118988;
        let resIm775_s = eIm775 + (oRe775 * tRe793 + oIm775 * tRe775);
        out512[783] = resIm775_s;
        out512[1011] = -resIm775_s;
        let resRe775_s = eRe775 + (oRe775 * tRe775 - oIm775 * tRe793);
        out512[1010] = resRe775_s;
        out512[782] = resRe775_s;
        let resRe825_s = eRe775 - (oRe775 * tRe775 - oIm775 * tRe793);
        out512[910] = resRe825_s;
        out512[882] = resRe825_s;
        let resIm825_s = -eIm775 + (oRe775 * tRe793 + oIm775 * tRe775);
        out512[883] = resIm825_s;
        out512[911] = -resIm825_s;
        
        let oRe776 = out512[912];
        let oIm776 = out512[913];
        let eRe776 = out512[784];
        let eIm776 = out512[785];
        let tRe776 = 0.9238795042037964;
        let tRe792 = 0.3826834261417389;
        let resIm776_s = eIm776 + (oRe776 * tRe792 + oIm776 * tRe776);
        out512[785] = resIm776_s;
        out512[1009] = -resIm776_s;
        let resRe776_s = eRe776 + (oRe776 * tRe776 - oIm776 * tRe792);
        out512[1008] = resRe776_s;
        out512[784] = resRe776_s;
        let resRe824_s = eRe776 - (oRe776 * tRe776 - oIm776 * tRe792);
        out512[912] = resRe824_s;
        out512[880] = resRe824_s;
        let resIm824_s = -eIm776 + (oRe776 * tRe792 + oIm776 * tRe776);
        out512[881] = resIm824_s;
        out512[913] = -resIm824_s;
        
        let oRe777 = out512[914];
        let oIm777 = out512[915];
        let eRe777 = out512[786];
        let eIm777 = out512[787];
        let tRe777 = 0.9039893150329590;
        let tRe791 = 0.4275551140308380;
        let resIm777_s = eIm777 + (oRe777 * tRe791 + oIm777 * tRe777);
        out512[787] = resIm777_s;
        out512[1007] = -resIm777_s;
        let resRe777_s = eRe777 + (oRe777 * tRe777 - oIm777 * tRe791);
        out512[1006] = resRe777_s;
        out512[786] = resRe777_s;
        let resRe823_s = eRe777 - (oRe777 * tRe777 - oIm777 * tRe791);
        out512[914] = resRe823_s;
        out512[878] = resRe823_s;
        let resIm823_s = -eIm777 + (oRe777 * tRe791 + oIm777 * tRe777);
        out512[879] = resIm823_s;
        out512[915] = -resIm823_s;
        
        let oRe778 = out512[916];
        let oIm778 = out512[917];
        let eRe778 = out512[788];
        let eIm778 = out512[789];
        let tRe778 = 0.8819212913513184;
        let tRe790 = 0.4713967740535736;
        let resIm778_s = eIm778 + (oRe778 * tRe790 + oIm778 * tRe778);
        out512[789] = resIm778_s;
        out512[1005] = -resIm778_s;
        let resRe778_s = eRe778 + (oRe778 * tRe778 - oIm778 * tRe790);
        out512[1004] = resRe778_s;
        out512[788] = resRe778_s;
        let resRe822_s = eRe778 - (oRe778 * tRe778 - oIm778 * tRe790);
        out512[916] = resRe822_s;
        out512[876] = resRe822_s;
        let resIm822_s = -eIm778 + (oRe778 * tRe790 + oIm778 * tRe778);
        out512[877] = resIm822_s;
        out512[917] = -resIm822_s;
        
        let oRe779 = out512[918];
        let oIm779 = out512[919];
        let eRe779 = out512[790];
        let eIm779 = out512[791];
        let tRe779 = 0.8577286005020142;
        let tRe789 = 0.5141028165817261;
        let resIm779_s = eIm779 + (oRe779 * tRe789 + oIm779 * tRe779);
        out512[791] = resIm779_s;
        out512[1003] = -resIm779_s;
        let resRe779_s = eRe779 + (oRe779 * tRe779 - oIm779 * tRe789);
        out512[1002] = resRe779_s;
        out512[790] = resRe779_s;
        let resRe821_s = eRe779 - (oRe779 * tRe779 - oIm779 * tRe789);
        out512[918] = resRe821_s;
        out512[874] = resRe821_s;
        let resIm821_s = -eIm779 + (oRe779 * tRe789 + oIm779 * tRe779);
        out512[875] = resIm821_s;
        out512[919] = -resIm821_s;
        
        let oRe780 = out512[920];
        let oIm780 = out512[921];
        let eRe780 = out512[792];
        let eIm780 = out512[793];
        let tRe780 = 0.8314695954322815;
        let tRe788 = 0.5555702447891235;
        let resIm780_s = eIm780 + (oRe780 * tRe788 + oIm780 * tRe780);
        out512[793] = resIm780_s;
        out512[1001] = -resIm780_s;
        let resRe780_s = eRe780 + (oRe780 * tRe780 - oIm780 * tRe788);
        out512[1000] = resRe780_s;
        out512[792] = resRe780_s;
        let resRe820_s = eRe780 - (oRe780 * tRe780 - oIm780 * tRe788);
        out512[920] = resRe820_s;
        out512[872] = resRe820_s;
        let resIm820_s = -eIm780 + (oRe780 * tRe788 + oIm780 * tRe780);
        out512[873] = resIm820_s;
        out512[921] = -resIm820_s;
        
        let oRe781 = out512[922];
        let oIm781 = out512[923];
        let eRe781 = out512[794];
        let eIm781 = out512[795];
        let tRe781 = 0.8032075166702271;
        let tRe787 = 0.5956993103027344;
        let resIm781_s = eIm781 + (oRe781 * tRe787 + oIm781 * tRe781);
        out512[795] = resIm781_s;
        out512[999] = -resIm781_s;
        let resRe781_s = eRe781 + (oRe781 * tRe781 - oIm781 * tRe787);
        out512[998] = resRe781_s;
        out512[794] = resRe781_s;
        let resRe819_s = eRe781 - (oRe781 * tRe781 - oIm781 * tRe787);
        out512[922] = resRe819_s;
        out512[870] = resRe819_s;
        let resIm819_s = -eIm781 + (oRe781 * tRe787 + oIm781 * tRe781);
        out512[871] = resIm819_s;
        out512[923] = -resIm819_s;
        
        let oRe782 = out512[924];
        let oIm782 = out512[925];
        let eRe782 = out512[796];
        let eIm782 = out512[797];
        let tRe782 = 0.7730104923248291;
        let tRe786 = 0.6343932747840881;
        let resIm782_s = eIm782 + (oRe782 * tRe786 + oIm782 * tRe782);
        out512[797] = resIm782_s;
        out512[997] = -resIm782_s;
        let resRe782_s = eRe782 + (oRe782 * tRe782 - oIm782 * tRe786);
        out512[996] = resRe782_s;
        out512[796] = resRe782_s;
        let resRe818_s = eRe782 - (oRe782 * tRe782 - oIm782 * tRe786);
        out512[924] = resRe818_s;
        out512[868] = resRe818_s;
        let resIm818_s = -eIm782 + (oRe782 * tRe786 + oIm782 * tRe782);
        out512[869] = resIm818_s;
        out512[925] = -resIm818_s;
        
        let oRe783 = out512[926];
        let oIm783 = out512[927];
        let eRe783 = out512[798];
        let eIm783 = out512[799];
        let tRe783 = 0.7409511208534241;
        let tRe785 = 0.6715589761734009;
        let resIm783_s = eIm783 + (oRe783 * tRe785 + oIm783 * tRe783);
        out512[799] = resIm783_s;
        out512[995] = -resIm783_s;
        let resRe783_s = eRe783 + (oRe783 * tRe783 - oIm783 * tRe785);
        out512[994] = resRe783_s;
        out512[798] = resRe783_s;
        let resRe817_s = eRe783 - (oRe783 * tRe783 - oIm783 * tRe785);
        out512[926] = resRe817_s;
        out512[866] = resRe817_s;
        let resIm817_s = -eIm783 + (oRe783 * tRe785 + oIm783 * tRe783);
        out512[867] = resIm817_s;
        out512[927] = -resIm817_s;
        
        let oRe784 = out512[928];
        let oIm784 = out512[929];
        let eRe784 = out512[800];
        let eIm784 = out512[801];
        let tRe784 = 0.7071067690849304;
        let resIm784_s = eIm784 + (oRe784 * tRe784 + oIm784 * tRe784);
        out512[801] = resIm784_s;
        out512[993] = -resIm784_s;
        let resRe784_s = eRe784 + (oRe784 * tRe784 - oIm784 * tRe784);
        out512[992] = resRe784_s;
        out512[800] = resRe784_s;
        let resRe816_s = eRe784 - (oRe784 * tRe784 - oIm784 * tRe784);
        out512[928] = resRe816_s;
        out512[864] = resRe816_s;
        let resIm816_s = -eIm784 + (oRe784 * tRe784 + oIm784 * tRe784);
        out512[865] = resIm816_s;
        out512[929] = -resIm816_s;
        
        let oRe785 = out512[930];
        let oIm785 = out512[931];
        let eRe785 = out512[802];
        let eIm785 = out512[803];
        let resIm785_s = eIm785 + (oRe785 * tRe783 + oIm785 * tRe785);
        out512[803] = resIm785_s;
        out512[991] = -resIm785_s;
        let resRe785_s = eRe785 + (oRe785 * tRe785 - oIm785 * tRe783);
        out512[990] = resRe785_s;
        out512[802] = resRe785_s;
        let resRe815_s = eRe785 - (oRe785 * tRe785 - oIm785 * tRe783);
        out512[930] = resRe815_s;
        out512[862] = resRe815_s;
        let resIm815_s = -eIm785 + (oRe785 * tRe783 + oIm785 * tRe785);
        out512[863] = resIm815_s;
        out512[931] = -resIm815_s;
        
        let oRe786 = out512[932];
        let oIm786 = out512[933];
        let eRe786 = out512[804];
        let eIm786 = out512[805];
        let resIm786_s = eIm786 + (oRe786 * tRe782 + oIm786 * tRe786);
        out512[805] = resIm786_s;
        out512[989] = -resIm786_s;
        let resRe786_s = eRe786 + (oRe786 * tRe786 - oIm786 * tRe782);
        out512[988] = resRe786_s;
        out512[804] = resRe786_s;
        let resRe814_s = eRe786 - (oRe786 * tRe786 - oIm786 * tRe782);
        out512[932] = resRe814_s;
        out512[860] = resRe814_s;
        let resIm814_s = -eIm786 + (oRe786 * tRe782 + oIm786 * tRe786);
        out512[861] = resIm814_s;
        out512[933] = -resIm814_s;
        
        let oRe787 = out512[934];
        let oIm787 = out512[935];
        let eRe787 = out512[806];
        let eIm787 = out512[807];
        let resIm787_s = eIm787 + (oRe787 * tRe781 + oIm787 * tRe787);
        out512[807] = resIm787_s;
        out512[987] = -resIm787_s;
        let resRe787_s = eRe787 + (oRe787 * tRe787 - oIm787 * tRe781);
        out512[986] = resRe787_s;
        out512[806] = resRe787_s;
        let resRe813_s = eRe787 - (oRe787 * tRe787 - oIm787 * tRe781);
        out512[934] = resRe813_s;
        out512[858] = resRe813_s;
        let resIm813_s = -eIm787 + (oRe787 * tRe781 + oIm787 * tRe787);
        out512[859] = resIm813_s;
        out512[935] = -resIm813_s;
        
        let oRe788 = out512[936];
        let oIm788 = out512[937];
        let eRe788 = out512[808];
        let eIm788 = out512[809];
        let resIm788_s = eIm788 + (oRe788 * tRe780 + oIm788 * tRe788);
        out512[809] = resIm788_s;
        out512[985] = -resIm788_s;
        let resRe788_s = eRe788 + (oRe788 * tRe788 - oIm788 * tRe780);
        out512[984] = resRe788_s;
        out512[808] = resRe788_s;
        let resRe812_s = eRe788 - (oRe788 * tRe788 - oIm788 * tRe780);
        out512[936] = resRe812_s;
        out512[856] = resRe812_s;
        let resIm812_s = -eIm788 + (oRe788 * tRe780 + oIm788 * tRe788);
        out512[857] = resIm812_s;
        out512[937] = -resIm812_s;
        
        let oRe789 = out512[938];
        let oIm789 = out512[939];
        let eRe789 = out512[810];
        let eIm789 = out512[811];
        let resIm789_s = eIm789 + (oRe789 * tRe779 + oIm789 * tRe789);
        out512[811] = resIm789_s;
        out512[983] = -resIm789_s;
        let resRe789_s = eRe789 + (oRe789 * tRe789 - oIm789 * tRe779);
        out512[982] = resRe789_s;
        out512[810] = resRe789_s;
        let resRe811_s = eRe789 - (oRe789 * tRe789 - oIm789 * tRe779);
        out512[938] = resRe811_s;
        out512[854] = resRe811_s;
        let resIm811_s = -eIm789 + (oRe789 * tRe779 + oIm789 * tRe789);
        out512[855] = resIm811_s;
        out512[939] = -resIm811_s;
        
        let oRe790 = out512[940];
        let oIm790 = out512[941];
        let eRe790 = out512[812];
        let eIm790 = out512[813];
        let resIm790_s = eIm790 + (oRe790 * tRe778 + oIm790 * tRe790);
        out512[813] = resIm790_s;
        out512[981] = -resIm790_s;
        let resRe790_s = eRe790 + (oRe790 * tRe790 - oIm790 * tRe778);
        out512[980] = resRe790_s;
        out512[812] = resRe790_s;
        let resRe810_s = eRe790 - (oRe790 * tRe790 - oIm790 * tRe778);
        out512[940] = resRe810_s;
        out512[852] = resRe810_s;
        let resIm810_s = -eIm790 + (oRe790 * tRe778 + oIm790 * tRe790);
        out512[853] = resIm810_s;
        out512[941] = -resIm810_s;
        
        let oRe791 = out512[942];
        let oIm791 = out512[943];
        let eRe791 = out512[814];
        let eIm791 = out512[815];
        let resIm791_s = eIm791 + (oRe791 * tRe777 + oIm791 * tRe791);
        out512[815] = resIm791_s;
        out512[979] = -resIm791_s;
        let resRe791_s = eRe791 + (oRe791 * tRe791 - oIm791 * tRe777);
        out512[978] = resRe791_s;
        out512[814] = resRe791_s;
        let resRe809_s = eRe791 - (oRe791 * tRe791 - oIm791 * tRe777);
        out512[942] = resRe809_s;
        out512[850] = resRe809_s;
        let resIm809_s = -eIm791 + (oRe791 * tRe777 + oIm791 * tRe791);
        out512[851] = resIm809_s;
        out512[943] = -resIm809_s;
        
        let oRe792 = out512[944];
        let oIm792 = out512[945];
        let eRe792 = out512[816];
        let eIm792 = out512[817];
        let resIm792_s = eIm792 + (oRe792 * tRe776 + oIm792 * tRe792);
        out512[817] = resIm792_s;
        out512[977] = -resIm792_s;
        let resRe792_s = eRe792 + (oRe792 * tRe792 - oIm792 * tRe776);
        out512[976] = resRe792_s;
        out512[816] = resRe792_s;
        let resRe808_s = eRe792 - (oRe792 * tRe792 - oIm792 * tRe776);
        out512[944] = resRe808_s;
        out512[848] = resRe808_s;
        let resIm808_s = -eIm792 + (oRe792 * tRe776 + oIm792 * tRe792);
        out512[849] = resIm808_s;
        out512[945] = -resIm808_s;
        
        let oRe793 = out512[946];
        let oIm793 = out512[947];
        let eRe793 = out512[818];
        let eIm793 = out512[819];
        let resIm793_s = eIm793 + (oRe793 * tRe775 + oIm793 * tRe793);
        out512[819] = resIm793_s;
        out512[975] = -resIm793_s;
        let resRe793_s = eRe793 + (oRe793 * tRe793 - oIm793 * tRe775);
        out512[974] = resRe793_s;
        out512[818] = resRe793_s;
        let resRe807_s = eRe793 - (oRe793 * tRe793 - oIm793 * tRe775);
        out512[946] = resRe807_s;
        out512[846] = resRe807_s;
        let resIm807_s = -eIm793 + (oRe793 * tRe775 + oIm793 * tRe793);
        out512[847] = resIm807_s;
        out512[947] = -resIm807_s;
        
        let oRe794 = out512[948];
        let oIm794 = out512[949];
        let eRe794 = out512[820];
        let eIm794 = out512[821];
        let resIm794_s = eIm794 + (oRe794 * tRe774 + oIm794 * tRe794);
        out512[821] = resIm794_s;
        out512[973] = -resIm794_s;
        let resRe794_s = eRe794 + (oRe794 * tRe794 - oIm794 * tRe774);
        out512[972] = resRe794_s;
        out512[820] = resRe794_s;
        let resRe806_s = eRe794 - (oRe794 * tRe794 - oIm794 * tRe774);
        out512[948] = resRe806_s;
        out512[844] = resRe806_s;
        let resIm806_s = -eIm794 + (oRe794 * tRe774 + oIm794 * tRe794);
        out512[845] = resIm806_s;
        out512[949] = -resIm806_s;
        
        let oRe795 = out512[950];
        let oIm795 = out512[951];
        let eRe795 = out512[822];
        let eIm795 = out512[823];
        let resIm795_s = eIm795 + (oRe795 * tRe773 + oIm795 * tRe795);
        out512[823] = resIm795_s;
        out512[971] = -resIm795_s;
        let resRe795_s = eRe795 + (oRe795 * tRe795 - oIm795 * tRe773);
        out512[970] = resRe795_s;
        out512[822] = resRe795_s;
        let resRe805_s = eRe795 - (oRe795 * tRe795 - oIm795 * tRe773);
        out512[950] = resRe805_s;
        out512[842] = resRe805_s;
        let resIm805_s = -eIm795 + (oRe795 * tRe773 + oIm795 * tRe795);
        out512[843] = resIm805_s;
        out512[951] = -resIm805_s;
        
        let oRe796 = out512[952];
        let oIm796 = out512[953];
        let eRe796 = out512[824];
        let eIm796 = out512[825];
        let resIm796_s = eIm796 + (oRe796 * tRe772 + oIm796 * tRe796);
        out512[825] = resIm796_s;
        out512[969] = -resIm796_s;
        let resRe796_s = eRe796 + (oRe796 * tRe796 - oIm796 * tRe772);
        out512[968] = resRe796_s;
        out512[824] = resRe796_s;
        let resRe804_s = eRe796 - (oRe796 * tRe796 - oIm796 * tRe772);
        out512[952] = resRe804_s;
        out512[840] = resRe804_s;
        let resIm804_s = -eIm796 + (oRe796 * tRe772 + oIm796 * tRe796);
        out512[841] = resIm804_s;
        out512[953] = -resIm804_s;
        
        let oRe797 = out512[954];
        let oIm797 = out512[955];
        let eRe797 = out512[826];
        let eIm797 = out512[827];
        let resIm797_s = eIm797 + (oRe797 * tRe771 + oIm797 * tRe797);
        out512[827] = resIm797_s;
        out512[967] = -resIm797_s;
        let resRe797_s = eRe797 + (oRe797 * tRe797 - oIm797 * tRe771);
        out512[966] = resRe797_s;
        out512[826] = resRe797_s;
        let resRe803_s = eRe797 - (oRe797 * tRe797 - oIm797 * tRe771);
        out512[954] = resRe803_s;
        out512[838] = resRe803_s;
        let resIm803_s = -eIm797 + (oRe797 * tRe771 + oIm797 * tRe797);
        out512[839] = resIm803_s;
        out512[955] = -resIm803_s;
        
        let oRe798 = out512[956];
        let oIm798 = out512[957];
        let eRe798 = out512[828];
        let eIm798 = out512[829];
        let resIm798_s = eIm798 + (oRe798 * tRe770 + oIm798 * tRe798);
        out512[829] = resIm798_s;
        out512[965] = -resIm798_s;
        let resRe798_s = eRe798 + (oRe798 * tRe798 - oIm798 * tRe770);
        out512[964] = resRe798_s;
        out512[828] = resRe798_s;
        let resRe802_s = eRe798 - (oRe798 * tRe798 - oIm798 * tRe770);
        out512[956] = resRe802_s;
        out512[836] = resRe802_s;
        let resIm802_s = -eIm798 + (oRe798 * tRe770 + oIm798 * tRe798);
        out512[837] = resIm802_s;
        out512[957] = -resIm802_s;
        
        let oRe799 = out512[958];
        let oIm799 = out512[959];
        let eRe799 = out512[830];
        let eIm799 = out512[831];
        let resIm799_s = eIm799 + (oRe799 * tRe769 + oIm799 * tRe799);
        out512[831] = resIm799_s;
        out512[963] = -resIm799_s;
        let resRe799_s = eRe799 + (oRe799 * tRe799 - oIm799 * tRe769);
        out512[962] = resRe799_s;
        out512[830] = resRe799_s;
        let resRe801_s = eRe799 - (oRe799 * tRe799 - oIm799 * tRe769);
        out512[958] = resRe801_s;
        out512[834] = resRe801_s;
        let resIm801_s = -eIm799 + (oRe799 * tRe769 + oIm799 * tRe799);
        out512[835] = resIm801_s;
        out512[959] = -resIm801_s;
        
        let oRe800 = out512[960];
        let oIm800 = out512[961];
        let eRe800 = out512[832];
        let eIm800 = out512[833];
        let resIm800_s = eIm800 + oRe800;
        out512[833] = resIm800_s;
        out512[961] = -resIm800_s;
        let resRe800_s = eRe800 - oIm800;
        out512[960] = resRe800_s;
        out512[832] = resRe800_s;
        
    } 
    ////////////////////////////////////////////////
    ////////////////////////////////////////////////
    // RADIX 2 (unrolled) - FFT step for SIZE 256 
    ////////////////////////////////////////////////
    { 
        let oRe0 = out512[256];
        let oIm0 = out512[257];
        let eRe0 = out512[0];
        let eIm0 = out512[1];
        let resRe0_s = eRe0 + oRe0;
        out512[0] = resRe0_s;
        let resIm0_s = eIm0 + oIm0;
        out512[1] = resIm0_s;
        let resRe0_d = eRe0 - oRe0;
        out512[256] = resRe0_d;
        let resIm0_d = eIm0 - oIm0;
        out512[257] = resIm0_d;
        
        let oRe1 = out512[258];
        let oIm1 = out512[259];
        let eRe1 = out512[2];
        let eIm1 = out512[3];
        let tRe1 = 0.9996988177299500;
        let tRe63 = 0.0245412550866604;
        let resIm1_s = eIm1 + (oRe1 * tRe63 + oIm1 * tRe1);
        out512[3] = resIm1_s;
        out512[511] = -resIm1_s;
        let resRe1_s = eRe1 + (oRe1 * tRe1 - oIm1 * tRe63);
        out512[510] = resRe1_s;
        out512[2] = resRe1_s;
        let resRe127_s = eRe1 - (oRe1 * tRe1 - oIm1 * tRe63);
        out512[258] = resRe127_s;
        out512[254] = resRe127_s;
        let resIm127_s = -eIm1 + (oRe1 * tRe63 + oIm1 * tRe1);
        out512[255] = resIm127_s;
        out512[259] = -resIm127_s;
        
        let oRe2 = out512[260];
        let oIm2 = out512[261];
        let eRe2 = out512[4];
        let eIm2 = out512[5];
        let tRe2 = 0.9987954497337341;
        let tRe62 = 0.0490676499903202;
        let resIm2_s = eIm2 + (oRe2 * tRe62 + oIm2 * tRe2);
        out512[5] = resIm2_s;
        out512[509] = -resIm2_s;
        let resRe2_s = eRe2 + (oRe2 * tRe2 - oIm2 * tRe62);
        out512[508] = resRe2_s;
        out512[4] = resRe2_s;
        let resRe126_s = eRe2 - (oRe2 * tRe2 - oIm2 * tRe62);
        out512[260] = resRe126_s;
        out512[252] = resRe126_s;
        let resIm126_s = -eIm2 + (oRe2 * tRe62 + oIm2 * tRe2);
        out512[253] = resIm126_s;
        out512[261] = -resIm126_s;
        
        let oRe3 = out512[262];
        let oIm3 = out512[263];
        let eRe3 = out512[6];
        let eIm3 = out512[7];
        let tRe3 = 0.9972904324531555;
        let tRe61 = 0.0735646113753319;
        let resIm3_s = eIm3 + (oRe3 * tRe61 + oIm3 * tRe3);
        out512[7] = resIm3_s;
        out512[507] = -resIm3_s;
        let resRe3_s = eRe3 + (oRe3 * tRe3 - oIm3 * tRe61);
        out512[506] = resRe3_s;
        out512[6] = resRe3_s;
        let resRe125_s = eRe3 - (oRe3 * tRe3 - oIm3 * tRe61);
        out512[262] = resRe125_s;
        out512[250] = resRe125_s;
        let resIm125_s = -eIm3 + (oRe3 * tRe61 + oIm3 * tRe3);
        out512[251] = resIm125_s;
        out512[263] = -resIm125_s;
        
        let oRe4 = out512[264];
        let oIm4 = out512[265];
        let eRe4 = out512[8];
        let eIm4 = out512[9];
        let tRe4 = 0.9951847195625305;
        let tRe60 = 0.0980171337723732;
        let resIm4_s = eIm4 + (oRe4 * tRe60 + oIm4 * tRe4);
        out512[9] = resIm4_s;
        out512[505] = -resIm4_s;
        let resRe4_s = eRe4 + (oRe4 * tRe4 - oIm4 * tRe60);
        out512[504] = resRe4_s;
        out512[8] = resRe4_s;
        let resRe124_s = eRe4 - (oRe4 * tRe4 - oIm4 * tRe60);
        out512[264] = resRe124_s;
        out512[248] = resRe124_s;
        let resIm124_s = -eIm4 + (oRe4 * tRe60 + oIm4 * tRe4);
        out512[249] = resIm124_s;
        out512[265] = -resIm124_s;
        
        let oRe5 = out512[266];
        let oIm5 = out512[267];
        let eRe5 = out512[10];
        let eIm5 = out512[11];
        let tRe5 = 0.9924795627593994;
        let tRe59 = 0.1224106252193451;
        let resIm5_s = eIm5 + (oRe5 * tRe59 + oIm5 * tRe5);
        out512[11] = resIm5_s;
        out512[503] = -resIm5_s;
        let resRe5_s = eRe5 + (oRe5 * tRe5 - oIm5 * tRe59);
        out512[502] = resRe5_s;
        out512[10] = resRe5_s;
        let resRe123_s = eRe5 - (oRe5 * tRe5 - oIm5 * tRe59);
        out512[266] = resRe123_s;
        out512[246] = resRe123_s;
        let resIm123_s = -eIm5 + (oRe5 * tRe59 + oIm5 * tRe5);
        out512[247] = resIm123_s;
        out512[267] = -resIm123_s;
        
        let oRe6 = out512[268];
        let oIm6 = out512[269];
        let eRe6 = out512[12];
        let eIm6 = out512[13];
        let tRe6 = 0.9891765117645264;
        let tRe58 = 0.1467304974794388;
        let resIm6_s = eIm6 + (oRe6 * tRe58 + oIm6 * tRe6);
        out512[13] = resIm6_s;
        out512[501] = -resIm6_s;
        let resRe6_s = eRe6 + (oRe6 * tRe6 - oIm6 * tRe58);
        out512[500] = resRe6_s;
        out512[12] = resRe6_s;
        let resRe122_s = eRe6 - (oRe6 * tRe6 - oIm6 * tRe58);
        out512[268] = resRe122_s;
        out512[244] = resRe122_s;
        let resIm122_s = -eIm6 + (oRe6 * tRe58 + oIm6 * tRe6);
        out512[245] = resIm122_s;
        out512[269] = -resIm122_s;
        
        let oRe7 = out512[270];
        let oIm7 = out512[271];
        let eRe7 = out512[14];
        let eIm7 = out512[15];
        let tRe7 = 0.9852776527404785;
        let tRe57 = 0.1709618568420410;
        let resIm7_s = eIm7 + (oRe7 * tRe57 + oIm7 * tRe7);
        out512[15] = resIm7_s;
        out512[499] = -resIm7_s;
        let resRe7_s = eRe7 + (oRe7 * tRe7 - oIm7 * tRe57);
        out512[498] = resRe7_s;
        out512[14] = resRe7_s;
        let resRe121_s = eRe7 - (oRe7 * tRe7 - oIm7 * tRe57);
        out512[270] = resRe121_s;
        out512[242] = resRe121_s;
        let resIm121_s = -eIm7 + (oRe7 * tRe57 + oIm7 * tRe7);
        out512[243] = resIm121_s;
        out512[271] = -resIm121_s;
        
        let oRe8 = out512[272];
        let oIm8 = out512[273];
        let eRe8 = out512[16];
        let eIm8 = out512[17];
        let tRe8 = 0.9807852506637573;
        let tRe56 = 0.1950903534889221;
        let resIm8_s = eIm8 + (oRe8 * tRe56 + oIm8 * tRe8);
        out512[17] = resIm8_s;
        out512[497] = -resIm8_s;
        let resRe8_s = eRe8 + (oRe8 * tRe8 - oIm8 * tRe56);
        out512[496] = resRe8_s;
        out512[16] = resRe8_s;
        let resRe120_s = eRe8 - (oRe8 * tRe8 - oIm8 * tRe56);
        out512[272] = resRe120_s;
        out512[240] = resRe120_s;
        let resIm120_s = -eIm8 + (oRe8 * tRe56 + oIm8 * tRe8);
        out512[241] = resIm120_s;
        out512[273] = -resIm120_s;
        
        let oRe9 = out512[274];
        let oIm9 = out512[275];
        let eRe9 = out512[18];
        let eIm9 = out512[19];
        let tRe9 = 0.9757021069526672;
        let tRe55 = 0.2191012203693390;
        let resIm9_s = eIm9 + (oRe9 * tRe55 + oIm9 * tRe9);
        out512[19] = resIm9_s;
        out512[495] = -resIm9_s;
        let resRe9_s = eRe9 + (oRe9 * tRe9 - oIm9 * tRe55);
        out512[494] = resRe9_s;
        out512[18] = resRe9_s;
        let resRe119_s = eRe9 - (oRe9 * tRe9 - oIm9 * tRe55);
        out512[274] = resRe119_s;
        out512[238] = resRe119_s;
        let resIm119_s = -eIm9 + (oRe9 * tRe55 + oIm9 * tRe9);
        out512[239] = resIm119_s;
        out512[275] = -resIm119_s;
        
        let oRe10 = out512[276];
        let oIm10 = out512[277];
        let eRe10 = out512[20];
        let eIm10 = out512[21];
        let tRe10 = 0.9700312614440918;
        let tRe54 = 0.2429802417755127;
        let resIm10_s = eIm10 + (oRe10 * tRe54 + oIm10 * tRe10);
        out512[21] = resIm10_s;
        out512[493] = -resIm10_s;
        let resRe10_s = eRe10 + (oRe10 * tRe10 - oIm10 * tRe54);
        out512[492] = resRe10_s;
        out512[20] = resRe10_s;
        let resRe118_s = eRe10 - (oRe10 * tRe10 - oIm10 * tRe54);
        out512[276] = resRe118_s;
        out512[236] = resRe118_s;
        let resIm118_s = -eIm10 + (oRe10 * tRe54 + oIm10 * tRe10);
        out512[237] = resIm118_s;
        out512[277] = -resIm118_s;
        
        let oRe11 = out512[278];
        let oIm11 = out512[279];
        let eRe11 = out512[22];
        let eIm11 = out512[23];
        let tRe11 = 0.9637760519981384;
        let tRe53 = 0.2667127549648285;
        let resIm11_s = eIm11 + (oRe11 * tRe53 + oIm11 * tRe11);
        out512[23] = resIm11_s;
        out512[491] = -resIm11_s;
        let resRe11_s = eRe11 + (oRe11 * tRe11 - oIm11 * tRe53);
        out512[490] = resRe11_s;
        out512[22] = resRe11_s;
        let resRe117_s = eRe11 - (oRe11 * tRe11 - oIm11 * tRe53);
        out512[278] = resRe117_s;
        out512[234] = resRe117_s;
        let resIm117_s = -eIm11 + (oRe11 * tRe53 + oIm11 * tRe11);
        out512[235] = resIm117_s;
        out512[279] = -resIm117_s;
        
        let oRe12 = out512[280];
        let oIm12 = out512[281];
        let eRe12 = out512[24];
        let eIm12 = out512[25];
        let tRe12 = 0.9569403529167175;
        let tRe52 = 0.2902846336364746;
        let resIm12_s = eIm12 + (oRe12 * tRe52 + oIm12 * tRe12);
        out512[25] = resIm12_s;
        out512[489] = -resIm12_s;
        let resRe12_s = eRe12 + (oRe12 * tRe12 - oIm12 * tRe52);
        out512[488] = resRe12_s;
        out512[24] = resRe12_s;
        let resRe116_s = eRe12 - (oRe12 * tRe12 - oIm12 * tRe52);
        out512[280] = resRe116_s;
        out512[232] = resRe116_s;
        let resIm116_s = -eIm12 + (oRe12 * tRe52 + oIm12 * tRe12);
        out512[233] = resIm116_s;
        out512[281] = -resIm116_s;
        
        let oRe13 = out512[282];
        let oIm13 = out512[283];
        let eRe13 = out512[26];
        let eIm13 = out512[27];
        let tRe13 = 0.9495281577110291;
        let tRe51 = 0.3136817514896393;
        let resIm13_s = eIm13 + (oRe13 * tRe51 + oIm13 * tRe13);
        out512[27] = resIm13_s;
        out512[487] = -resIm13_s;
        let resRe13_s = eRe13 + (oRe13 * tRe13 - oIm13 * tRe51);
        out512[486] = resRe13_s;
        out512[26] = resRe13_s;
        let resRe115_s = eRe13 - (oRe13 * tRe13 - oIm13 * tRe51);
        out512[282] = resRe115_s;
        out512[230] = resRe115_s;
        let resIm115_s = -eIm13 + (oRe13 * tRe51 + oIm13 * tRe13);
        out512[231] = resIm115_s;
        out512[283] = -resIm115_s;
        
        let oRe14 = out512[284];
        let oIm14 = out512[285];
        let eRe14 = out512[28];
        let eIm14 = out512[29];
        let tRe14 = 0.9415440559387207;
        let tRe50 = 0.3368898332118988;
        let resIm14_s = eIm14 + (oRe14 * tRe50 + oIm14 * tRe14);
        out512[29] = resIm14_s;
        out512[485] = -resIm14_s;
        let resRe14_s = eRe14 + (oRe14 * tRe14 - oIm14 * tRe50);
        out512[484] = resRe14_s;
        out512[28] = resRe14_s;
        let resRe114_s = eRe14 - (oRe14 * tRe14 - oIm14 * tRe50);
        out512[284] = resRe114_s;
        out512[228] = resRe114_s;
        let resIm114_s = -eIm14 + (oRe14 * tRe50 + oIm14 * tRe14);
        out512[229] = resIm114_s;
        out512[285] = -resIm114_s;
        
        let oRe15 = out512[286];
        let oIm15 = out512[287];
        let eRe15 = out512[30];
        let eIm15 = out512[31];
        let tRe15 = 0.9329928159713745;
        let tRe49 = 0.3598950803279877;
        let resIm15_s = eIm15 + (oRe15 * tRe49 + oIm15 * tRe15);
        out512[31] = resIm15_s;
        out512[483] = -resIm15_s;
        let resRe15_s = eRe15 + (oRe15 * tRe15 - oIm15 * tRe49);
        out512[482] = resRe15_s;
        out512[30] = resRe15_s;
        let resRe113_s = eRe15 - (oRe15 * tRe15 - oIm15 * tRe49);
        out512[286] = resRe113_s;
        out512[226] = resRe113_s;
        let resIm113_s = -eIm15 + (oRe15 * tRe49 + oIm15 * tRe15);
        out512[227] = resIm113_s;
        out512[287] = -resIm113_s;
        
        let oRe16 = out512[288];
        let oIm16 = out512[289];
        let eRe16 = out512[32];
        let eIm16 = out512[33];
        let tRe16 = 0.9238795042037964;
        let tRe48 = 0.3826834261417389;
        let resIm16_s = eIm16 + (oRe16 * tRe48 + oIm16 * tRe16);
        out512[33] = resIm16_s;
        out512[481] = -resIm16_s;
        let resRe16_s = eRe16 + (oRe16 * tRe16 - oIm16 * tRe48);
        out512[480] = resRe16_s;
        out512[32] = resRe16_s;
        let resRe112_s = eRe16 - (oRe16 * tRe16 - oIm16 * tRe48);
        out512[288] = resRe112_s;
        out512[224] = resRe112_s;
        let resIm112_s = -eIm16 + (oRe16 * tRe48 + oIm16 * tRe16);
        out512[225] = resIm112_s;
        out512[289] = -resIm112_s;
        
        let oRe17 = out512[290];
        let oIm17 = out512[291];
        let eRe17 = out512[34];
        let eIm17 = out512[35];
        let tRe17 = 0.9142097830772400;
        let tRe47 = 0.4052412807941437;
        let resIm17_s = eIm17 + (oRe17 * tRe47 + oIm17 * tRe17);
        out512[35] = resIm17_s;
        out512[479] = -resIm17_s;
        let resRe17_s = eRe17 + (oRe17 * tRe17 - oIm17 * tRe47);
        out512[478] = resRe17_s;
        out512[34] = resRe17_s;
        let resRe111_s = eRe17 - (oRe17 * tRe17 - oIm17 * tRe47);
        out512[290] = resRe111_s;
        out512[222] = resRe111_s;
        let resIm111_s = -eIm17 + (oRe17 * tRe47 + oIm17 * tRe17);
        out512[223] = resIm111_s;
        out512[291] = -resIm111_s;
        
        let oRe18 = out512[292];
        let oIm18 = out512[293];
        let eRe18 = out512[36];
        let eIm18 = out512[37];
        let tRe18 = 0.9039893150329590;
        let tRe46 = 0.4275551140308380;
        let resIm18_s = eIm18 + (oRe18 * tRe46 + oIm18 * tRe18);
        out512[37] = resIm18_s;
        out512[477] = -resIm18_s;
        let resRe18_s = eRe18 + (oRe18 * tRe18 - oIm18 * tRe46);
        out512[476] = resRe18_s;
        out512[36] = resRe18_s;
        let resRe110_s = eRe18 - (oRe18 * tRe18 - oIm18 * tRe46);
        out512[292] = resRe110_s;
        out512[220] = resRe110_s;
        let resIm110_s = -eIm18 + (oRe18 * tRe46 + oIm18 * tRe18);
        out512[221] = resIm110_s;
        out512[293] = -resIm110_s;
        
        let oRe19 = out512[294];
        let oIm19 = out512[295];
        let eRe19 = out512[38];
        let eIm19 = out512[39];
        let tRe19 = 0.8932242989540100;
        let tRe45 = 0.4496113061904907;
        let resIm19_s = eIm19 + (oRe19 * tRe45 + oIm19 * tRe19);
        out512[39] = resIm19_s;
        out512[475] = -resIm19_s;
        let resRe19_s = eRe19 + (oRe19 * tRe19 - oIm19 * tRe45);
        out512[474] = resRe19_s;
        out512[38] = resRe19_s;
        let resRe109_s = eRe19 - (oRe19 * tRe19 - oIm19 * tRe45);
        out512[294] = resRe109_s;
        out512[218] = resRe109_s;
        let resIm109_s = -eIm19 + (oRe19 * tRe45 + oIm19 * tRe19);
        out512[219] = resIm109_s;
        out512[295] = -resIm109_s;
        
        let oRe20 = out512[296];
        let oIm20 = out512[297];
        let eRe20 = out512[40];
        let eIm20 = out512[41];
        let tRe20 = 0.8819212913513184;
        let tRe44 = 0.4713967740535736;
        let resIm20_s = eIm20 + (oRe20 * tRe44 + oIm20 * tRe20);
        out512[41] = resIm20_s;
        out512[473] = -resIm20_s;
        let resRe20_s = eRe20 + (oRe20 * tRe20 - oIm20 * tRe44);
        out512[472] = resRe20_s;
        out512[40] = resRe20_s;
        let resRe108_s = eRe20 - (oRe20 * tRe20 - oIm20 * tRe44);
        out512[296] = resRe108_s;
        out512[216] = resRe108_s;
        let resIm108_s = -eIm20 + (oRe20 * tRe44 + oIm20 * tRe20);
        out512[217] = resIm108_s;
        out512[297] = -resIm108_s;
        
        let oRe21 = out512[298];
        let oIm21 = out512[299];
        let eRe21 = out512[42];
        let eIm21 = out512[43];
        let tRe21 = 0.8700870275497437;
        let tRe43 = 0.4928981959819794;
        let resIm21_s = eIm21 + (oRe21 * tRe43 + oIm21 * tRe21);
        out512[43] = resIm21_s;
        out512[471] = -resIm21_s;
        let resRe21_s = eRe21 + (oRe21 * tRe21 - oIm21 * tRe43);
        out512[470] = resRe21_s;
        out512[42] = resRe21_s;
        let resRe107_s = eRe21 - (oRe21 * tRe21 - oIm21 * tRe43);
        out512[298] = resRe107_s;
        out512[214] = resRe107_s;
        let resIm107_s = -eIm21 + (oRe21 * tRe43 + oIm21 * tRe21);
        out512[215] = resIm107_s;
        out512[299] = -resIm107_s;
        
        let oRe22 = out512[300];
        let oIm22 = out512[301];
        let eRe22 = out512[44];
        let eIm22 = out512[45];
        let tRe22 = 0.8577286005020142;
        let tRe42 = 0.5141028165817261;
        let resIm22_s = eIm22 + (oRe22 * tRe42 + oIm22 * tRe22);
        out512[45] = resIm22_s;
        out512[469] = -resIm22_s;
        let resRe22_s = eRe22 + (oRe22 * tRe22 - oIm22 * tRe42);
        out512[468] = resRe22_s;
        out512[44] = resRe22_s;
        let resRe106_s = eRe22 - (oRe22 * tRe22 - oIm22 * tRe42);
        out512[300] = resRe106_s;
        out512[212] = resRe106_s;
        let resIm106_s = -eIm22 + (oRe22 * tRe42 + oIm22 * tRe22);
        out512[213] = resIm106_s;
        out512[301] = -resIm106_s;
        
        let oRe23 = out512[302];
        let oIm23 = out512[303];
        let eRe23 = out512[46];
        let eIm23 = out512[47];
        let tRe23 = 0.8448535799980164;
        let tRe41 = 0.5349976420402527;
        let resIm23_s = eIm23 + (oRe23 * tRe41 + oIm23 * tRe23);
        out512[47] = resIm23_s;
        out512[467] = -resIm23_s;
        let resRe23_s = eRe23 + (oRe23 * tRe23 - oIm23 * tRe41);
        out512[466] = resRe23_s;
        out512[46] = resRe23_s;
        let resRe105_s = eRe23 - (oRe23 * tRe23 - oIm23 * tRe41);
        out512[302] = resRe105_s;
        out512[210] = resRe105_s;
        let resIm105_s = -eIm23 + (oRe23 * tRe41 + oIm23 * tRe23);
        out512[211] = resIm105_s;
        out512[303] = -resIm105_s;
        
        let oRe24 = out512[304];
        let oIm24 = out512[305];
        let eRe24 = out512[48];
        let eIm24 = out512[49];
        let tRe24 = 0.8314695954322815;
        let tRe40 = 0.5555702447891235;
        let resIm24_s = eIm24 + (oRe24 * tRe40 + oIm24 * tRe24);
        out512[49] = resIm24_s;
        out512[465] = -resIm24_s;
        let resRe24_s = eRe24 + (oRe24 * tRe24 - oIm24 * tRe40);
        out512[464] = resRe24_s;
        out512[48] = resRe24_s;
        let resRe104_s = eRe24 - (oRe24 * tRe24 - oIm24 * tRe40);
        out512[304] = resRe104_s;
        out512[208] = resRe104_s;
        let resIm104_s = -eIm24 + (oRe24 * tRe40 + oIm24 * tRe24);
        out512[209] = resIm104_s;
        out512[305] = -resIm104_s;
        
        let oRe25 = out512[306];
        let oIm25 = out512[307];
        let eRe25 = out512[50];
        let eIm25 = out512[51];
        let tRe25 = 0.8175848126411438;
        let tRe39 = 0.5758082270622253;
        let resIm25_s = eIm25 + (oRe25 * tRe39 + oIm25 * tRe25);
        out512[51] = resIm25_s;
        out512[463] = -resIm25_s;
        let resRe25_s = eRe25 + (oRe25 * tRe25 - oIm25 * tRe39);
        out512[462] = resRe25_s;
        out512[50] = resRe25_s;
        let resRe103_s = eRe25 - (oRe25 * tRe25 - oIm25 * tRe39);
        out512[306] = resRe103_s;
        out512[206] = resRe103_s;
        let resIm103_s = -eIm25 + (oRe25 * tRe39 + oIm25 * tRe25);
        out512[207] = resIm103_s;
        out512[307] = -resIm103_s;
        
        let oRe26 = out512[308];
        let oIm26 = out512[309];
        let eRe26 = out512[52];
        let eIm26 = out512[53];
        let tRe26 = 0.8032075166702271;
        let tRe38 = 0.5956993103027344;
        let resIm26_s = eIm26 + (oRe26 * tRe38 + oIm26 * tRe26);
        out512[53] = resIm26_s;
        out512[461] = -resIm26_s;
        let resRe26_s = eRe26 + (oRe26 * tRe26 - oIm26 * tRe38);
        out512[460] = resRe26_s;
        out512[52] = resRe26_s;
        let resRe102_s = eRe26 - (oRe26 * tRe26 - oIm26 * tRe38);
        out512[308] = resRe102_s;
        out512[204] = resRe102_s;
        let resIm102_s = -eIm26 + (oRe26 * tRe38 + oIm26 * tRe26);
        out512[205] = resIm102_s;
        out512[309] = -resIm102_s;
        
        let oRe27 = out512[310];
        let oIm27 = out512[311];
        let eRe27 = out512[54];
        let eIm27 = out512[55];
        let tRe27 = 0.7883464694023132;
        let tRe37 = 0.6152315735816956;
        let resIm27_s = eIm27 + (oRe27 * tRe37 + oIm27 * tRe27);
        out512[55] = resIm27_s;
        out512[459] = -resIm27_s;
        let resRe27_s = eRe27 + (oRe27 * tRe27 - oIm27 * tRe37);
        out512[458] = resRe27_s;
        out512[54] = resRe27_s;
        let resRe101_s = eRe27 - (oRe27 * tRe27 - oIm27 * tRe37);
        out512[310] = resRe101_s;
        out512[202] = resRe101_s;
        let resIm101_s = -eIm27 + (oRe27 * tRe37 + oIm27 * tRe27);
        out512[203] = resIm101_s;
        out512[311] = -resIm101_s;
        
        let oRe28 = out512[312];
        let oIm28 = out512[313];
        let eRe28 = out512[56];
        let eIm28 = out512[57];
        let tRe28 = 0.7730104923248291;
        let tRe36 = 0.6343932747840881;
        let resIm28_s = eIm28 + (oRe28 * tRe36 + oIm28 * tRe28);
        out512[57] = resIm28_s;
        out512[457] = -resIm28_s;
        let resRe28_s = eRe28 + (oRe28 * tRe28 - oIm28 * tRe36);
        out512[456] = resRe28_s;
        out512[56] = resRe28_s;
        let resRe100_s = eRe28 - (oRe28 * tRe28 - oIm28 * tRe36);
        out512[312] = resRe100_s;
        out512[200] = resRe100_s;
        let resIm100_s = -eIm28 + (oRe28 * tRe36 + oIm28 * tRe28);
        out512[201] = resIm100_s;
        out512[313] = -resIm100_s;
        
        let oRe29 = out512[314];
        let oIm29 = out512[315];
        let eRe29 = out512[58];
        let eIm29 = out512[59];
        let tRe29 = 0.7572088241577148;
        let tRe35 = 0.6531728506088257;
        let resIm29_s = eIm29 + (oRe29 * tRe35 + oIm29 * tRe29);
        out512[59] = resIm29_s;
        out512[455] = -resIm29_s;
        let resRe29_s = eRe29 + (oRe29 * tRe29 - oIm29 * tRe35);
        out512[454] = resRe29_s;
        out512[58] = resRe29_s;
        let resRe99_s = eRe29 - (oRe29 * tRe29 - oIm29 * tRe35);
        out512[314] = resRe99_s;
        out512[198] = resRe99_s;
        let resIm99_s = -eIm29 + (oRe29 * tRe35 + oIm29 * tRe29);
        out512[199] = resIm99_s;
        out512[315] = -resIm99_s;
        
        let oRe30 = out512[316];
        let oIm30 = out512[317];
        let eRe30 = out512[60];
        let eIm30 = out512[61];
        let tRe30 = 0.7409511208534241;
        let tRe34 = 0.6715589761734009;
        let resIm30_s = eIm30 + (oRe30 * tRe34 + oIm30 * tRe30);
        out512[61] = resIm30_s;
        out512[453] = -resIm30_s;
        let resRe30_s = eRe30 + (oRe30 * tRe30 - oIm30 * tRe34);
        out512[452] = resRe30_s;
        out512[60] = resRe30_s;
        let resRe98_s = eRe30 - (oRe30 * tRe30 - oIm30 * tRe34);
        out512[316] = resRe98_s;
        out512[196] = resRe98_s;
        let resIm98_s = -eIm30 + (oRe30 * tRe34 + oIm30 * tRe30);
        out512[197] = resIm98_s;
        out512[317] = -resIm98_s;
        
        let oRe31 = out512[318];
        let oIm31 = out512[319];
        let eRe31 = out512[62];
        let eIm31 = out512[63];
        let tRe31 = 0.7242470979690552;
        let tRe33 = 0.6895405650138855;
        let resIm31_s = eIm31 + (oRe31 * tRe33 + oIm31 * tRe31);
        out512[63] = resIm31_s;
        out512[451] = -resIm31_s;
        let resRe31_s = eRe31 + (oRe31 * tRe31 - oIm31 * tRe33);
        out512[450] = resRe31_s;
        out512[62] = resRe31_s;
        let resRe97_s = eRe31 - (oRe31 * tRe31 - oIm31 * tRe33);
        out512[318] = resRe97_s;
        out512[194] = resRe97_s;
        let resIm97_s = -eIm31 + (oRe31 * tRe33 + oIm31 * tRe31);
        out512[195] = resIm97_s;
        out512[319] = -resIm97_s;
        
        let oRe32 = out512[320];
        let oIm32 = out512[321];
        let eRe32 = out512[64];
        let eIm32 = out512[65];
        let tRe32 = 0.7071067690849304;
        let resIm32_s = eIm32 + (oRe32 * tRe32 + oIm32 * tRe32);
        out512[65] = resIm32_s;
        out512[449] = -resIm32_s;
        let resRe32_s = eRe32 + (oRe32 * tRe32 - oIm32 * tRe32);
        out512[448] = resRe32_s;
        out512[64] = resRe32_s;
        let resRe96_s = eRe32 - (oRe32 * tRe32 - oIm32 * tRe32);
        out512[320] = resRe96_s;
        out512[192] = resRe96_s;
        let resIm96_s = -eIm32 + (oRe32 * tRe32 + oIm32 * tRe32);
        out512[193] = resIm96_s;
        out512[321] = -resIm96_s;
        
        let oRe33 = out512[322];
        let oIm33 = out512[323];
        let eRe33 = out512[66];
        let eIm33 = out512[67];
        let resIm33_s = eIm33 + (oRe33 * tRe31 + oIm33 * tRe33);
        out512[67] = resIm33_s;
        out512[447] = -resIm33_s;
        let resRe33_s = eRe33 + (oRe33 * tRe33 - oIm33 * tRe31);
        out512[446] = resRe33_s;
        out512[66] = resRe33_s;
        let resRe95_s = eRe33 - (oRe33 * tRe33 - oIm33 * tRe31);
        out512[322] = resRe95_s;
        out512[190] = resRe95_s;
        let resIm95_s = -eIm33 + (oRe33 * tRe31 + oIm33 * tRe33);
        out512[191] = resIm95_s;
        out512[323] = -resIm95_s;
        
        let oRe34 = out512[324];
        let oIm34 = out512[325];
        let eRe34 = out512[68];
        let eIm34 = out512[69];
        let resIm34_s = eIm34 + (oRe34 * tRe30 + oIm34 * tRe34);
        out512[69] = resIm34_s;
        out512[445] = -resIm34_s;
        let resRe34_s = eRe34 + (oRe34 * tRe34 - oIm34 * tRe30);
        out512[444] = resRe34_s;
        out512[68] = resRe34_s;
        let resRe94_s = eRe34 - (oRe34 * tRe34 - oIm34 * tRe30);
        out512[324] = resRe94_s;
        out512[188] = resRe94_s;
        let resIm94_s = -eIm34 + (oRe34 * tRe30 + oIm34 * tRe34);
        out512[189] = resIm94_s;
        out512[325] = -resIm94_s;
        
        let oRe35 = out512[326];
        let oIm35 = out512[327];
        let eRe35 = out512[70];
        let eIm35 = out512[71];
        let resIm35_s = eIm35 + (oRe35 * tRe29 + oIm35 * tRe35);
        out512[71] = resIm35_s;
        out512[443] = -resIm35_s;
        let resRe35_s = eRe35 + (oRe35 * tRe35 - oIm35 * tRe29);
        out512[442] = resRe35_s;
        out512[70] = resRe35_s;
        let resRe93_s = eRe35 - (oRe35 * tRe35 - oIm35 * tRe29);
        out512[326] = resRe93_s;
        out512[186] = resRe93_s;
        let resIm93_s = -eIm35 + (oRe35 * tRe29 + oIm35 * tRe35);
        out512[187] = resIm93_s;
        out512[327] = -resIm93_s;
        
        let oRe36 = out512[328];
        let oIm36 = out512[329];
        let eRe36 = out512[72];
        let eIm36 = out512[73];
        let resIm36_s = eIm36 + (oRe36 * tRe28 + oIm36 * tRe36);
        out512[73] = resIm36_s;
        out512[441] = -resIm36_s;
        let resRe36_s = eRe36 + (oRe36 * tRe36 - oIm36 * tRe28);
        out512[440] = resRe36_s;
        out512[72] = resRe36_s;
        let resRe92_s = eRe36 - (oRe36 * tRe36 - oIm36 * tRe28);
        out512[328] = resRe92_s;
        out512[184] = resRe92_s;
        let resIm92_s = -eIm36 + (oRe36 * tRe28 + oIm36 * tRe36);
        out512[185] = resIm92_s;
        out512[329] = -resIm92_s;
        
        let oRe37 = out512[330];
        let oIm37 = out512[331];
        let eRe37 = out512[74];
        let eIm37 = out512[75];
        let resIm37_s = eIm37 + (oRe37 * tRe27 + oIm37 * tRe37);
        out512[75] = resIm37_s;
        out512[439] = -resIm37_s;
        let resRe37_s = eRe37 + (oRe37 * tRe37 - oIm37 * tRe27);
        out512[438] = resRe37_s;
        out512[74] = resRe37_s;
        let resRe91_s = eRe37 - (oRe37 * tRe37 - oIm37 * tRe27);
        out512[330] = resRe91_s;
        out512[182] = resRe91_s;
        let resIm91_s = -eIm37 + (oRe37 * tRe27 + oIm37 * tRe37);
        out512[183] = resIm91_s;
        out512[331] = -resIm91_s;
        
        let oRe38 = out512[332];
        let oIm38 = out512[333];
        let eRe38 = out512[76];
        let eIm38 = out512[77];
        let resIm38_s = eIm38 + (oRe38 * tRe26 + oIm38 * tRe38);
        out512[77] = resIm38_s;
        out512[437] = -resIm38_s;
        let resRe38_s = eRe38 + (oRe38 * tRe38 - oIm38 * tRe26);
        out512[436] = resRe38_s;
        out512[76] = resRe38_s;
        let resRe90_s = eRe38 - (oRe38 * tRe38 - oIm38 * tRe26);
        out512[332] = resRe90_s;
        out512[180] = resRe90_s;
        let resIm90_s = -eIm38 + (oRe38 * tRe26 + oIm38 * tRe38);
        out512[181] = resIm90_s;
        out512[333] = -resIm90_s;
        
        let oRe39 = out512[334];
        let oIm39 = out512[335];
        let eRe39 = out512[78];
        let eIm39 = out512[79];
        let resIm39_s = eIm39 + (oRe39 * tRe25 + oIm39 * tRe39);
        out512[79] = resIm39_s;
        out512[435] = -resIm39_s;
        let resRe39_s = eRe39 + (oRe39 * tRe39 - oIm39 * tRe25);
        out512[434] = resRe39_s;
        out512[78] = resRe39_s;
        let resRe89_s = eRe39 - (oRe39 * tRe39 - oIm39 * tRe25);
        out512[334] = resRe89_s;
        out512[178] = resRe89_s;
        let resIm89_s = -eIm39 + (oRe39 * tRe25 + oIm39 * tRe39);
        out512[179] = resIm89_s;
        out512[335] = -resIm89_s;
        
        let oRe40 = out512[336];
        let oIm40 = out512[337];
        let eRe40 = out512[80];
        let eIm40 = out512[81];
        let resIm40_s = eIm40 + (oRe40 * tRe24 + oIm40 * tRe40);
        out512[81] = resIm40_s;
        out512[433] = -resIm40_s;
        let resRe40_s = eRe40 + (oRe40 * tRe40 - oIm40 * tRe24);
        out512[432] = resRe40_s;
        out512[80] = resRe40_s;
        let resRe88_s = eRe40 - (oRe40 * tRe40 - oIm40 * tRe24);
        out512[336] = resRe88_s;
        out512[176] = resRe88_s;
        let resIm88_s = -eIm40 + (oRe40 * tRe24 + oIm40 * tRe40);
        out512[177] = resIm88_s;
        out512[337] = -resIm88_s;
        
        let oRe41 = out512[338];
        let oIm41 = out512[339];
        let eRe41 = out512[82];
        let eIm41 = out512[83];
        let resIm41_s = eIm41 + (oRe41 * tRe23 + oIm41 * tRe41);
        out512[83] = resIm41_s;
        out512[431] = -resIm41_s;
        let resRe41_s = eRe41 + (oRe41 * tRe41 - oIm41 * tRe23);
        out512[430] = resRe41_s;
        out512[82] = resRe41_s;
        let resRe87_s = eRe41 - (oRe41 * tRe41 - oIm41 * tRe23);
        out512[338] = resRe87_s;
        out512[174] = resRe87_s;
        let resIm87_s = -eIm41 + (oRe41 * tRe23 + oIm41 * tRe41);
        out512[175] = resIm87_s;
        out512[339] = -resIm87_s;
        
        let oRe42 = out512[340];
        let oIm42 = out512[341];
        let eRe42 = out512[84];
        let eIm42 = out512[85];
        let resIm42_s = eIm42 + (oRe42 * tRe22 + oIm42 * tRe42);
        out512[85] = resIm42_s;
        out512[429] = -resIm42_s;
        let resRe42_s = eRe42 + (oRe42 * tRe42 - oIm42 * tRe22);
        out512[428] = resRe42_s;
        out512[84] = resRe42_s;
        let resRe86_s = eRe42 - (oRe42 * tRe42 - oIm42 * tRe22);
        out512[340] = resRe86_s;
        out512[172] = resRe86_s;
        let resIm86_s = -eIm42 + (oRe42 * tRe22 + oIm42 * tRe42);
        out512[173] = resIm86_s;
        out512[341] = -resIm86_s;
        
        let oRe43 = out512[342];
        let oIm43 = out512[343];
        let eRe43 = out512[86];
        let eIm43 = out512[87];
        let resIm43_s = eIm43 + (oRe43 * tRe21 + oIm43 * tRe43);
        out512[87] = resIm43_s;
        out512[427] = -resIm43_s;
        let resRe43_s = eRe43 + (oRe43 * tRe43 - oIm43 * tRe21);
        out512[426] = resRe43_s;
        out512[86] = resRe43_s;
        let resRe85_s = eRe43 - (oRe43 * tRe43 - oIm43 * tRe21);
        out512[342] = resRe85_s;
        out512[170] = resRe85_s;
        let resIm85_s = -eIm43 + (oRe43 * tRe21 + oIm43 * tRe43);
        out512[171] = resIm85_s;
        out512[343] = -resIm85_s;
        
        let oRe44 = out512[344];
        let oIm44 = out512[345];
        let eRe44 = out512[88];
        let eIm44 = out512[89];
        let resIm44_s = eIm44 + (oRe44 * tRe20 + oIm44 * tRe44);
        out512[89] = resIm44_s;
        out512[425] = -resIm44_s;
        let resRe44_s = eRe44 + (oRe44 * tRe44 - oIm44 * tRe20);
        out512[424] = resRe44_s;
        out512[88] = resRe44_s;
        let resRe84_s = eRe44 - (oRe44 * tRe44 - oIm44 * tRe20);
        out512[344] = resRe84_s;
        out512[168] = resRe84_s;
        let resIm84_s = -eIm44 + (oRe44 * tRe20 + oIm44 * tRe44);
        out512[169] = resIm84_s;
        out512[345] = -resIm84_s;
        
        let oRe45 = out512[346];
        let oIm45 = out512[347];
        let eRe45 = out512[90];
        let eIm45 = out512[91];
        let resIm45_s = eIm45 + (oRe45 * tRe19 + oIm45 * tRe45);
        out512[91] = resIm45_s;
        out512[423] = -resIm45_s;
        let resRe45_s = eRe45 + (oRe45 * tRe45 - oIm45 * tRe19);
        out512[422] = resRe45_s;
        out512[90] = resRe45_s;
        let resRe83_s = eRe45 - (oRe45 * tRe45 - oIm45 * tRe19);
        out512[346] = resRe83_s;
        out512[166] = resRe83_s;
        let resIm83_s = -eIm45 + (oRe45 * tRe19 + oIm45 * tRe45);
        out512[167] = resIm83_s;
        out512[347] = -resIm83_s;
        
        let oRe46 = out512[348];
        let oIm46 = out512[349];
        let eRe46 = out512[92];
        let eIm46 = out512[93];
        let resIm46_s = eIm46 + (oRe46 * tRe18 + oIm46 * tRe46);
        out512[93] = resIm46_s;
        out512[421] = -resIm46_s;
        let resRe46_s = eRe46 + (oRe46 * tRe46 - oIm46 * tRe18);
        out512[420] = resRe46_s;
        out512[92] = resRe46_s;
        let resRe82_s = eRe46 - (oRe46 * tRe46 - oIm46 * tRe18);
        out512[348] = resRe82_s;
        out512[164] = resRe82_s;
        let resIm82_s = -eIm46 + (oRe46 * tRe18 + oIm46 * tRe46);
        out512[165] = resIm82_s;
        out512[349] = -resIm82_s;
        
        let oRe47 = out512[350];
        let oIm47 = out512[351];
        let eRe47 = out512[94];
        let eIm47 = out512[95];
        let resIm47_s = eIm47 + (oRe47 * tRe17 + oIm47 * tRe47);
        out512[95] = resIm47_s;
        out512[419] = -resIm47_s;
        let resRe47_s = eRe47 + (oRe47 * tRe47 - oIm47 * tRe17);
        out512[418] = resRe47_s;
        out512[94] = resRe47_s;
        let resRe81_s = eRe47 - (oRe47 * tRe47 - oIm47 * tRe17);
        out512[350] = resRe81_s;
        out512[162] = resRe81_s;
        let resIm81_s = -eIm47 + (oRe47 * tRe17 + oIm47 * tRe47);
        out512[163] = resIm81_s;
        out512[351] = -resIm81_s;
        
        let oRe48 = out512[352];
        let oIm48 = out512[353];
        let eRe48 = out512[96];
        let eIm48 = out512[97];
        let resIm48_s = eIm48 + (oRe48 * tRe16 + oIm48 * tRe48);
        out512[97] = resIm48_s;
        out512[417] = -resIm48_s;
        let resRe48_s = eRe48 + (oRe48 * tRe48 - oIm48 * tRe16);
        out512[416] = resRe48_s;
        out512[96] = resRe48_s;
        let resRe80_s = eRe48 - (oRe48 * tRe48 - oIm48 * tRe16);
        out512[352] = resRe80_s;
        out512[160] = resRe80_s;
        let resIm80_s = -eIm48 + (oRe48 * tRe16 + oIm48 * tRe48);
        out512[161] = resIm80_s;
        out512[353] = -resIm80_s;
        
        let oRe49 = out512[354];
        let oIm49 = out512[355];
        let eRe49 = out512[98];
        let eIm49 = out512[99];
        let resIm49_s = eIm49 + (oRe49 * tRe15 + oIm49 * tRe49);
        out512[99] = resIm49_s;
        out512[415] = -resIm49_s;
        let resRe49_s = eRe49 + (oRe49 * tRe49 - oIm49 * tRe15);
        out512[414] = resRe49_s;
        out512[98] = resRe49_s;
        let resRe79_s = eRe49 - (oRe49 * tRe49 - oIm49 * tRe15);
        out512[354] = resRe79_s;
        out512[158] = resRe79_s;
        let resIm79_s = -eIm49 + (oRe49 * tRe15 + oIm49 * tRe49);
        out512[159] = resIm79_s;
        out512[355] = -resIm79_s;
        
        let oRe50 = out512[356];
        let oIm50 = out512[357];
        let eRe50 = out512[100];
        let eIm50 = out512[101];
        let resIm50_s = eIm50 + (oRe50 * tRe14 + oIm50 * tRe50);
        out512[101] = resIm50_s;
        out512[413] = -resIm50_s;
        let resRe50_s = eRe50 + (oRe50 * tRe50 - oIm50 * tRe14);
        out512[412] = resRe50_s;
        out512[100] = resRe50_s;
        let resRe78_s = eRe50 - (oRe50 * tRe50 - oIm50 * tRe14);
        out512[356] = resRe78_s;
        out512[156] = resRe78_s;
        let resIm78_s = -eIm50 + (oRe50 * tRe14 + oIm50 * tRe50);
        out512[157] = resIm78_s;
        out512[357] = -resIm78_s;
        
        let oRe51 = out512[358];
        let oIm51 = out512[359];
        let eRe51 = out512[102];
        let eIm51 = out512[103];
        let resIm51_s = eIm51 + (oRe51 * tRe13 + oIm51 * tRe51);
        out512[103] = resIm51_s;
        out512[411] = -resIm51_s;
        let resRe51_s = eRe51 + (oRe51 * tRe51 - oIm51 * tRe13);
        out512[410] = resRe51_s;
        out512[102] = resRe51_s;
        let resRe77_s = eRe51 - (oRe51 * tRe51 - oIm51 * tRe13);
        out512[358] = resRe77_s;
        out512[154] = resRe77_s;
        let resIm77_s = -eIm51 + (oRe51 * tRe13 + oIm51 * tRe51);
        out512[155] = resIm77_s;
        out512[359] = -resIm77_s;
        
        let oRe52 = out512[360];
        let oIm52 = out512[361];
        let eRe52 = out512[104];
        let eIm52 = out512[105];
        let resIm52_s = eIm52 + (oRe52 * tRe12 + oIm52 * tRe52);
        out512[105] = resIm52_s;
        out512[409] = -resIm52_s;
        let resRe52_s = eRe52 + (oRe52 * tRe52 - oIm52 * tRe12);
        out512[408] = resRe52_s;
        out512[104] = resRe52_s;
        let resRe76_s = eRe52 - (oRe52 * tRe52 - oIm52 * tRe12);
        out512[360] = resRe76_s;
        out512[152] = resRe76_s;
        let resIm76_s = -eIm52 + (oRe52 * tRe12 + oIm52 * tRe52);
        out512[153] = resIm76_s;
        out512[361] = -resIm76_s;
        
        let oRe53 = out512[362];
        let oIm53 = out512[363];
        let eRe53 = out512[106];
        let eIm53 = out512[107];
        let resIm53_s = eIm53 + (oRe53 * tRe11 + oIm53 * tRe53);
        out512[107] = resIm53_s;
        out512[407] = -resIm53_s;
        let resRe53_s = eRe53 + (oRe53 * tRe53 - oIm53 * tRe11);
        out512[406] = resRe53_s;
        out512[106] = resRe53_s;
        let resRe75_s = eRe53 - (oRe53 * tRe53 - oIm53 * tRe11);
        out512[362] = resRe75_s;
        out512[150] = resRe75_s;
        let resIm75_s = -eIm53 + (oRe53 * tRe11 + oIm53 * tRe53);
        out512[151] = resIm75_s;
        out512[363] = -resIm75_s;
        
        let oRe54 = out512[364];
        let oIm54 = out512[365];
        let eRe54 = out512[108];
        let eIm54 = out512[109];
        let resIm54_s = eIm54 + (oRe54 * tRe10 + oIm54 * tRe54);
        out512[109] = resIm54_s;
        out512[405] = -resIm54_s;
        let resRe54_s = eRe54 + (oRe54 * tRe54 - oIm54 * tRe10);
        out512[404] = resRe54_s;
        out512[108] = resRe54_s;
        let resRe74_s = eRe54 - (oRe54 * tRe54 - oIm54 * tRe10);
        out512[364] = resRe74_s;
        out512[148] = resRe74_s;
        let resIm74_s = -eIm54 + (oRe54 * tRe10 + oIm54 * tRe54);
        out512[149] = resIm74_s;
        out512[365] = -resIm74_s;
        
        let oRe55 = out512[366];
        let oIm55 = out512[367];
        let eRe55 = out512[110];
        let eIm55 = out512[111];
        let resIm55_s = eIm55 + (oRe55 * tRe9 + oIm55 * tRe55);
        out512[111] = resIm55_s;
        out512[403] = -resIm55_s;
        let resRe55_s = eRe55 + (oRe55 * tRe55 - oIm55 * tRe9);
        out512[402] = resRe55_s;
        out512[110] = resRe55_s;
        let resRe73_s = eRe55 - (oRe55 * tRe55 - oIm55 * tRe9);
        out512[366] = resRe73_s;
        out512[146] = resRe73_s;
        let resIm73_s = -eIm55 + (oRe55 * tRe9 + oIm55 * tRe55);
        out512[147] = resIm73_s;
        out512[367] = -resIm73_s;
        
        let oRe56 = out512[368];
        let oIm56 = out512[369];
        let eRe56 = out512[112];
        let eIm56 = out512[113];
        let resIm56_s = eIm56 + (oRe56 * tRe8 + oIm56 * tRe56);
        out512[113] = resIm56_s;
        out512[401] = -resIm56_s;
        let resRe56_s = eRe56 + (oRe56 * tRe56 - oIm56 * tRe8);
        out512[400] = resRe56_s;
        out512[112] = resRe56_s;
        let resRe72_s = eRe56 - (oRe56 * tRe56 - oIm56 * tRe8);
        out512[368] = resRe72_s;
        out512[144] = resRe72_s;
        let resIm72_s = -eIm56 + (oRe56 * tRe8 + oIm56 * tRe56);
        out512[145] = resIm72_s;
        out512[369] = -resIm72_s;
        
        let oRe57 = out512[370];
        let oIm57 = out512[371];
        let eRe57 = out512[114];
        let eIm57 = out512[115];
        let resIm57_s = eIm57 + (oRe57 * tRe7 + oIm57 * tRe57);
        out512[115] = resIm57_s;
        out512[399] = -resIm57_s;
        let resRe57_s = eRe57 + (oRe57 * tRe57 - oIm57 * tRe7);
        out512[398] = resRe57_s;
        out512[114] = resRe57_s;
        let resRe71_s = eRe57 - (oRe57 * tRe57 - oIm57 * tRe7);
        out512[370] = resRe71_s;
        out512[142] = resRe71_s;
        let resIm71_s = -eIm57 + (oRe57 * tRe7 + oIm57 * tRe57);
        out512[143] = resIm71_s;
        out512[371] = -resIm71_s;
        
        let oRe58 = out512[372];
        let oIm58 = out512[373];
        let eRe58 = out512[116];
        let eIm58 = out512[117];
        let resIm58_s = eIm58 + (oRe58 * tRe6 + oIm58 * tRe58);
        out512[117] = resIm58_s;
        out512[397] = -resIm58_s;
        let resRe58_s = eRe58 + (oRe58 * tRe58 - oIm58 * tRe6);
        out512[396] = resRe58_s;
        out512[116] = resRe58_s;
        let resRe70_s = eRe58 - (oRe58 * tRe58 - oIm58 * tRe6);
        out512[372] = resRe70_s;
        out512[140] = resRe70_s;
        let resIm70_s = -eIm58 + (oRe58 * tRe6 + oIm58 * tRe58);
        out512[141] = resIm70_s;
        out512[373] = -resIm70_s;
        
        let oRe59 = out512[374];
        let oIm59 = out512[375];
        let eRe59 = out512[118];
        let eIm59 = out512[119];
        let resIm59_s = eIm59 + (oRe59 * tRe5 + oIm59 * tRe59);
        out512[119] = resIm59_s;
        out512[395] = -resIm59_s;
        let resRe59_s = eRe59 + (oRe59 * tRe59 - oIm59 * tRe5);
        out512[394] = resRe59_s;
        out512[118] = resRe59_s;
        let resRe69_s = eRe59 - (oRe59 * tRe59 - oIm59 * tRe5);
        out512[374] = resRe69_s;
        out512[138] = resRe69_s;
        let resIm69_s = -eIm59 + (oRe59 * tRe5 + oIm59 * tRe59);
        out512[139] = resIm69_s;
        out512[375] = -resIm69_s;
        
        let oRe60 = out512[376];
        let oIm60 = out512[377];
        let eRe60 = out512[120];
        let eIm60 = out512[121];
        let resIm60_s = eIm60 + (oRe60 * tRe4 + oIm60 * tRe60);
        out512[121] = resIm60_s;
        out512[393] = -resIm60_s;
        let resRe60_s = eRe60 + (oRe60 * tRe60 - oIm60 * tRe4);
        out512[392] = resRe60_s;
        out512[120] = resRe60_s;
        let resRe68_s = eRe60 - (oRe60 * tRe60 - oIm60 * tRe4);
        out512[376] = resRe68_s;
        out512[136] = resRe68_s;
        let resIm68_s = -eIm60 + (oRe60 * tRe4 + oIm60 * tRe60);
        out512[137] = resIm68_s;
        out512[377] = -resIm68_s;
        
        let oRe61 = out512[378];
        let oIm61 = out512[379];
        let eRe61 = out512[122];
        let eIm61 = out512[123];
        let resIm61_s = eIm61 + (oRe61 * tRe3 + oIm61 * tRe61);
        out512[123] = resIm61_s;
        out512[391] = -resIm61_s;
        let resRe61_s = eRe61 + (oRe61 * tRe61 - oIm61 * tRe3);
        out512[390] = resRe61_s;
        out512[122] = resRe61_s;
        let resRe67_s = eRe61 - (oRe61 * tRe61 - oIm61 * tRe3);
        out512[378] = resRe67_s;
        out512[134] = resRe67_s;
        let resIm67_s = -eIm61 + (oRe61 * tRe3 + oIm61 * tRe61);
        out512[135] = resIm67_s;
        out512[379] = -resIm67_s;
        
        let oRe62 = out512[380];
        let oIm62 = out512[381];
        let eRe62 = out512[124];
        let eIm62 = out512[125];
        let resIm62_s = eIm62 + (oRe62 * tRe2 + oIm62 * tRe62);
        out512[125] = resIm62_s;
        out512[389] = -resIm62_s;
        let resRe62_s = eRe62 + (oRe62 * tRe62 - oIm62 * tRe2);
        out512[388] = resRe62_s;
        out512[124] = resRe62_s;
        let resRe66_s = eRe62 - (oRe62 * tRe62 - oIm62 * tRe2);
        out512[380] = resRe66_s;
        out512[132] = resRe66_s;
        let resIm66_s = -eIm62 + (oRe62 * tRe2 + oIm62 * tRe62);
        out512[133] = resIm66_s;
        out512[381] = -resIm66_s;
        
        let oRe63 = out512[382];
        let oIm63 = out512[383];
        let eRe63 = out512[126];
        let eIm63 = out512[127];
        let resIm63_s = eIm63 + (oRe63 * tRe1 + oIm63 * tRe63);
        out512[127] = resIm63_s;
        out512[387] = -resIm63_s;
        let resRe63_s = eRe63 + (oRe63 * tRe63 - oIm63 * tRe1);
        out512[386] = resRe63_s;
        out512[126] = resRe63_s;
        let resRe65_s = eRe63 - (oRe63 * tRe63 - oIm63 * tRe1);
        out512[382] = resRe65_s;
        out512[130] = resRe65_s;
        let resIm65_s = -eIm63 + (oRe63 * tRe1 + oIm63 * tRe63);
        out512[131] = resIm65_s;
        out512[383] = -resIm65_s;
        
        let oRe64 = out512[384];
        let oIm64 = out512[385];
        let eRe64 = out512[128];
        let eIm64 = out512[129];
        let resIm64_s = eIm64 + oRe64;
        out512[129] = resIm64_s;
        out512[385] = -resIm64_s;
        let resRe64_s = eRe64 - oIm64;
        out512[384] = resRe64_s;
        out512[128] = resRe64_s;
        
        let oRe512 = out512[768];
        let oIm512 = out512[769];
        let eRe512 = out512[512];
        let eIm512 = out512[513];
        let resRe512_s = eRe512 + oRe512;
        out512[512] = resRe512_s;
        let resIm512_s = eIm512 + oIm512;
        out512[513] = resIm512_s;
        let resRe512_d = eRe512 - oRe512;
        out512[768] = resRe512_d;
        let resIm512_d = eIm512 - oIm512;
        out512[769] = resIm512_d;
        
        let oRe513 = out512[770];
        let oIm513 = out512[771];
        let eRe513 = out512[514];
        let eIm513 = out512[515];
        let tRe513 = 0.9996988177299500;
        let tRe575 = 0.0245412550866604;
        let resIm513_s = eIm513 + (oRe513 * tRe575 + oIm513 * tRe513);
        out512[515] = resIm513_s;
        out512[1023] = -resIm513_s;
        let resRe513_s = eRe513 + (oRe513 * tRe513 - oIm513 * tRe575);
        out512[1022] = resRe513_s;
        out512[514] = resRe513_s;
        let resRe639_s = eRe513 - (oRe513 * tRe513 - oIm513 * tRe575);
        out512[770] = resRe639_s;
        out512[766] = resRe639_s;
        let resIm639_s = -eIm513 + (oRe513 * tRe575 + oIm513 * tRe513);
        out512[767] = resIm639_s;
        out512[771] = -resIm639_s;
        
        let oRe514 = out512[772];
        let oIm514 = out512[773];
        let eRe514 = out512[516];
        let eIm514 = out512[517];
        let tRe514 = 0.9987954497337341;
        let tRe574 = 0.0490676499903202;
        let resIm514_s = eIm514 + (oRe514 * tRe574 + oIm514 * tRe514);
        out512[517] = resIm514_s;
        out512[1021] = -resIm514_s;
        let resRe514_s = eRe514 + (oRe514 * tRe514 - oIm514 * tRe574);
        out512[1020] = resRe514_s;
        out512[516] = resRe514_s;
        let resRe638_s = eRe514 - (oRe514 * tRe514 - oIm514 * tRe574);
        out512[772] = resRe638_s;
        out512[764] = resRe638_s;
        let resIm638_s = -eIm514 + (oRe514 * tRe574 + oIm514 * tRe514);
        out512[765] = resIm638_s;
        out512[773] = -resIm638_s;
        
        let oRe515 = out512[774];
        let oIm515 = out512[775];
        let eRe515 = out512[518];
        let eIm515 = out512[519];
        let tRe515 = 0.9972904324531555;
        let tRe573 = 0.0735646113753319;
        let resIm515_s = eIm515 + (oRe515 * tRe573 + oIm515 * tRe515);
        out512[519] = resIm515_s;
        out512[1019] = -resIm515_s;
        let resRe515_s = eRe515 + (oRe515 * tRe515 - oIm515 * tRe573);
        out512[1018] = resRe515_s;
        out512[518] = resRe515_s;
        let resRe637_s = eRe515 - (oRe515 * tRe515 - oIm515 * tRe573);
        out512[774] = resRe637_s;
        out512[762] = resRe637_s;
        let resIm637_s = -eIm515 + (oRe515 * tRe573 + oIm515 * tRe515);
        out512[763] = resIm637_s;
        out512[775] = -resIm637_s;
        
        let oRe516 = out512[776];
        let oIm516 = out512[777];
        let eRe516 = out512[520];
        let eIm516 = out512[521];
        let tRe516 = 0.9951847195625305;
        let tRe572 = 0.0980171337723732;
        let resIm516_s = eIm516 + (oRe516 * tRe572 + oIm516 * tRe516);
        out512[521] = resIm516_s;
        out512[1017] = -resIm516_s;
        let resRe516_s = eRe516 + (oRe516 * tRe516 - oIm516 * tRe572);
        out512[1016] = resRe516_s;
        out512[520] = resRe516_s;
        let resRe636_s = eRe516 - (oRe516 * tRe516 - oIm516 * tRe572);
        out512[776] = resRe636_s;
        out512[760] = resRe636_s;
        let resIm636_s = -eIm516 + (oRe516 * tRe572 + oIm516 * tRe516);
        out512[761] = resIm636_s;
        out512[777] = -resIm636_s;
        
        let oRe517 = out512[778];
        let oIm517 = out512[779];
        let eRe517 = out512[522];
        let eIm517 = out512[523];
        let tRe517 = 0.9924795627593994;
        let tRe571 = 0.1224106252193451;
        let resIm517_s = eIm517 + (oRe517 * tRe571 + oIm517 * tRe517);
        out512[523] = resIm517_s;
        out512[1015] = -resIm517_s;
        let resRe517_s = eRe517 + (oRe517 * tRe517 - oIm517 * tRe571);
        out512[1014] = resRe517_s;
        out512[522] = resRe517_s;
        let resRe635_s = eRe517 - (oRe517 * tRe517 - oIm517 * tRe571);
        out512[778] = resRe635_s;
        out512[758] = resRe635_s;
        let resIm635_s = -eIm517 + (oRe517 * tRe571 + oIm517 * tRe517);
        out512[759] = resIm635_s;
        out512[779] = -resIm635_s;
        
        let oRe518 = out512[780];
        let oIm518 = out512[781];
        let eRe518 = out512[524];
        let eIm518 = out512[525];
        let tRe518 = 0.9891765117645264;
        let tRe570 = 0.1467304974794388;
        let resIm518_s = eIm518 + (oRe518 * tRe570 + oIm518 * tRe518);
        out512[525] = resIm518_s;
        out512[1013] = -resIm518_s;
        let resRe518_s = eRe518 + (oRe518 * tRe518 - oIm518 * tRe570);
        out512[1012] = resRe518_s;
        out512[524] = resRe518_s;
        let resRe634_s = eRe518 - (oRe518 * tRe518 - oIm518 * tRe570);
        out512[780] = resRe634_s;
        out512[756] = resRe634_s;
        let resIm634_s = -eIm518 + (oRe518 * tRe570 + oIm518 * tRe518);
        out512[757] = resIm634_s;
        out512[781] = -resIm634_s;
        
        let oRe519 = out512[782];
        let oIm519 = out512[783];
        let eRe519 = out512[526];
        let eIm519 = out512[527];
        let tRe519 = 0.9852776527404785;
        let tRe569 = 0.1709618568420410;
        let resIm519_s = eIm519 + (oRe519 * tRe569 + oIm519 * tRe519);
        out512[527] = resIm519_s;
        out512[1011] = -resIm519_s;
        let resRe519_s = eRe519 + (oRe519 * tRe519 - oIm519 * tRe569);
        out512[1010] = resRe519_s;
        out512[526] = resRe519_s;
        let resRe633_s = eRe519 - (oRe519 * tRe519 - oIm519 * tRe569);
        out512[782] = resRe633_s;
        out512[754] = resRe633_s;
        let resIm633_s = -eIm519 + (oRe519 * tRe569 + oIm519 * tRe519);
        out512[755] = resIm633_s;
        out512[783] = -resIm633_s;
        
        let oRe520 = out512[784];
        let oIm520 = out512[785];
        let eRe520 = out512[528];
        let eIm520 = out512[529];
        let tRe520 = 0.9807852506637573;
        let tRe568 = 0.1950903534889221;
        let resIm520_s = eIm520 + (oRe520 * tRe568 + oIm520 * tRe520);
        out512[529] = resIm520_s;
        out512[1009] = -resIm520_s;
        let resRe520_s = eRe520 + (oRe520 * tRe520 - oIm520 * tRe568);
        out512[1008] = resRe520_s;
        out512[528] = resRe520_s;
        let resRe632_s = eRe520 - (oRe520 * tRe520 - oIm520 * tRe568);
        out512[784] = resRe632_s;
        out512[752] = resRe632_s;
        let resIm632_s = -eIm520 + (oRe520 * tRe568 + oIm520 * tRe520);
        out512[753] = resIm632_s;
        out512[785] = -resIm632_s;
        
        let oRe521 = out512[786];
        let oIm521 = out512[787];
        let eRe521 = out512[530];
        let eIm521 = out512[531];
        let tRe521 = 0.9757021069526672;
        let tRe567 = 0.2191012203693390;
        let resIm521_s = eIm521 + (oRe521 * tRe567 + oIm521 * tRe521);
        out512[531] = resIm521_s;
        out512[1007] = -resIm521_s;
        let resRe521_s = eRe521 + (oRe521 * tRe521 - oIm521 * tRe567);
        out512[1006] = resRe521_s;
        out512[530] = resRe521_s;
        let resRe631_s = eRe521 - (oRe521 * tRe521 - oIm521 * tRe567);
        out512[786] = resRe631_s;
        out512[750] = resRe631_s;
        let resIm631_s = -eIm521 + (oRe521 * tRe567 + oIm521 * tRe521);
        out512[751] = resIm631_s;
        out512[787] = -resIm631_s;
        
        let oRe522 = out512[788];
        let oIm522 = out512[789];
        let eRe522 = out512[532];
        let eIm522 = out512[533];
        let tRe522 = 0.9700312614440918;
        let tRe566 = 0.2429802417755127;
        let resIm522_s = eIm522 + (oRe522 * tRe566 + oIm522 * tRe522);
        out512[533] = resIm522_s;
        out512[1005] = -resIm522_s;
        let resRe522_s = eRe522 + (oRe522 * tRe522 - oIm522 * tRe566);
        out512[1004] = resRe522_s;
        out512[532] = resRe522_s;
        let resRe630_s = eRe522 - (oRe522 * tRe522 - oIm522 * tRe566);
        out512[788] = resRe630_s;
        out512[748] = resRe630_s;
        let resIm630_s = -eIm522 + (oRe522 * tRe566 + oIm522 * tRe522);
        out512[749] = resIm630_s;
        out512[789] = -resIm630_s;
        
        let oRe523 = out512[790];
        let oIm523 = out512[791];
        let eRe523 = out512[534];
        let eIm523 = out512[535];
        let tRe523 = 0.9637760519981384;
        let tRe565 = 0.2667127549648285;
        let resIm523_s = eIm523 + (oRe523 * tRe565 + oIm523 * tRe523);
        out512[535] = resIm523_s;
        out512[1003] = -resIm523_s;
        let resRe523_s = eRe523 + (oRe523 * tRe523 - oIm523 * tRe565);
        out512[1002] = resRe523_s;
        out512[534] = resRe523_s;
        let resRe629_s = eRe523 - (oRe523 * tRe523 - oIm523 * tRe565);
        out512[790] = resRe629_s;
        out512[746] = resRe629_s;
        let resIm629_s = -eIm523 + (oRe523 * tRe565 + oIm523 * tRe523);
        out512[747] = resIm629_s;
        out512[791] = -resIm629_s;
        
        let oRe524 = out512[792];
        let oIm524 = out512[793];
        let eRe524 = out512[536];
        let eIm524 = out512[537];
        let tRe524 = 0.9569403529167175;
        let tRe564 = 0.2902846336364746;
        let resIm524_s = eIm524 + (oRe524 * tRe564 + oIm524 * tRe524);
        out512[537] = resIm524_s;
        out512[1001] = -resIm524_s;
        let resRe524_s = eRe524 + (oRe524 * tRe524 - oIm524 * tRe564);
        out512[1000] = resRe524_s;
        out512[536] = resRe524_s;
        let resRe628_s = eRe524 - (oRe524 * tRe524 - oIm524 * tRe564);
        out512[792] = resRe628_s;
        out512[744] = resRe628_s;
        let resIm628_s = -eIm524 + (oRe524 * tRe564 + oIm524 * tRe524);
        out512[745] = resIm628_s;
        out512[793] = -resIm628_s;
        
        let oRe525 = out512[794];
        let oIm525 = out512[795];
        let eRe525 = out512[538];
        let eIm525 = out512[539];
        let tRe525 = 0.9495281577110291;
        let tRe563 = 0.3136817514896393;
        let resIm525_s = eIm525 + (oRe525 * tRe563 + oIm525 * tRe525);
        out512[539] = resIm525_s;
        out512[999] = -resIm525_s;
        let resRe525_s = eRe525 + (oRe525 * tRe525 - oIm525 * tRe563);
        out512[998] = resRe525_s;
        out512[538] = resRe525_s;
        let resRe627_s = eRe525 - (oRe525 * tRe525 - oIm525 * tRe563);
        out512[794] = resRe627_s;
        out512[742] = resRe627_s;
        let resIm627_s = -eIm525 + (oRe525 * tRe563 + oIm525 * tRe525);
        out512[743] = resIm627_s;
        out512[795] = -resIm627_s;
        
        let oRe526 = out512[796];
        let oIm526 = out512[797];
        let eRe526 = out512[540];
        let eIm526 = out512[541];
        let tRe526 = 0.9415440559387207;
        let tRe562 = 0.3368898332118988;
        let resIm526_s = eIm526 + (oRe526 * tRe562 + oIm526 * tRe526);
        out512[541] = resIm526_s;
        out512[997] = -resIm526_s;
        let resRe526_s = eRe526 + (oRe526 * tRe526 - oIm526 * tRe562);
        out512[996] = resRe526_s;
        out512[540] = resRe526_s;
        let resRe626_s = eRe526 - (oRe526 * tRe526 - oIm526 * tRe562);
        out512[796] = resRe626_s;
        out512[740] = resRe626_s;
        let resIm626_s = -eIm526 + (oRe526 * tRe562 + oIm526 * tRe526);
        out512[741] = resIm626_s;
        out512[797] = -resIm626_s;
        
        let oRe527 = out512[798];
        let oIm527 = out512[799];
        let eRe527 = out512[542];
        let eIm527 = out512[543];
        let tRe527 = 0.9329928159713745;
        let tRe561 = 0.3598950803279877;
        let resIm527_s = eIm527 + (oRe527 * tRe561 + oIm527 * tRe527);
        out512[543] = resIm527_s;
        out512[995] = -resIm527_s;
        let resRe527_s = eRe527 + (oRe527 * tRe527 - oIm527 * tRe561);
        out512[994] = resRe527_s;
        out512[542] = resRe527_s;
        let resRe625_s = eRe527 - (oRe527 * tRe527 - oIm527 * tRe561);
        out512[798] = resRe625_s;
        out512[738] = resRe625_s;
        let resIm625_s = -eIm527 + (oRe527 * tRe561 + oIm527 * tRe527);
        out512[739] = resIm625_s;
        out512[799] = -resIm625_s;
        
        let oRe528 = out512[800];
        let oIm528 = out512[801];
        let eRe528 = out512[544];
        let eIm528 = out512[545];
        let tRe528 = 0.9238795042037964;
        let tRe560 = 0.3826834261417389;
        let resIm528_s = eIm528 + (oRe528 * tRe560 + oIm528 * tRe528);
        out512[545] = resIm528_s;
        out512[993] = -resIm528_s;
        let resRe528_s = eRe528 + (oRe528 * tRe528 - oIm528 * tRe560);
        out512[992] = resRe528_s;
        out512[544] = resRe528_s;
        let resRe624_s = eRe528 - (oRe528 * tRe528 - oIm528 * tRe560);
        out512[800] = resRe624_s;
        out512[736] = resRe624_s;
        let resIm624_s = -eIm528 + (oRe528 * tRe560 + oIm528 * tRe528);
        out512[737] = resIm624_s;
        out512[801] = -resIm624_s;
        
        let oRe529 = out512[802];
        let oIm529 = out512[803];
        let eRe529 = out512[546];
        let eIm529 = out512[547];
        let tRe529 = 0.9142097830772400;
        let tRe559 = 0.4052412807941437;
        let resIm529_s = eIm529 + (oRe529 * tRe559 + oIm529 * tRe529);
        out512[547] = resIm529_s;
        out512[991] = -resIm529_s;
        let resRe529_s = eRe529 + (oRe529 * tRe529 - oIm529 * tRe559);
        out512[990] = resRe529_s;
        out512[546] = resRe529_s;
        let resRe623_s = eRe529 - (oRe529 * tRe529 - oIm529 * tRe559);
        out512[802] = resRe623_s;
        out512[734] = resRe623_s;
        let resIm623_s = -eIm529 + (oRe529 * tRe559 + oIm529 * tRe529);
        out512[735] = resIm623_s;
        out512[803] = -resIm623_s;
        
        let oRe530 = out512[804];
        let oIm530 = out512[805];
        let eRe530 = out512[548];
        let eIm530 = out512[549];
        let tRe530 = 0.9039893150329590;
        let tRe558 = 0.4275551140308380;
        let resIm530_s = eIm530 + (oRe530 * tRe558 + oIm530 * tRe530);
        out512[549] = resIm530_s;
        out512[989] = -resIm530_s;
        let resRe530_s = eRe530 + (oRe530 * tRe530 - oIm530 * tRe558);
        out512[988] = resRe530_s;
        out512[548] = resRe530_s;
        let resRe622_s = eRe530 - (oRe530 * tRe530 - oIm530 * tRe558);
        out512[804] = resRe622_s;
        out512[732] = resRe622_s;
        let resIm622_s = -eIm530 + (oRe530 * tRe558 + oIm530 * tRe530);
        out512[733] = resIm622_s;
        out512[805] = -resIm622_s;
        
        let oRe531 = out512[806];
        let oIm531 = out512[807];
        let eRe531 = out512[550];
        let eIm531 = out512[551];
        let tRe531 = 0.8932242989540100;
        let tRe557 = 0.4496113061904907;
        let resIm531_s = eIm531 + (oRe531 * tRe557 + oIm531 * tRe531);
        out512[551] = resIm531_s;
        out512[987] = -resIm531_s;
        let resRe531_s = eRe531 + (oRe531 * tRe531 - oIm531 * tRe557);
        out512[986] = resRe531_s;
        out512[550] = resRe531_s;
        let resRe621_s = eRe531 - (oRe531 * tRe531 - oIm531 * tRe557);
        out512[806] = resRe621_s;
        out512[730] = resRe621_s;
        let resIm621_s = -eIm531 + (oRe531 * tRe557 + oIm531 * tRe531);
        out512[731] = resIm621_s;
        out512[807] = -resIm621_s;
        
        let oRe532 = out512[808];
        let oIm532 = out512[809];
        let eRe532 = out512[552];
        let eIm532 = out512[553];
        let tRe532 = 0.8819212913513184;
        let tRe556 = 0.4713967740535736;
        let resIm532_s = eIm532 + (oRe532 * tRe556 + oIm532 * tRe532);
        out512[553] = resIm532_s;
        out512[985] = -resIm532_s;
        let resRe532_s = eRe532 + (oRe532 * tRe532 - oIm532 * tRe556);
        out512[984] = resRe532_s;
        out512[552] = resRe532_s;
        let resRe620_s = eRe532 - (oRe532 * tRe532 - oIm532 * tRe556);
        out512[808] = resRe620_s;
        out512[728] = resRe620_s;
        let resIm620_s = -eIm532 + (oRe532 * tRe556 + oIm532 * tRe532);
        out512[729] = resIm620_s;
        out512[809] = -resIm620_s;
        
        let oRe533 = out512[810];
        let oIm533 = out512[811];
        let eRe533 = out512[554];
        let eIm533 = out512[555];
        let tRe533 = 0.8700870275497437;
        let tRe555 = 0.4928981959819794;
        let resIm533_s = eIm533 + (oRe533 * tRe555 + oIm533 * tRe533);
        out512[555] = resIm533_s;
        out512[983] = -resIm533_s;
        let resRe533_s = eRe533 + (oRe533 * tRe533 - oIm533 * tRe555);
        out512[982] = resRe533_s;
        out512[554] = resRe533_s;
        let resRe619_s = eRe533 - (oRe533 * tRe533 - oIm533 * tRe555);
        out512[810] = resRe619_s;
        out512[726] = resRe619_s;
        let resIm619_s = -eIm533 + (oRe533 * tRe555 + oIm533 * tRe533);
        out512[727] = resIm619_s;
        out512[811] = -resIm619_s;
        
        let oRe534 = out512[812];
        let oIm534 = out512[813];
        let eRe534 = out512[556];
        let eIm534 = out512[557];
        let tRe534 = 0.8577286005020142;
        let tRe554 = 0.5141028165817261;
        let resIm534_s = eIm534 + (oRe534 * tRe554 + oIm534 * tRe534);
        out512[557] = resIm534_s;
        out512[981] = -resIm534_s;
        let resRe534_s = eRe534 + (oRe534 * tRe534 - oIm534 * tRe554);
        out512[980] = resRe534_s;
        out512[556] = resRe534_s;
        let resRe618_s = eRe534 - (oRe534 * tRe534 - oIm534 * tRe554);
        out512[812] = resRe618_s;
        out512[724] = resRe618_s;
        let resIm618_s = -eIm534 + (oRe534 * tRe554 + oIm534 * tRe534);
        out512[725] = resIm618_s;
        out512[813] = -resIm618_s;
        
        let oRe535 = out512[814];
        let oIm535 = out512[815];
        let eRe535 = out512[558];
        let eIm535 = out512[559];
        let tRe535 = 0.8448535799980164;
        let tRe553 = 0.5349976420402527;
        let resIm535_s = eIm535 + (oRe535 * tRe553 + oIm535 * tRe535);
        out512[559] = resIm535_s;
        out512[979] = -resIm535_s;
        let resRe535_s = eRe535 + (oRe535 * tRe535 - oIm535 * tRe553);
        out512[978] = resRe535_s;
        out512[558] = resRe535_s;
        let resRe617_s = eRe535 - (oRe535 * tRe535 - oIm535 * tRe553);
        out512[814] = resRe617_s;
        out512[722] = resRe617_s;
        let resIm617_s = -eIm535 + (oRe535 * tRe553 + oIm535 * tRe535);
        out512[723] = resIm617_s;
        out512[815] = -resIm617_s;
        
        let oRe536 = out512[816];
        let oIm536 = out512[817];
        let eRe536 = out512[560];
        let eIm536 = out512[561];
        let tRe536 = 0.8314695954322815;
        let tRe552 = 0.5555702447891235;
        let resIm536_s = eIm536 + (oRe536 * tRe552 + oIm536 * tRe536);
        out512[561] = resIm536_s;
        out512[977] = -resIm536_s;
        let resRe536_s = eRe536 + (oRe536 * tRe536 - oIm536 * tRe552);
        out512[976] = resRe536_s;
        out512[560] = resRe536_s;
        let resRe616_s = eRe536 - (oRe536 * tRe536 - oIm536 * tRe552);
        out512[816] = resRe616_s;
        out512[720] = resRe616_s;
        let resIm616_s = -eIm536 + (oRe536 * tRe552 + oIm536 * tRe536);
        out512[721] = resIm616_s;
        out512[817] = -resIm616_s;
        
        let oRe537 = out512[818];
        let oIm537 = out512[819];
        let eRe537 = out512[562];
        let eIm537 = out512[563];
        let tRe537 = 0.8175848126411438;
        let tRe551 = 0.5758082270622253;
        let resIm537_s = eIm537 + (oRe537 * tRe551 + oIm537 * tRe537);
        out512[563] = resIm537_s;
        out512[975] = -resIm537_s;
        let resRe537_s = eRe537 + (oRe537 * tRe537 - oIm537 * tRe551);
        out512[974] = resRe537_s;
        out512[562] = resRe537_s;
        let resRe615_s = eRe537 - (oRe537 * tRe537 - oIm537 * tRe551);
        out512[818] = resRe615_s;
        out512[718] = resRe615_s;
        let resIm615_s = -eIm537 + (oRe537 * tRe551 + oIm537 * tRe537);
        out512[719] = resIm615_s;
        out512[819] = -resIm615_s;
        
        let oRe538 = out512[820];
        let oIm538 = out512[821];
        let eRe538 = out512[564];
        let eIm538 = out512[565];
        let tRe538 = 0.8032075166702271;
        let tRe550 = 0.5956993103027344;
        let resIm538_s = eIm538 + (oRe538 * tRe550 + oIm538 * tRe538);
        out512[565] = resIm538_s;
        out512[973] = -resIm538_s;
        let resRe538_s = eRe538 + (oRe538 * tRe538 - oIm538 * tRe550);
        out512[972] = resRe538_s;
        out512[564] = resRe538_s;
        let resRe614_s = eRe538 - (oRe538 * tRe538 - oIm538 * tRe550);
        out512[820] = resRe614_s;
        out512[716] = resRe614_s;
        let resIm614_s = -eIm538 + (oRe538 * tRe550 + oIm538 * tRe538);
        out512[717] = resIm614_s;
        out512[821] = -resIm614_s;
        
        let oRe539 = out512[822];
        let oIm539 = out512[823];
        let eRe539 = out512[566];
        let eIm539 = out512[567];
        let tRe539 = 0.7883464694023132;
        let tRe549 = 0.6152315735816956;
        let resIm539_s = eIm539 + (oRe539 * tRe549 + oIm539 * tRe539);
        out512[567] = resIm539_s;
        out512[971] = -resIm539_s;
        let resRe539_s = eRe539 + (oRe539 * tRe539 - oIm539 * tRe549);
        out512[970] = resRe539_s;
        out512[566] = resRe539_s;
        let resRe613_s = eRe539 - (oRe539 * tRe539 - oIm539 * tRe549);
        out512[822] = resRe613_s;
        out512[714] = resRe613_s;
        let resIm613_s = -eIm539 + (oRe539 * tRe549 + oIm539 * tRe539);
        out512[715] = resIm613_s;
        out512[823] = -resIm613_s;
        
        let oRe540 = out512[824];
        let oIm540 = out512[825];
        let eRe540 = out512[568];
        let eIm540 = out512[569];
        let tRe540 = 0.7730104923248291;
        let tRe548 = 0.6343932747840881;
        let resIm540_s = eIm540 + (oRe540 * tRe548 + oIm540 * tRe540);
        out512[569] = resIm540_s;
        out512[969] = -resIm540_s;
        let resRe540_s = eRe540 + (oRe540 * tRe540 - oIm540 * tRe548);
        out512[968] = resRe540_s;
        out512[568] = resRe540_s;
        let resRe612_s = eRe540 - (oRe540 * tRe540 - oIm540 * tRe548);
        out512[824] = resRe612_s;
        out512[712] = resRe612_s;
        let resIm612_s = -eIm540 + (oRe540 * tRe548 + oIm540 * tRe540);
        out512[713] = resIm612_s;
        out512[825] = -resIm612_s;
        
        let oRe541 = out512[826];
        let oIm541 = out512[827];
        let eRe541 = out512[570];
        let eIm541 = out512[571];
        let tRe541 = 0.7572088241577148;
        let tRe547 = 0.6531728506088257;
        let resIm541_s = eIm541 + (oRe541 * tRe547 + oIm541 * tRe541);
        out512[571] = resIm541_s;
        out512[967] = -resIm541_s;
        let resRe541_s = eRe541 + (oRe541 * tRe541 - oIm541 * tRe547);
        out512[966] = resRe541_s;
        out512[570] = resRe541_s;
        let resRe611_s = eRe541 - (oRe541 * tRe541 - oIm541 * tRe547);
        out512[826] = resRe611_s;
        out512[710] = resRe611_s;
        let resIm611_s = -eIm541 + (oRe541 * tRe547 + oIm541 * tRe541);
        out512[711] = resIm611_s;
        out512[827] = -resIm611_s;
        
        let oRe542 = out512[828];
        let oIm542 = out512[829];
        let eRe542 = out512[572];
        let eIm542 = out512[573];
        let tRe542 = 0.7409511208534241;
        let tRe546 = 0.6715589761734009;
        let resIm542_s = eIm542 + (oRe542 * tRe546 + oIm542 * tRe542);
        out512[573] = resIm542_s;
        out512[965] = -resIm542_s;
        let resRe542_s = eRe542 + (oRe542 * tRe542 - oIm542 * tRe546);
        out512[964] = resRe542_s;
        out512[572] = resRe542_s;
        let resRe610_s = eRe542 - (oRe542 * tRe542 - oIm542 * tRe546);
        out512[828] = resRe610_s;
        out512[708] = resRe610_s;
        let resIm610_s = -eIm542 + (oRe542 * tRe546 + oIm542 * tRe542);
        out512[709] = resIm610_s;
        out512[829] = -resIm610_s;
        
        let oRe543 = out512[830];
        let oIm543 = out512[831];
        let eRe543 = out512[574];
        let eIm543 = out512[575];
        let tRe543 = 0.7242470979690552;
        let tRe545 = 0.6895405650138855;
        let resIm543_s = eIm543 + (oRe543 * tRe545 + oIm543 * tRe543);
        out512[575] = resIm543_s;
        out512[963] = -resIm543_s;
        let resRe543_s = eRe543 + (oRe543 * tRe543 - oIm543 * tRe545);
        out512[962] = resRe543_s;
        out512[574] = resRe543_s;
        let resRe609_s = eRe543 - (oRe543 * tRe543 - oIm543 * tRe545);
        out512[830] = resRe609_s;
        out512[706] = resRe609_s;
        let resIm609_s = -eIm543 + (oRe543 * tRe545 + oIm543 * tRe543);
        out512[707] = resIm609_s;
        out512[831] = -resIm609_s;
        
        let oRe544 = out512[832];
        let oIm544 = out512[833];
        let eRe544 = out512[576];
        let eIm544 = out512[577];
        let tRe544 = 0.7071067690849304;
        let resIm544_s = eIm544 + (oRe544 * tRe544 + oIm544 * tRe544);
        out512[577] = resIm544_s;
        out512[961] = -resIm544_s;
        let resRe544_s = eRe544 + (oRe544 * tRe544 - oIm544 * tRe544);
        out512[960] = resRe544_s;
        out512[576] = resRe544_s;
        let resRe608_s = eRe544 - (oRe544 * tRe544 - oIm544 * tRe544);
        out512[832] = resRe608_s;
        out512[704] = resRe608_s;
        let resIm608_s = -eIm544 + (oRe544 * tRe544 + oIm544 * tRe544);
        out512[705] = resIm608_s;
        out512[833] = -resIm608_s;
        
        let oRe545 = out512[834];
        let oIm545 = out512[835];
        let eRe545 = out512[578];
        let eIm545 = out512[579];
        let resIm545_s = eIm545 + (oRe545 * tRe543 + oIm545 * tRe545);
        out512[579] = resIm545_s;
        out512[959] = -resIm545_s;
        let resRe545_s = eRe545 + (oRe545 * tRe545 - oIm545 * tRe543);
        out512[958] = resRe545_s;
        out512[578] = resRe545_s;
        let resRe607_s = eRe545 - (oRe545 * tRe545 - oIm545 * tRe543);
        out512[834] = resRe607_s;
        out512[702] = resRe607_s;
        let resIm607_s = -eIm545 + (oRe545 * tRe543 + oIm545 * tRe545);
        out512[703] = resIm607_s;
        out512[835] = -resIm607_s;
        
        let oRe546 = out512[836];
        let oIm546 = out512[837];
        let eRe546 = out512[580];
        let eIm546 = out512[581];
        let resIm546_s = eIm546 + (oRe546 * tRe542 + oIm546 * tRe546);
        out512[581] = resIm546_s;
        out512[957] = -resIm546_s;
        let resRe546_s = eRe546 + (oRe546 * tRe546 - oIm546 * tRe542);
        out512[956] = resRe546_s;
        out512[580] = resRe546_s;
        let resRe606_s = eRe546 - (oRe546 * tRe546 - oIm546 * tRe542);
        out512[836] = resRe606_s;
        out512[700] = resRe606_s;
        let resIm606_s = -eIm546 + (oRe546 * tRe542 + oIm546 * tRe546);
        out512[701] = resIm606_s;
        out512[837] = -resIm606_s;
        
        let oRe547 = out512[838];
        let oIm547 = out512[839];
        let eRe547 = out512[582];
        let eIm547 = out512[583];
        let resIm547_s = eIm547 + (oRe547 * tRe541 + oIm547 * tRe547);
        out512[583] = resIm547_s;
        out512[955] = -resIm547_s;
        let resRe547_s = eRe547 + (oRe547 * tRe547 - oIm547 * tRe541);
        out512[954] = resRe547_s;
        out512[582] = resRe547_s;
        let resRe605_s = eRe547 - (oRe547 * tRe547 - oIm547 * tRe541);
        out512[838] = resRe605_s;
        out512[698] = resRe605_s;
        let resIm605_s = -eIm547 + (oRe547 * tRe541 + oIm547 * tRe547);
        out512[699] = resIm605_s;
        out512[839] = -resIm605_s;
        
        let oRe548 = out512[840];
        let oIm548 = out512[841];
        let eRe548 = out512[584];
        let eIm548 = out512[585];
        let resIm548_s = eIm548 + (oRe548 * tRe540 + oIm548 * tRe548);
        out512[585] = resIm548_s;
        out512[953] = -resIm548_s;
        let resRe548_s = eRe548 + (oRe548 * tRe548 - oIm548 * tRe540);
        out512[952] = resRe548_s;
        out512[584] = resRe548_s;
        let resRe604_s = eRe548 - (oRe548 * tRe548 - oIm548 * tRe540);
        out512[840] = resRe604_s;
        out512[696] = resRe604_s;
        let resIm604_s = -eIm548 + (oRe548 * tRe540 + oIm548 * tRe548);
        out512[697] = resIm604_s;
        out512[841] = -resIm604_s;
        
        let oRe549 = out512[842];
        let oIm549 = out512[843];
        let eRe549 = out512[586];
        let eIm549 = out512[587];
        let resIm549_s = eIm549 + (oRe549 * tRe539 + oIm549 * tRe549);
        out512[587] = resIm549_s;
        out512[951] = -resIm549_s;
        let resRe549_s = eRe549 + (oRe549 * tRe549 - oIm549 * tRe539);
        out512[950] = resRe549_s;
        out512[586] = resRe549_s;
        let resRe603_s = eRe549 - (oRe549 * tRe549 - oIm549 * tRe539);
        out512[842] = resRe603_s;
        out512[694] = resRe603_s;
        let resIm603_s = -eIm549 + (oRe549 * tRe539 + oIm549 * tRe549);
        out512[695] = resIm603_s;
        out512[843] = -resIm603_s;
        
        let oRe550 = out512[844];
        let oIm550 = out512[845];
        let eRe550 = out512[588];
        let eIm550 = out512[589];
        let resIm550_s = eIm550 + (oRe550 * tRe538 + oIm550 * tRe550);
        out512[589] = resIm550_s;
        out512[949] = -resIm550_s;
        let resRe550_s = eRe550 + (oRe550 * tRe550 - oIm550 * tRe538);
        out512[948] = resRe550_s;
        out512[588] = resRe550_s;
        let resRe602_s = eRe550 - (oRe550 * tRe550 - oIm550 * tRe538);
        out512[844] = resRe602_s;
        out512[692] = resRe602_s;
        let resIm602_s = -eIm550 + (oRe550 * tRe538 + oIm550 * tRe550);
        out512[693] = resIm602_s;
        out512[845] = -resIm602_s;
        
        let oRe551 = out512[846];
        let oIm551 = out512[847];
        let eRe551 = out512[590];
        let eIm551 = out512[591];
        let resIm551_s = eIm551 + (oRe551 * tRe537 + oIm551 * tRe551);
        out512[591] = resIm551_s;
        out512[947] = -resIm551_s;
        let resRe551_s = eRe551 + (oRe551 * tRe551 - oIm551 * tRe537);
        out512[946] = resRe551_s;
        out512[590] = resRe551_s;
        let resRe601_s = eRe551 - (oRe551 * tRe551 - oIm551 * tRe537);
        out512[846] = resRe601_s;
        out512[690] = resRe601_s;
        let resIm601_s = -eIm551 + (oRe551 * tRe537 + oIm551 * tRe551);
        out512[691] = resIm601_s;
        out512[847] = -resIm601_s;
        
        let oRe552 = out512[848];
        let oIm552 = out512[849];
        let eRe552 = out512[592];
        let eIm552 = out512[593];
        let resIm552_s = eIm552 + (oRe552 * tRe536 + oIm552 * tRe552);
        out512[593] = resIm552_s;
        out512[945] = -resIm552_s;
        let resRe552_s = eRe552 + (oRe552 * tRe552 - oIm552 * tRe536);
        out512[944] = resRe552_s;
        out512[592] = resRe552_s;
        let resRe600_s = eRe552 - (oRe552 * tRe552 - oIm552 * tRe536);
        out512[848] = resRe600_s;
        out512[688] = resRe600_s;
        let resIm600_s = -eIm552 + (oRe552 * tRe536 + oIm552 * tRe552);
        out512[689] = resIm600_s;
        out512[849] = -resIm600_s;
        
        let oRe553 = out512[850];
        let oIm553 = out512[851];
        let eRe553 = out512[594];
        let eIm553 = out512[595];
        let resIm553_s = eIm553 + (oRe553 * tRe535 + oIm553 * tRe553);
        out512[595] = resIm553_s;
        out512[943] = -resIm553_s;
        let resRe553_s = eRe553 + (oRe553 * tRe553 - oIm553 * tRe535);
        out512[942] = resRe553_s;
        out512[594] = resRe553_s;
        let resRe599_s = eRe553 - (oRe553 * tRe553 - oIm553 * tRe535);
        out512[850] = resRe599_s;
        out512[686] = resRe599_s;
        let resIm599_s = -eIm553 + (oRe553 * tRe535 + oIm553 * tRe553);
        out512[687] = resIm599_s;
        out512[851] = -resIm599_s;
        
        let oRe554 = out512[852];
        let oIm554 = out512[853];
        let eRe554 = out512[596];
        let eIm554 = out512[597];
        let resIm554_s = eIm554 + (oRe554 * tRe534 + oIm554 * tRe554);
        out512[597] = resIm554_s;
        out512[941] = -resIm554_s;
        let resRe554_s = eRe554 + (oRe554 * tRe554 - oIm554 * tRe534);
        out512[940] = resRe554_s;
        out512[596] = resRe554_s;
        let resRe598_s = eRe554 - (oRe554 * tRe554 - oIm554 * tRe534);
        out512[852] = resRe598_s;
        out512[684] = resRe598_s;
        let resIm598_s = -eIm554 + (oRe554 * tRe534 + oIm554 * tRe554);
        out512[685] = resIm598_s;
        out512[853] = -resIm598_s;
        
        let oRe555 = out512[854];
        let oIm555 = out512[855];
        let eRe555 = out512[598];
        let eIm555 = out512[599];
        let resIm555_s = eIm555 + (oRe555 * tRe533 + oIm555 * tRe555);
        out512[599] = resIm555_s;
        out512[939] = -resIm555_s;
        let resRe555_s = eRe555 + (oRe555 * tRe555 - oIm555 * tRe533);
        out512[938] = resRe555_s;
        out512[598] = resRe555_s;
        let resRe597_s = eRe555 - (oRe555 * tRe555 - oIm555 * tRe533);
        out512[854] = resRe597_s;
        out512[682] = resRe597_s;
        let resIm597_s = -eIm555 + (oRe555 * tRe533 + oIm555 * tRe555);
        out512[683] = resIm597_s;
        out512[855] = -resIm597_s;
        
        let oRe556 = out512[856];
        let oIm556 = out512[857];
        let eRe556 = out512[600];
        let eIm556 = out512[601];
        let resIm556_s = eIm556 + (oRe556 * tRe532 + oIm556 * tRe556);
        out512[601] = resIm556_s;
        out512[937] = -resIm556_s;
        let resRe556_s = eRe556 + (oRe556 * tRe556 - oIm556 * tRe532);
        out512[936] = resRe556_s;
        out512[600] = resRe556_s;
        let resRe596_s = eRe556 - (oRe556 * tRe556 - oIm556 * tRe532);
        out512[856] = resRe596_s;
        out512[680] = resRe596_s;
        let resIm596_s = -eIm556 + (oRe556 * tRe532 + oIm556 * tRe556);
        out512[681] = resIm596_s;
        out512[857] = -resIm596_s;
        
        let oRe557 = out512[858];
        let oIm557 = out512[859];
        let eRe557 = out512[602];
        let eIm557 = out512[603];
        let resIm557_s = eIm557 + (oRe557 * tRe531 + oIm557 * tRe557);
        out512[603] = resIm557_s;
        out512[935] = -resIm557_s;
        let resRe557_s = eRe557 + (oRe557 * tRe557 - oIm557 * tRe531);
        out512[934] = resRe557_s;
        out512[602] = resRe557_s;
        let resRe595_s = eRe557 - (oRe557 * tRe557 - oIm557 * tRe531);
        out512[858] = resRe595_s;
        out512[678] = resRe595_s;
        let resIm595_s = -eIm557 + (oRe557 * tRe531 + oIm557 * tRe557);
        out512[679] = resIm595_s;
        out512[859] = -resIm595_s;
        
        let oRe558 = out512[860];
        let oIm558 = out512[861];
        let eRe558 = out512[604];
        let eIm558 = out512[605];
        let resIm558_s = eIm558 + (oRe558 * tRe530 + oIm558 * tRe558);
        out512[605] = resIm558_s;
        out512[933] = -resIm558_s;
        let resRe558_s = eRe558 + (oRe558 * tRe558 - oIm558 * tRe530);
        out512[932] = resRe558_s;
        out512[604] = resRe558_s;
        let resRe594_s = eRe558 - (oRe558 * tRe558 - oIm558 * tRe530);
        out512[860] = resRe594_s;
        out512[676] = resRe594_s;
        let resIm594_s = -eIm558 + (oRe558 * tRe530 + oIm558 * tRe558);
        out512[677] = resIm594_s;
        out512[861] = -resIm594_s;
        
        let oRe559 = out512[862];
        let oIm559 = out512[863];
        let eRe559 = out512[606];
        let eIm559 = out512[607];
        let resIm559_s = eIm559 + (oRe559 * tRe529 + oIm559 * tRe559);
        out512[607] = resIm559_s;
        out512[931] = -resIm559_s;
        let resRe559_s = eRe559 + (oRe559 * tRe559 - oIm559 * tRe529);
        out512[930] = resRe559_s;
        out512[606] = resRe559_s;
        let resRe593_s = eRe559 - (oRe559 * tRe559 - oIm559 * tRe529);
        out512[862] = resRe593_s;
        out512[674] = resRe593_s;
        let resIm593_s = -eIm559 + (oRe559 * tRe529 + oIm559 * tRe559);
        out512[675] = resIm593_s;
        out512[863] = -resIm593_s;
        
        let oRe560 = out512[864];
        let oIm560 = out512[865];
        let eRe560 = out512[608];
        let eIm560 = out512[609];
        let resIm560_s = eIm560 + (oRe560 * tRe528 + oIm560 * tRe560);
        out512[609] = resIm560_s;
        out512[929] = -resIm560_s;
        let resRe560_s = eRe560 + (oRe560 * tRe560 - oIm560 * tRe528);
        out512[928] = resRe560_s;
        out512[608] = resRe560_s;
        let resRe592_s = eRe560 - (oRe560 * tRe560 - oIm560 * tRe528);
        out512[864] = resRe592_s;
        out512[672] = resRe592_s;
        let resIm592_s = -eIm560 + (oRe560 * tRe528 + oIm560 * tRe560);
        out512[673] = resIm592_s;
        out512[865] = -resIm592_s;
        
        let oRe561 = out512[866];
        let oIm561 = out512[867];
        let eRe561 = out512[610];
        let eIm561 = out512[611];
        let resIm561_s = eIm561 + (oRe561 * tRe527 + oIm561 * tRe561);
        out512[611] = resIm561_s;
        out512[927] = -resIm561_s;
        let resRe561_s = eRe561 + (oRe561 * tRe561 - oIm561 * tRe527);
        out512[926] = resRe561_s;
        out512[610] = resRe561_s;
        let resRe591_s = eRe561 - (oRe561 * tRe561 - oIm561 * tRe527);
        out512[866] = resRe591_s;
        out512[670] = resRe591_s;
        let resIm591_s = -eIm561 + (oRe561 * tRe527 + oIm561 * tRe561);
        out512[671] = resIm591_s;
        out512[867] = -resIm591_s;
        
        let oRe562 = out512[868];
        let oIm562 = out512[869];
        let eRe562 = out512[612];
        let eIm562 = out512[613];
        let resIm562_s = eIm562 + (oRe562 * tRe526 + oIm562 * tRe562);
        out512[613] = resIm562_s;
        out512[925] = -resIm562_s;
        let resRe562_s = eRe562 + (oRe562 * tRe562 - oIm562 * tRe526);
        out512[924] = resRe562_s;
        out512[612] = resRe562_s;
        let resRe590_s = eRe562 - (oRe562 * tRe562 - oIm562 * tRe526);
        out512[868] = resRe590_s;
        out512[668] = resRe590_s;
        let resIm590_s = -eIm562 + (oRe562 * tRe526 + oIm562 * tRe562);
        out512[669] = resIm590_s;
        out512[869] = -resIm590_s;
        
        let oRe563 = out512[870];
        let oIm563 = out512[871];
        let eRe563 = out512[614];
        let eIm563 = out512[615];
        let resIm563_s = eIm563 + (oRe563 * tRe525 + oIm563 * tRe563);
        out512[615] = resIm563_s;
        out512[923] = -resIm563_s;
        let resRe563_s = eRe563 + (oRe563 * tRe563 - oIm563 * tRe525);
        out512[922] = resRe563_s;
        out512[614] = resRe563_s;
        let resRe589_s = eRe563 - (oRe563 * tRe563 - oIm563 * tRe525);
        out512[870] = resRe589_s;
        out512[666] = resRe589_s;
        let resIm589_s = -eIm563 + (oRe563 * tRe525 + oIm563 * tRe563);
        out512[667] = resIm589_s;
        out512[871] = -resIm589_s;
        
        let oRe564 = out512[872];
        let oIm564 = out512[873];
        let eRe564 = out512[616];
        let eIm564 = out512[617];
        let resIm564_s = eIm564 + (oRe564 * tRe524 + oIm564 * tRe564);
        out512[617] = resIm564_s;
        out512[921] = -resIm564_s;
        let resRe564_s = eRe564 + (oRe564 * tRe564 - oIm564 * tRe524);
        out512[920] = resRe564_s;
        out512[616] = resRe564_s;
        let resRe588_s = eRe564 - (oRe564 * tRe564 - oIm564 * tRe524);
        out512[872] = resRe588_s;
        out512[664] = resRe588_s;
        let resIm588_s = -eIm564 + (oRe564 * tRe524 + oIm564 * tRe564);
        out512[665] = resIm588_s;
        out512[873] = -resIm588_s;
        
        let oRe565 = out512[874];
        let oIm565 = out512[875];
        let eRe565 = out512[618];
        let eIm565 = out512[619];
        let resIm565_s = eIm565 + (oRe565 * tRe523 + oIm565 * tRe565);
        out512[619] = resIm565_s;
        out512[919] = -resIm565_s;
        let resRe565_s = eRe565 + (oRe565 * tRe565 - oIm565 * tRe523);
        out512[918] = resRe565_s;
        out512[618] = resRe565_s;
        let resRe587_s = eRe565 - (oRe565 * tRe565 - oIm565 * tRe523);
        out512[874] = resRe587_s;
        out512[662] = resRe587_s;
        let resIm587_s = -eIm565 + (oRe565 * tRe523 + oIm565 * tRe565);
        out512[663] = resIm587_s;
        out512[875] = -resIm587_s;
        
        let oRe566 = out512[876];
        let oIm566 = out512[877];
        let eRe566 = out512[620];
        let eIm566 = out512[621];
        let resIm566_s = eIm566 + (oRe566 * tRe522 + oIm566 * tRe566);
        out512[621] = resIm566_s;
        out512[917] = -resIm566_s;
        let resRe566_s = eRe566 + (oRe566 * tRe566 - oIm566 * tRe522);
        out512[916] = resRe566_s;
        out512[620] = resRe566_s;
        let resRe586_s = eRe566 - (oRe566 * tRe566 - oIm566 * tRe522);
        out512[876] = resRe586_s;
        out512[660] = resRe586_s;
        let resIm586_s = -eIm566 + (oRe566 * tRe522 + oIm566 * tRe566);
        out512[661] = resIm586_s;
        out512[877] = -resIm586_s;
        
        let oRe567 = out512[878];
        let oIm567 = out512[879];
        let eRe567 = out512[622];
        let eIm567 = out512[623];
        let resIm567_s = eIm567 + (oRe567 * tRe521 + oIm567 * tRe567);
        out512[623] = resIm567_s;
        out512[915] = -resIm567_s;
        let resRe567_s = eRe567 + (oRe567 * tRe567 - oIm567 * tRe521);
        out512[914] = resRe567_s;
        out512[622] = resRe567_s;
        let resRe585_s = eRe567 - (oRe567 * tRe567 - oIm567 * tRe521);
        out512[878] = resRe585_s;
        out512[658] = resRe585_s;
        let resIm585_s = -eIm567 + (oRe567 * tRe521 + oIm567 * tRe567);
        out512[659] = resIm585_s;
        out512[879] = -resIm585_s;
        
        let oRe568 = out512[880];
        let oIm568 = out512[881];
        let eRe568 = out512[624];
        let eIm568 = out512[625];
        let resIm568_s = eIm568 + (oRe568 * tRe520 + oIm568 * tRe568);
        out512[625] = resIm568_s;
        out512[913] = -resIm568_s;
        let resRe568_s = eRe568 + (oRe568 * tRe568 - oIm568 * tRe520);
        out512[912] = resRe568_s;
        out512[624] = resRe568_s;
        let resRe584_s = eRe568 - (oRe568 * tRe568 - oIm568 * tRe520);
        out512[880] = resRe584_s;
        out512[656] = resRe584_s;
        let resIm584_s = -eIm568 + (oRe568 * tRe520 + oIm568 * tRe568);
        out512[657] = resIm584_s;
        out512[881] = -resIm584_s;
        
        let oRe569 = out512[882];
        let oIm569 = out512[883];
        let eRe569 = out512[626];
        let eIm569 = out512[627];
        let resIm569_s = eIm569 + (oRe569 * tRe519 + oIm569 * tRe569);
        out512[627] = resIm569_s;
        out512[911] = -resIm569_s;
        let resRe569_s = eRe569 + (oRe569 * tRe569 - oIm569 * tRe519);
        out512[910] = resRe569_s;
        out512[626] = resRe569_s;
        let resRe583_s = eRe569 - (oRe569 * tRe569 - oIm569 * tRe519);
        out512[882] = resRe583_s;
        out512[654] = resRe583_s;
        let resIm583_s = -eIm569 + (oRe569 * tRe519 + oIm569 * tRe569);
        out512[655] = resIm583_s;
        out512[883] = -resIm583_s;
        
        let oRe570 = out512[884];
        let oIm570 = out512[885];
        let eRe570 = out512[628];
        let eIm570 = out512[629];
        let resIm570_s = eIm570 + (oRe570 * tRe518 + oIm570 * tRe570);
        out512[629] = resIm570_s;
        out512[909] = -resIm570_s;
        let resRe570_s = eRe570 + (oRe570 * tRe570 - oIm570 * tRe518);
        out512[908] = resRe570_s;
        out512[628] = resRe570_s;
        let resRe582_s = eRe570 - (oRe570 * tRe570 - oIm570 * tRe518);
        out512[884] = resRe582_s;
        out512[652] = resRe582_s;
        let resIm582_s = -eIm570 + (oRe570 * tRe518 + oIm570 * tRe570);
        out512[653] = resIm582_s;
        out512[885] = -resIm582_s;
        
        let oRe571 = out512[886];
        let oIm571 = out512[887];
        let eRe571 = out512[630];
        let eIm571 = out512[631];
        let resIm571_s = eIm571 + (oRe571 * tRe517 + oIm571 * tRe571);
        out512[631] = resIm571_s;
        out512[907] = -resIm571_s;
        let resRe571_s = eRe571 + (oRe571 * tRe571 - oIm571 * tRe517);
        out512[906] = resRe571_s;
        out512[630] = resRe571_s;
        let resRe581_s = eRe571 - (oRe571 * tRe571 - oIm571 * tRe517);
        out512[886] = resRe581_s;
        out512[650] = resRe581_s;
        let resIm581_s = -eIm571 + (oRe571 * tRe517 + oIm571 * tRe571);
        out512[651] = resIm581_s;
        out512[887] = -resIm581_s;
        
        let oRe572 = out512[888];
        let oIm572 = out512[889];
        let eRe572 = out512[632];
        let eIm572 = out512[633];
        let resIm572_s = eIm572 + (oRe572 * tRe516 + oIm572 * tRe572);
        out512[633] = resIm572_s;
        out512[905] = -resIm572_s;
        let resRe572_s = eRe572 + (oRe572 * tRe572 - oIm572 * tRe516);
        out512[904] = resRe572_s;
        out512[632] = resRe572_s;
        let resRe580_s = eRe572 - (oRe572 * tRe572 - oIm572 * tRe516);
        out512[888] = resRe580_s;
        out512[648] = resRe580_s;
        let resIm580_s = -eIm572 + (oRe572 * tRe516 + oIm572 * tRe572);
        out512[649] = resIm580_s;
        out512[889] = -resIm580_s;
        
        let oRe573 = out512[890];
        let oIm573 = out512[891];
        let eRe573 = out512[634];
        let eIm573 = out512[635];
        let resIm573_s = eIm573 + (oRe573 * tRe515 + oIm573 * tRe573);
        out512[635] = resIm573_s;
        out512[903] = -resIm573_s;
        let resRe573_s = eRe573 + (oRe573 * tRe573 - oIm573 * tRe515);
        out512[902] = resRe573_s;
        out512[634] = resRe573_s;
        let resRe579_s = eRe573 - (oRe573 * tRe573 - oIm573 * tRe515);
        out512[890] = resRe579_s;
        out512[646] = resRe579_s;
        let resIm579_s = -eIm573 + (oRe573 * tRe515 + oIm573 * tRe573);
        out512[647] = resIm579_s;
        out512[891] = -resIm579_s;
        
        let oRe574 = out512[892];
        let oIm574 = out512[893];
        let eRe574 = out512[636];
        let eIm574 = out512[637];
        let resIm574_s = eIm574 + (oRe574 * tRe514 + oIm574 * tRe574);
        out512[637] = resIm574_s;
        out512[901] = -resIm574_s;
        let resRe574_s = eRe574 + (oRe574 * tRe574 - oIm574 * tRe514);
        out512[900] = resRe574_s;
        out512[636] = resRe574_s;
        let resRe578_s = eRe574 - (oRe574 * tRe574 - oIm574 * tRe514);
        out512[892] = resRe578_s;
        out512[644] = resRe578_s;
        let resIm578_s = -eIm574 + (oRe574 * tRe514 + oIm574 * tRe574);
        out512[645] = resIm578_s;
        out512[893] = -resIm578_s;
        
        let oRe575 = out512[894];
        let oIm575 = out512[895];
        let eRe575 = out512[638];
        let eIm575 = out512[639];
        let resIm575_s = eIm575 + (oRe575 * tRe513 + oIm575 * tRe575);
        out512[639] = resIm575_s;
        out512[899] = -resIm575_s;
        let resRe575_s = eRe575 + (oRe575 * tRe575 - oIm575 * tRe513);
        out512[898] = resRe575_s;
        out512[638] = resRe575_s;
        let resRe577_s = eRe575 - (oRe575 * tRe575 - oIm575 * tRe513);
        out512[894] = resRe577_s;
        out512[642] = resRe577_s;
        let resIm577_s = -eIm575 + (oRe575 * tRe513 + oIm575 * tRe575);
        out512[643] = resIm577_s;
        out512[895] = -resIm577_s;
        
        let oRe576 = out512[896];
        let oIm576 = out512[897];
        let eRe576 = out512[640];
        let eIm576 = out512[641];
        let resIm576_s = eIm576 + oRe576;
        out512[641] = resIm576_s;
        out512[897] = -resIm576_s;
        let resRe576_s = eRe576 - oIm576;
        out512[896] = resRe576_s;
        out512[640] = resRe576_s;
        
    } 
    ////////////////////////////////////////////////
    ////////////////////////////////////////////////
    // RADIX 2 (unrolled) - FFT step for SIZE 512 
    ////////////////////////////////////////////////
    { 
        let oRe0 = out512[512];
        let oIm0 = out512[513];
        let eRe0 = out512[0];
        let eIm0 = out512[1];
        let resRe0_s = eRe0 + oRe0;
        out512[0] = resRe0_s;
        let resIm0_s = eIm0 + oIm0;
        out512[1] = resIm0_s;
        let resRe0_d = eRe0 - oRe0;
        out512[512] = resRe0_d;
        let resIm0_d = eIm0 - oIm0;
        out512[513] = resIm0_d;
        
        let oRe1 = out512[514];
        let oIm1 = out512[515];
        let eRe1 = out512[2];
        let eIm1 = out512[3];
        let tRe1 = 0.9999247193336487;
        let tRe127 = 0.0122715290635824;
        let resIm1_s = eIm1 + (oRe1 * tRe127 + oIm1 * tRe1);
        out512[3] = resIm1_s;
        out512[1023] = -resIm1_s;
        let resRe1_s = eRe1 + (oRe1 * tRe1 - oIm1 * tRe127);
        out512[1022] = resRe1_s;
        out512[2] = resRe1_s;
        let resRe255_s = eRe1 - (oRe1 * tRe1 - oIm1 * tRe127);
        out512[514] = resRe255_s;
        out512[510] = resRe255_s;
        let resIm255_s = -eIm1 + (oRe1 * tRe127 + oIm1 * tRe1);
        out512[511] = resIm255_s;
        out512[515] = -resIm255_s;
        
        let oRe2 = out512[516];
        let oIm2 = out512[517];
        let eRe2 = out512[4];
        let eIm2 = out512[5];
        let tRe2 = 0.9996988177299500;
        let tRe126 = 0.0245412550866604;
        let resIm2_s = eIm2 + (oRe2 * tRe126 + oIm2 * tRe2);
        out512[5] = resIm2_s;
        out512[1021] = -resIm2_s;
        let resRe2_s = eRe2 + (oRe2 * tRe2 - oIm2 * tRe126);
        out512[1020] = resRe2_s;
        out512[4] = resRe2_s;
        let resRe254_s = eRe2 - (oRe2 * tRe2 - oIm2 * tRe126);
        out512[516] = resRe254_s;
        out512[508] = resRe254_s;
        let resIm254_s = -eIm2 + (oRe2 * tRe126 + oIm2 * tRe2);
        out512[509] = resIm254_s;
        out512[517] = -resIm254_s;
        
        let oRe3 = out512[518];
        let oIm3 = out512[519];
        let eRe3 = out512[6];
        let eIm3 = out512[7];
        let tRe3 = 0.9993223547935486;
        let tRe125 = 0.0368071645498276;
        let resIm3_s = eIm3 + (oRe3 * tRe125 + oIm3 * tRe3);
        out512[7] = resIm3_s;
        out512[1019] = -resIm3_s;
        let resRe3_s = eRe3 + (oRe3 * tRe3 - oIm3 * tRe125);
        out512[1018] = resRe3_s;
        out512[6] = resRe3_s;
        let resRe253_s = eRe3 - (oRe3 * tRe3 - oIm3 * tRe125);
        out512[518] = resRe253_s;
        out512[506] = resRe253_s;
        let resIm253_s = -eIm3 + (oRe3 * tRe125 + oIm3 * tRe3);
        out512[507] = resIm253_s;
        out512[519] = -resIm253_s;
        
        let oRe4 = out512[520];
        let oIm4 = out512[521];
        let eRe4 = out512[8];
        let eIm4 = out512[9];
        let tRe4 = 0.9987954497337341;
        let tRe124 = 0.0490676499903202;
        let resIm4_s = eIm4 + (oRe4 * tRe124 + oIm4 * tRe4);
        out512[9] = resIm4_s;
        out512[1017] = -resIm4_s;
        let resRe4_s = eRe4 + (oRe4 * tRe4 - oIm4 * tRe124);
        out512[1016] = resRe4_s;
        out512[8] = resRe4_s;
        let resRe252_s = eRe4 - (oRe4 * tRe4 - oIm4 * tRe124);
        out512[520] = resRe252_s;
        out512[504] = resRe252_s;
        let resIm252_s = -eIm4 + (oRe4 * tRe124 + oIm4 * tRe4);
        out512[505] = resIm252_s;
        out512[521] = -resIm252_s;
        
        let oRe5 = out512[522];
        let oIm5 = out512[523];
        let eRe5 = out512[10];
        let eIm5 = out512[11];
        let tRe5 = 0.9981181025505066;
        let tRe123 = 0.0613207481801510;
        let resIm5_s = eIm5 + (oRe5 * tRe123 + oIm5 * tRe5);
        out512[11] = resIm5_s;
        out512[1015] = -resIm5_s;
        let resRe5_s = eRe5 + (oRe5 * tRe5 - oIm5 * tRe123);
        out512[1014] = resRe5_s;
        out512[10] = resRe5_s;
        let resRe251_s = eRe5 - (oRe5 * tRe5 - oIm5 * tRe123);
        out512[522] = resRe251_s;
        out512[502] = resRe251_s;
        let resIm251_s = -eIm5 + (oRe5 * tRe123 + oIm5 * tRe5);
        out512[503] = resIm251_s;
        out512[523] = -resIm251_s;
        
        let oRe6 = out512[524];
        let oIm6 = out512[525];
        let eRe6 = out512[12];
        let eIm6 = out512[13];
        let tRe6 = 0.9972904324531555;
        let tRe122 = 0.0735646113753319;
        let resIm6_s = eIm6 + (oRe6 * tRe122 + oIm6 * tRe6);
        out512[13] = resIm6_s;
        out512[1013] = -resIm6_s;
        let resRe6_s = eRe6 + (oRe6 * tRe6 - oIm6 * tRe122);
        out512[1012] = resRe6_s;
        out512[12] = resRe6_s;
        let resRe250_s = eRe6 - (oRe6 * tRe6 - oIm6 * tRe122);
        out512[524] = resRe250_s;
        out512[500] = resRe250_s;
        let resIm250_s = -eIm6 + (oRe6 * tRe122 + oIm6 * tRe6);
        out512[501] = resIm250_s;
        out512[525] = -resIm250_s;
        
        let oRe7 = out512[526];
        let oIm7 = out512[527];
        let eRe7 = out512[14];
        let eIm7 = out512[15];
        let tRe7 = 0.9963126182556152;
        let tRe121 = 0.0857972726225853;
        let resIm7_s = eIm7 + (oRe7 * tRe121 + oIm7 * tRe7);
        out512[15] = resIm7_s;
        out512[1011] = -resIm7_s;
        let resRe7_s = eRe7 + (oRe7 * tRe7 - oIm7 * tRe121);
        out512[1010] = resRe7_s;
        out512[14] = resRe7_s;
        let resRe249_s = eRe7 - (oRe7 * tRe7 - oIm7 * tRe121);
        out512[526] = resRe249_s;
        out512[498] = resRe249_s;
        let resIm249_s = -eIm7 + (oRe7 * tRe121 + oIm7 * tRe7);
        out512[499] = resIm249_s;
        out512[527] = -resIm249_s;
        
        let oRe8 = out512[528];
        let oIm8 = out512[529];
        let eRe8 = out512[16];
        let eIm8 = out512[17];
        let tRe8 = 0.9951847195625305;
        let tRe120 = 0.0980171337723732;
        let resIm8_s = eIm8 + (oRe8 * tRe120 + oIm8 * tRe8);
        out512[17] = resIm8_s;
        out512[1009] = -resIm8_s;
        let resRe8_s = eRe8 + (oRe8 * tRe8 - oIm8 * tRe120);
        out512[1008] = resRe8_s;
        out512[16] = resRe8_s;
        let resRe248_s = eRe8 - (oRe8 * tRe8 - oIm8 * tRe120);
        out512[528] = resRe248_s;
        out512[496] = resRe248_s;
        let resIm248_s = -eIm8 + (oRe8 * tRe120 + oIm8 * tRe8);
        out512[497] = resIm248_s;
        out512[529] = -resIm248_s;
        
        let oRe9 = out512[530];
        let oIm9 = out512[531];
        let eRe9 = out512[18];
        let eIm9 = out512[19];
        let tRe9 = 0.9939069747924805;
        let tRe119 = 0.1102222353219986;
        let resIm9_s = eIm9 + (oRe9 * tRe119 + oIm9 * tRe9);
        out512[19] = resIm9_s;
        out512[1007] = -resIm9_s;
        let resRe9_s = eRe9 + (oRe9 * tRe9 - oIm9 * tRe119);
        out512[1006] = resRe9_s;
        out512[18] = resRe9_s;
        let resRe247_s = eRe9 - (oRe9 * tRe9 - oIm9 * tRe119);
        out512[530] = resRe247_s;
        out512[494] = resRe247_s;
        let resIm247_s = -eIm9 + (oRe9 * tRe119 + oIm9 * tRe9);
        out512[495] = resIm247_s;
        out512[531] = -resIm247_s;
        
        let oRe10 = out512[532];
        let oIm10 = out512[533];
        let eRe10 = out512[20];
        let eIm10 = out512[21];
        let tRe10 = 0.9924795627593994;
        let tRe118 = 0.1224106252193451;
        let resIm10_s = eIm10 + (oRe10 * tRe118 + oIm10 * tRe10);
        out512[21] = resIm10_s;
        out512[1005] = -resIm10_s;
        let resRe10_s = eRe10 + (oRe10 * tRe10 - oIm10 * tRe118);
        out512[1004] = resRe10_s;
        out512[20] = resRe10_s;
        let resRe246_s = eRe10 - (oRe10 * tRe10 - oIm10 * tRe118);
        out512[532] = resRe246_s;
        out512[492] = resRe246_s;
        let resIm246_s = -eIm10 + (oRe10 * tRe118 + oIm10 * tRe10);
        out512[493] = resIm246_s;
        out512[533] = -resIm246_s;
        
        let oRe11 = out512[534];
        let oIm11 = out512[535];
        let eRe11 = out512[22];
        let eIm11 = out512[23];
        let tRe11 = 0.9909026622772217;
        let tRe117 = 0.1345806866884232;
        let resIm11_s = eIm11 + (oRe11 * tRe117 + oIm11 * tRe11);
        out512[23] = resIm11_s;
        out512[1003] = -resIm11_s;
        let resRe11_s = eRe11 + (oRe11 * tRe11 - oIm11 * tRe117);
        out512[1002] = resRe11_s;
        out512[22] = resRe11_s;
        let resRe245_s = eRe11 - (oRe11 * tRe11 - oIm11 * tRe117);
        out512[534] = resRe245_s;
        out512[490] = resRe245_s;
        let resIm245_s = -eIm11 + (oRe11 * tRe117 + oIm11 * tRe11);
        out512[491] = resIm245_s;
        out512[535] = -resIm245_s;
        
        let oRe12 = out512[536];
        let oIm12 = out512[537];
        let eRe12 = out512[24];
        let eIm12 = out512[25];
        let tRe12 = 0.9891765117645264;
        let tRe116 = 0.1467304974794388;
        let resIm12_s = eIm12 + (oRe12 * tRe116 + oIm12 * tRe12);
        out512[25] = resIm12_s;
        out512[1001] = -resIm12_s;
        let resRe12_s = eRe12 + (oRe12 * tRe12 - oIm12 * tRe116);
        out512[1000] = resRe12_s;
        out512[24] = resRe12_s;
        let resRe244_s = eRe12 - (oRe12 * tRe12 - oIm12 * tRe116);
        out512[536] = resRe244_s;
        out512[488] = resRe244_s;
        let resIm244_s = -eIm12 + (oRe12 * tRe116 + oIm12 * tRe12);
        out512[489] = resIm244_s;
        out512[537] = -resIm244_s;
        
        let oRe13 = out512[538];
        let oIm13 = out512[539];
        let eRe13 = out512[26];
        let eIm13 = out512[27];
        let tRe13 = 0.9873014092445374;
        let tRe115 = 0.1588581949472427;
        let resIm13_s = eIm13 + (oRe13 * tRe115 + oIm13 * tRe13);
        out512[27] = resIm13_s;
        out512[999] = -resIm13_s;
        let resRe13_s = eRe13 + (oRe13 * tRe13 - oIm13 * tRe115);
        out512[998] = resRe13_s;
        out512[26] = resRe13_s;
        let resRe243_s = eRe13 - (oRe13 * tRe13 - oIm13 * tRe115);
        out512[538] = resRe243_s;
        out512[486] = resRe243_s;
        let resIm243_s = -eIm13 + (oRe13 * tRe115 + oIm13 * tRe13);
        out512[487] = resIm243_s;
        out512[539] = -resIm243_s;
        
        let oRe14 = out512[540];
        let oIm14 = out512[541];
        let eRe14 = out512[28];
        let eIm14 = out512[29];
        let tRe14 = 0.9852776527404785;
        let tRe114 = 0.1709618568420410;
        let resIm14_s = eIm14 + (oRe14 * tRe114 + oIm14 * tRe14);
        out512[29] = resIm14_s;
        out512[997] = -resIm14_s;
        let resRe14_s = eRe14 + (oRe14 * tRe14 - oIm14 * tRe114);
        out512[996] = resRe14_s;
        out512[28] = resRe14_s;
        let resRe242_s = eRe14 - (oRe14 * tRe14 - oIm14 * tRe114);
        out512[540] = resRe242_s;
        out512[484] = resRe242_s;
        let resIm242_s = -eIm14 + (oRe14 * tRe114 + oIm14 * tRe14);
        out512[485] = resIm242_s;
        out512[541] = -resIm242_s;
        
        let oRe15 = out512[542];
        let oIm15 = out512[543];
        let eRe15 = out512[30];
        let eIm15 = out512[31];
        let tRe15 = 0.9831054806709290;
        let tRe113 = 0.1830398887395859;
        let resIm15_s = eIm15 + (oRe15 * tRe113 + oIm15 * tRe15);
        out512[31] = resIm15_s;
        out512[995] = -resIm15_s;
        let resRe15_s = eRe15 + (oRe15 * tRe15 - oIm15 * tRe113);
        out512[994] = resRe15_s;
        out512[30] = resRe15_s;
        let resRe241_s = eRe15 - (oRe15 * tRe15 - oIm15 * tRe113);
        out512[542] = resRe241_s;
        out512[482] = resRe241_s;
        let resIm241_s = -eIm15 + (oRe15 * tRe113 + oIm15 * tRe15);
        out512[483] = resIm241_s;
        out512[543] = -resIm241_s;
        
        let oRe16 = out512[544];
        let oIm16 = out512[545];
        let eRe16 = out512[32];
        let eIm16 = out512[33];
        let tRe16 = 0.9807852506637573;
        let tRe112 = 0.1950903534889221;
        let resIm16_s = eIm16 + (oRe16 * tRe112 + oIm16 * tRe16);
        out512[33] = resIm16_s;
        out512[993] = -resIm16_s;
        let resRe16_s = eRe16 + (oRe16 * tRe16 - oIm16 * tRe112);
        out512[992] = resRe16_s;
        out512[32] = resRe16_s;
        let resRe240_s = eRe16 - (oRe16 * tRe16 - oIm16 * tRe112);
        out512[544] = resRe240_s;
        out512[480] = resRe240_s;
        let resIm240_s = -eIm16 + (oRe16 * tRe112 + oIm16 * tRe16);
        out512[481] = resIm240_s;
        out512[545] = -resIm240_s;
        
        let oRe17 = out512[546];
        let oIm17 = out512[547];
        let eRe17 = out512[34];
        let eIm17 = out512[35];
        let tRe17 = 0.9783173799514771;
        let tRe111 = 0.2071113288402557;
        let resIm17_s = eIm17 + (oRe17 * tRe111 + oIm17 * tRe17);
        out512[35] = resIm17_s;
        out512[991] = -resIm17_s;
        let resRe17_s = eRe17 + (oRe17 * tRe17 - oIm17 * tRe111);
        out512[990] = resRe17_s;
        out512[34] = resRe17_s;
        let resRe239_s = eRe17 - (oRe17 * tRe17 - oIm17 * tRe111);
        out512[546] = resRe239_s;
        out512[478] = resRe239_s;
        let resIm239_s = -eIm17 + (oRe17 * tRe111 + oIm17 * tRe17);
        out512[479] = resIm239_s;
        out512[547] = -resIm239_s;
        
        let oRe18 = out512[548];
        let oIm18 = out512[549];
        let eRe18 = out512[36];
        let eIm18 = out512[37];
        let tRe18 = 0.9757021069526672;
        let tRe110 = 0.2191012203693390;
        let resIm18_s = eIm18 + (oRe18 * tRe110 + oIm18 * tRe18);
        out512[37] = resIm18_s;
        out512[989] = -resIm18_s;
        let resRe18_s = eRe18 + (oRe18 * tRe18 - oIm18 * tRe110);
        out512[988] = resRe18_s;
        out512[36] = resRe18_s;
        let resRe238_s = eRe18 - (oRe18 * tRe18 - oIm18 * tRe110);
        out512[548] = resRe238_s;
        out512[476] = resRe238_s;
        let resIm238_s = -eIm18 + (oRe18 * tRe110 + oIm18 * tRe18);
        out512[477] = resIm238_s;
        out512[549] = -resIm238_s;
        
        let oRe19 = out512[550];
        let oIm19 = out512[551];
        let eRe19 = out512[38];
        let eIm19 = out512[39];
        let tRe19 = 0.9729399681091309;
        let tRe109 = 0.2310581356287003;
        let resIm19_s = eIm19 + (oRe19 * tRe109 + oIm19 * tRe19);
        out512[39] = resIm19_s;
        out512[987] = -resIm19_s;
        let resRe19_s = eRe19 + (oRe19 * tRe19 - oIm19 * tRe109);
        out512[986] = resRe19_s;
        out512[38] = resRe19_s;
        let resRe237_s = eRe19 - (oRe19 * tRe19 - oIm19 * tRe109);
        out512[550] = resRe237_s;
        out512[474] = resRe237_s;
        let resIm237_s = -eIm19 + (oRe19 * tRe109 + oIm19 * tRe19);
        out512[475] = resIm237_s;
        out512[551] = -resIm237_s;
        
        let oRe20 = out512[552];
        let oIm20 = out512[553];
        let eRe20 = out512[40];
        let eIm20 = out512[41];
        let tRe20 = 0.9700312614440918;
        let tRe108 = 0.2429802417755127;
        let resIm20_s = eIm20 + (oRe20 * tRe108 + oIm20 * tRe20);
        out512[41] = resIm20_s;
        out512[985] = -resIm20_s;
        let resRe20_s = eRe20 + (oRe20 * tRe20 - oIm20 * tRe108);
        out512[984] = resRe20_s;
        out512[40] = resRe20_s;
        let resRe236_s = eRe20 - (oRe20 * tRe20 - oIm20 * tRe108);
        out512[552] = resRe236_s;
        out512[472] = resRe236_s;
        let resIm236_s = -eIm20 + (oRe20 * tRe108 + oIm20 * tRe20);
        out512[473] = resIm236_s;
        out512[553] = -resIm236_s;
        
        let oRe21 = out512[554];
        let oIm21 = out512[555];
        let eRe21 = out512[42];
        let eIm21 = out512[43];
        let tRe21 = 0.9669764637947083;
        let tRe107 = 0.2548656463623047;
        let resIm21_s = eIm21 + (oRe21 * tRe107 + oIm21 * tRe21);
        out512[43] = resIm21_s;
        out512[983] = -resIm21_s;
        let resRe21_s = eRe21 + (oRe21 * tRe21 - oIm21 * tRe107);
        out512[982] = resRe21_s;
        out512[42] = resRe21_s;
        let resRe235_s = eRe21 - (oRe21 * tRe21 - oIm21 * tRe107);
        out512[554] = resRe235_s;
        out512[470] = resRe235_s;
        let resIm235_s = -eIm21 + (oRe21 * tRe107 + oIm21 * tRe21);
        out512[471] = resIm235_s;
        out512[555] = -resIm235_s;
        
        let oRe22 = out512[556];
        let oIm22 = out512[557];
        let eRe22 = out512[44];
        let eIm22 = out512[45];
        let tRe22 = 0.9637760519981384;
        let tRe106 = 0.2667127549648285;
        let resIm22_s = eIm22 + (oRe22 * tRe106 + oIm22 * tRe22);
        out512[45] = resIm22_s;
        out512[981] = -resIm22_s;
        let resRe22_s = eRe22 + (oRe22 * tRe22 - oIm22 * tRe106);
        out512[980] = resRe22_s;
        out512[44] = resRe22_s;
        let resRe234_s = eRe22 - (oRe22 * tRe22 - oIm22 * tRe106);
        out512[556] = resRe234_s;
        out512[468] = resRe234_s;
        let resIm234_s = -eIm22 + (oRe22 * tRe106 + oIm22 * tRe22);
        out512[469] = resIm234_s;
        out512[557] = -resIm234_s;
        
        let oRe23 = out512[558];
        let oIm23 = out512[559];
        let eRe23 = out512[46];
        let eIm23 = out512[47];
        let tRe23 = 0.9604305028915405;
        let tRe105 = 0.2785197198390961;
        let resIm23_s = eIm23 + (oRe23 * tRe105 + oIm23 * tRe23);
        out512[47] = resIm23_s;
        out512[979] = -resIm23_s;
        let resRe23_s = eRe23 + (oRe23 * tRe23 - oIm23 * tRe105);
        out512[978] = resRe23_s;
        out512[46] = resRe23_s;
        let resRe233_s = eRe23 - (oRe23 * tRe23 - oIm23 * tRe105);
        out512[558] = resRe233_s;
        out512[466] = resRe233_s;
        let resIm233_s = -eIm23 + (oRe23 * tRe105 + oIm23 * tRe23);
        out512[467] = resIm233_s;
        out512[559] = -resIm233_s;
        
        let oRe24 = out512[560];
        let oIm24 = out512[561];
        let eRe24 = out512[48];
        let eIm24 = out512[49];
        let tRe24 = 0.9569403529167175;
        let tRe104 = 0.2902846336364746;
        let resIm24_s = eIm24 + (oRe24 * tRe104 + oIm24 * tRe24);
        out512[49] = resIm24_s;
        out512[977] = -resIm24_s;
        let resRe24_s = eRe24 + (oRe24 * tRe24 - oIm24 * tRe104);
        out512[976] = resRe24_s;
        out512[48] = resRe24_s;
        let resRe232_s = eRe24 - (oRe24 * tRe24 - oIm24 * tRe104);
        out512[560] = resRe232_s;
        out512[464] = resRe232_s;
        let resIm232_s = -eIm24 + (oRe24 * tRe104 + oIm24 * tRe24);
        out512[465] = resIm232_s;
        out512[561] = -resIm232_s;
        
        let oRe25 = out512[562];
        let oIm25 = out512[563];
        let eRe25 = out512[50];
        let eIm25 = out512[51];
        let tRe25 = 0.9533060193061829;
        let tRe103 = 0.3020059466362000;
        let resIm25_s = eIm25 + (oRe25 * tRe103 + oIm25 * tRe25);
        out512[51] = resIm25_s;
        out512[975] = -resIm25_s;
        let resRe25_s = eRe25 + (oRe25 * tRe25 - oIm25 * tRe103);
        out512[974] = resRe25_s;
        out512[50] = resRe25_s;
        let resRe231_s = eRe25 - (oRe25 * tRe25 - oIm25 * tRe103);
        out512[562] = resRe231_s;
        out512[462] = resRe231_s;
        let resIm231_s = -eIm25 + (oRe25 * tRe103 + oIm25 * tRe25);
        out512[463] = resIm231_s;
        out512[563] = -resIm231_s;
        
        let oRe26 = out512[564];
        let oIm26 = out512[565];
        let eRe26 = out512[52];
        let eIm26 = out512[53];
        let tRe26 = 0.9495281577110291;
        let tRe102 = 0.3136817514896393;
        let resIm26_s = eIm26 + (oRe26 * tRe102 + oIm26 * tRe26);
        out512[53] = resIm26_s;
        out512[973] = -resIm26_s;
        let resRe26_s = eRe26 + (oRe26 * tRe26 - oIm26 * tRe102);
        out512[972] = resRe26_s;
        out512[52] = resRe26_s;
        let resRe230_s = eRe26 - (oRe26 * tRe26 - oIm26 * tRe102);
        out512[564] = resRe230_s;
        out512[460] = resRe230_s;
        let resIm230_s = -eIm26 + (oRe26 * tRe102 + oIm26 * tRe26);
        out512[461] = resIm230_s;
        out512[565] = -resIm230_s;
        
        let oRe27 = out512[566];
        let oIm27 = out512[567];
        let eRe27 = out512[54];
        let eIm27 = out512[55];
        let tRe27 = 0.9456073045730591;
        let tRe101 = 0.3253102302551270;
        let resIm27_s = eIm27 + (oRe27 * tRe101 + oIm27 * tRe27);
        out512[55] = resIm27_s;
        out512[971] = -resIm27_s;
        let resRe27_s = eRe27 + (oRe27 * tRe27 - oIm27 * tRe101);
        out512[970] = resRe27_s;
        out512[54] = resRe27_s;
        let resRe229_s = eRe27 - (oRe27 * tRe27 - oIm27 * tRe101);
        out512[566] = resRe229_s;
        out512[458] = resRe229_s;
        let resIm229_s = -eIm27 + (oRe27 * tRe101 + oIm27 * tRe27);
        out512[459] = resIm229_s;
        out512[567] = -resIm229_s;
        
        let oRe28 = out512[568];
        let oIm28 = out512[569];
        let eRe28 = out512[56];
        let eIm28 = out512[57];
        let tRe28 = 0.9415440559387207;
        let tRe100 = 0.3368898332118988;
        let resIm28_s = eIm28 + (oRe28 * tRe100 + oIm28 * tRe28);
        out512[57] = resIm28_s;
        out512[969] = -resIm28_s;
        let resRe28_s = eRe28 + (oRe28 * tRe28 - oIm28 * tRe100);
        out512[968] = resRe28_s;
        out512[56] = resRe28_s;
        let resRe228_s = eRe28 - (oRe28 * tRe28 - oIm28 * tRe100);
        out512[568] = resRe228_s;
        out512[456] = resRe228_s;
        let resIm228_s = -eIm28 + (oRe28 * tRe100 + oIm28 * tRe28);
        out512[457] = resIm228_s;
        out512[569] = -resIm228_s;
        
        let oRe29 = out512[570];
        let oIm29 = out512[571];
        let eRe29 = out512[58];
        let eIm29 = out512[59];
        let tRe29 = 0.9373390078544617;
        let tRe99 = 0.3484186828136444;
        let resIm29_s = eIm29 + (oRe29 * tRe99 + oIm29 * tRe29);
        out512[59] = resIm29_s;
        out512[967] = -resIm29_s;
        let resRe29_s = eRe29 + (oRe29 * tRe29 - oIm29 * tRe99);
        out512[966] = resRe29_s;
        out512[58] = resRe29_s;
        let resRe227_s = eRe29 - (oRe29 * tRe29 - oIm29 * tRe99);
        out512[570] = resRe227_s;
        out512[454] = resRe227_s;
        let resIm227_s = -eIm29 + (oRe29 * tRe99 + oIm29 * tRe29);
        out512[455] = resIm227_s;
        out512[571] = -resIm227_s;
        
        let oRe30 = out512[572];
        let oIm30 = out512[573];
        let eRe30 = out512[60];
        let eIm30 = out512[61];
        let tRe30 = 0.9329928159713745;
        let tRe98 = 0.3598950803279877;
        let resIm30_s = eIm30 + (oRe30 * tRe98 + oIm30 * tRe30);
        out512[61] = resIm30_s;
        out512[965] = -resIm30_s;
        let resRe30_s = eRe30 + (oRe30 * tRe30 - oIm30 * tRe98);
        out512[964] = resRe30_s;
        out512[60] = resRe30_s;
        let resRe226_s = eRe30 - (oRe30 * tRe30 - oIm30 * tRe98);
        out512[572] = resRe226_s;
        out512[452] = resRe226_s;
        let resIm226_s = -eIm30 + (oRe30 * tRe98 + oIm30 * tRe30);
        out512[453] = resIm226_s;
        out512[573] = -resIm226_s;
        
        let oRe31 = out512[574];
        let oIm31 = out512[575];
        let eRe31 = out512[62];
        let eIm31 = out512[63];
        let tRe31 = 0.9285060763359070;
        let tRe97 = 0.3713171482086182;
        let resIm31_s = eIm31 + (oRe31 * tRe97 + oIm31 * tRe31);
        out512[63] = resIm31_s;
        out512[963] = -resIm31_s;
        let resRe31_s = eRe31 + (oRe31 * tRe31 - oIm31 * tRe97);
        out512[962] = resRe31_s;
        out512[62] = resRe31_s;
        let resRe225_s = eRe31 - (oRe31 * tRe31 - oIm31 * tRe97);
        out512[574] = resRe225_s;
        out512[450] = resRe225_s;
        let resIm225_s = -eIm31 + (oRe31 * tRe97 + oIm31 * tRe31);
        out512[451] = resIm225_s;
        out512[575] = -resIm225_s;
        
        let oRe32 = out512[576];
        let oIm32 = out512[577];
        let eRe32 = out512[64];
        let eIm32 = out512[65];
        let tRe32 = 0.9238795042037964;
        let tRe96 = 0.3826834261417389;
        let resIm32_s = eIm32 + (oRe32 * tRe96 + oIm32 * tRe32);
        out512[65] = resIm32_s;
        out512[961] = -resIm32_s;
        let resRe32_s = eRe32 + (oRe32 * tRe32 - oIm32 * tRe96);
        out512[960] = resRe32_s;
        out512[64] = resRe32_s;
        let resRe224_s = eRe32 - (oRe32 * tRe32 - oIm32 * tRe96);
        out512[576] = resRe224_s;
        out512[448] = resRe224_s;
        let resIm224_s = -eIm32 + (oRe32 * tRe96 + oIm32 * tRe32);
        out512[449] = resIm224_s;
        out512[577] = -resIm224_s;
        
        let oRe33 = out512[578];
        let oIm33 = out512[579];
        let eRe33 = out512[66];
        let eIm33 = out512[67];
        let tRe33 = 0.9191138744354248;
        let tRe95 = 0.3939920663833618;
        let resIm33_s = eIm33 + (oRe33 * tRe95 + oIm33 * tRe33);
        out512[67] = resIm33_s;
        out512[959] = -resIm33_s;
        let resRe33_s = eRe33 + (oRe33 * tRe33 - oIm33 * tRe95);
        out512[958] = resRe33_s;
        out512[66] = resRe33_s;
        let resRe223_s = eRe33 - (oRe33 * tRe33 - oIm33 * tRe95);
        out512[578] = resRe223_s;
        out512[446] = resRe223_s;
        let resIm223_s = -eIm33 + (oRe33 * tRe95 + oIm33 * tRe33);
        out512[447] = resIm223_s;
        out512[579] = -resIm223_s;
        
        let oRe34 = out512[580];
        let oIm34 = out512[581];
        let eRe34 = out512[68];
        let eIm34 = out512[69];
        let tRe34 = 0.9142097830772400;
        let tRe94 = 0.4052412807941437;
        let resIm34_s = eIm34 + (oRe34 * tRe94 + oIm34 * tRe34);
        out512[69] = resIm34_s;
        out512[957] = -resIm34_s;
        let resRe34_s = eRe34 + (oRe34 * tRe34 - oIm34 * tRe94);
        out512[956] = resRe34_s;
        out512[68] = resRe34_s;
        let resRe222_s = eRe34 - (oRe34 * tRe34 - oIm34 * tRe94);
        out512[580] = resRe222_s;
        out512[444] = resRe222_s;
        let resIm222_s = -eIm34 + (oRe34 * tRe94 + oIm34 * tRe34);
        out512[445] = resIm222_s;
        out512[581] = -resIm222_s;
        
        let oRe35 = out512[582];
        let oIm35 = out512[583];
        let eRe35 = out512[70];
        let eIm35 = out512[71];
        let tRe35 = 0.9091680049896240;
        let tRe93 = 0.4164295494556427;
        let resIm35_s = eIm35 + (oRe35 * tRe93 + oIm35 * tRe35);
        out512[71] = resIm35_s;
        out512[955] = -resIm35_s;
        let resRe35_s = eRe35 + (oRe35 * tRe35 - oIm35 * tRe93);
        out512[954] = resRe35_s;
        out512[70] = resRe35_s;
        let resRe221_s = eRe35 - (oRe35 * tRe35 - oIm35 * tRe93);
        out512[582] = resRe221_s;
        out512[442] = resRe221_s;
        let resIm221_s = -eIm35 + (oRe35 * tRe93 + oIm35 * tRe35);
        out512[443] = resIm221_s;
        out512[583] = -resIm221_s;
        
        let oRe36 = out512[584];
        let oIm36 = out512[585];
        let eRe36 = out512[72];
        let eIm36 = out512[73];
        let tRe36 = 0.9039893150329590;
        let tRe92 = 0.4275551140308380;
        let resIm36_s = eIm36 + (oRe36 * tRe92 + oIm36 * tRe36);
        out512[73] = resIm36_s;
        out512[953] = -resIm36_s;
        let resRe36_s = eRe36 + (oRe36 * tRe36 - oIm36 * tRe92);
        out512[952] = resRe36_s;
        out512[72] = resRe36_s;
        let resRe220_s = eRe36 - (oRe36 * tRe36 - oIm36 * tRe92);
        out512[584] = resRe220_s;
        out512[440] = resRe220_s;
        let resIm220_s = -eIm36 + (oRe36 * tRe92 + oIm36 * tRe36);
        out512[441] = resIm220_s;
        out512[585] = -resIm220_s;
        
        let oRe37 = out512[586];
        let oIm37 = out512[587];
        let eRe37 = out512[74];
        let eIm37 = out512[75];
        let tRe37 = 0.8986744880676270;
        let tRe91 = 0.4386162757873535;
        let resIm37_s = eIm37 + (oRe37 * tRe91 + oIm37 * tRe37);
        out512[75] = resIm37_s;
        out512[951] = -resIm37_s;
        let resRe37_s = eRe37 + (oRe37 * tRe37 - oIm37 * tRe91);
        out512[950] = resRe37_s;
        out512[74] = resRe37_s;
        let resRe219_s = eRe37 - (oRe37 * tRe37 - oIm37 * tRe91);
        out512[586] = resRe219_s;
        out512[438] = resRe219_s;
        let resIm219_s = -eIm37 + (oRe37 * tRe91 + oIm37 * tRe37);
        out512[439] = resIm219_s;
        out512[587] = -resIm219_s;
        
        let oRe38 = out512[588];
        let oIm38 = out512[589];
        let eRe38 = out512[76];
        let eIm38 = out512[77];
        let tRe38 = 0.8932242989540100;
        let tRe90 = 0.4496113061904907;
        let resIm38_s = eIm38 + (oRe38 * tRe90 + oIm38 * tRe38);
        out512[77] = resIm38_s;
        out512[949] = -resIm38_s;
        let resRe38_s = eRe38 + (oRe38 * tRe38 - oIm38 * tRe90);
        out512[948] = resRe38_s;
        out512[76] = resRe38_s;
        let resRe218_s = eRe38 - (oRe38 * tRe38 - oIm38 * tRe90);
        out512[588] = resRe218_s;
        out512[436] = resRe218_s;
        let resIm218_s = -eIm38 + (oRe38 * tRe90 + oIm38 * tRe38);
        out512[437] = resIm218_s;
        out512[589] = -resIm218_s;
        
        let oRe39 = out512[590];
        let oIm39 = out512[591];
        let eRe39 = out512[78];
        let eIm39 = out512[79];
        let tRe39 = 0.8876396417617798;
        let tRe89 = 0.4605387151241302;
        let resIm39_s = eIm39 + (oRe39 * tRe89 + oIm39 * tRe39);
        out512[79] = resIm39_s;
        out512[947] = -resIm39_s;
        let resRe39_s = eRe39 + (oRe39 * tRe39 - oIm39 * tRe89);
        out512[946] = resRe39_s;
        out512[78] = resRe39_s;
        let resRe217_s = eRe39 - (oRe39 * tRe39 - oIm39 * tRe89);
        out512[590] = resRe217_s;
        out512[434] = resRe217_s;
        let resIm217_s = -eIm39 + (oRe39 * tRe89 + oIm39 * tRe39);
        out512[435] = resIm217_s;
        out512[591] = -resIm217_s;
        
        let oRe40 = out512[592];
        let oIm40 = out512[593];
        let eRe40 = out512[80];
        let eIm40 = out512[81];
        let tRe40 = 0.8819212913513184;
        let tRe88 = 0.4713967740535736;
        let resIm40_s = eIm40 + (oRe40 * tRe88 + oIm40 * tRe40);
        out512[81] = resIm40_s;
        out512[945] = -resIm40_s;
        let resRe40_s = eRe40 + (oRe40 * tRe40 - oIm40 * tRe88);
        out512[944] = resRe40_s;
        out512[80] = resRe40_s;
        let resRe216_s = eRe40 - (oRe40 * tRe40 - oIm40 * tRe88);
        out512[592] = resRe216_s;
        out512[432] = resRe216_s;
        let resIm216_s = -eIm40 + (oRe40 * tRe88 + oIm40 * tRe40);
        out512[433] = resIm216_s;
        out512[593] = -resIm216_s;
        
        let oRe41 = out512[594];
        let oIm41 = out512[595];
        let eRe41 = out512[82];
        let eIm41 = out512[83];
        let tRe41 = 0.8760700821876526;
        let tRe87 = 0.4821837246417999;
        let resIm41_s = eIm41 + (oRe41 * tRe87 + oIm41 * tRe41);
        out512[83] = resIm41_s;
        out512[943] = -resIm41_s;
        let resRe41_s = eRe41 + (oRe41 * tRe41 - oIm41 * tRe87);
        out512[942] = resRe41_s;
        out512[82] = resRe41_s;
        let resRe215_s = eRe41 - (oRe41 * tRe41 - oIm41 * tRe87);
        out512[594] = resRe215_s;
        out512[430] = resRe215_s;
        let resIm215_s = -eIm41 + (oRe41 * tRe87 + oIm41 * tRe41);
        out512[431] = resIm215_s;
        out512[595] = -resIm215_s;
        
        let oRe42 = out512[596];
        let oIm42 = out512[597];
        let eRe42 = out512[84];
        let eIm42 = out512[85];
        let tRe42 = 0.8700870275497437;
        let tRe86 = 0.4928981959819794;
        let resIm42_s = eIm42 + (oRe42 * tRe86 + oIm42 * tRe42);
        out512[85] = resIm42_s;
        out512[941] = -resIm42_s;
        let resRe42_s = eRe42 + (oRe42 * tRe42 - oIm42 * tRe86);
        out512[940] = resRe42_s;
        out512[84] = resRe42_s;
        let resRe214_s = eRe42 - (oRe42 * tRe42 - oIm42 * tRe86);
        out512[596] = resRe214_s;
        out512[428] = resRe214_s;
        let resIm214_s = -eIm42 + (oRe42 * tRe86 + oIm42 * tRe42);
        out512[429] = resIm214_s;
        out512[597] = -resIm214_s;
        
        let oRe43 = out512[598];
        let oIm43 = out512[599];
        let eRe43 = out512[86];
        let eIm43 = out512[87];
        let tRe43 = 0.8639728426933289;
        let tRe85 = 0.5035384297370911;
        let resIm43_s = eIm43 + (oRe43 * tRe85 + oIm43 * tRe43);
        out512[87] = resIm43_s;
        out512[939] = -resIm43_s;
        let resRe43_s = eRe43 + (oRe43 * tRe43 - oIm43 * tRe85);
        out512[938] = resRe43_s;
        out512[86] = resRe43_s;
        let resRe213_s = eRe43 - (oRe43 * tRe43 - oIm43 * tRe85);
        out512[598] = resRe213_s;
        out512[426] = resRe213_s;
        let resIm213_s = -eIm43 + (oRe43 * tRe85 + oIm43 * tRe43);
        out512[427] = resIm213_s;
        out512[599] = -resIm213_s;
        
        let oRe44 = out512[600];
        let oIm44 = out512[601];
        let eRe44 = out512[88];
        let eIm44 = out512[89];
        let tRe44 = 0.8577286005020142;
        let tRe84 = 0.5141028165817261;
        let resIm44_s = eIm44 + (oRe44 * tRe84 + oIm44 * tRe44);
        out512[89] = resIm44_s;
        out512[937] = -resIm44_s;
        let resRe44_s = eRe44 + (oRe44 * tRe44 - oIm44 * tRe84);
        out512[936] = resRe44_s;
        out512[88] = resRe44_s;
        let resRe212_s = eRe44 - (oRe44 * tRe44 - oIm44 * tRe84);
        out512[600] = resRe212_s;
        out512[424] = resRe212_s;
        let resIm212_s = -eIm44 + (oRe44 * tRe84 + oIm44 * tRe44);
        out512[425] = resIm212_s;
        out512[601] = -resIm212_s;
        
        let oRe45 = out512[602];
        let oIm45 = out512[603];
        let eRe45 = out512[90];
        let eIm45 = out512[91];
        let tRe45 = 0.8513551950454712;
        let tRe83 = 0.5245896577835083;
        let resIm45_s = eIm45 + (oRe45 * tRe83 + oIm45 * tRe45);
        out512[91] = resIm45_s;
        out512[935] = -resIm45_s;
        let resRe45_s = eRe45 + (oRe45 * tRe45 - oIm45 * tRe83);
        out512[934] = resRe45_s;
        out512[90] = resRe45_s;
        let resRe211_s = eRe45 - (oRe45 * tRe45 - oIm45 * tRe83);
        out512[602] = resRe211_s;
        out512[422] = resRe211_s;
        let resIm211_s = -eIm45 + (oRe45 * tRe83 + oIm45 * tRe45);
        out512[423] = resIm211_s;
        out512[603] = -resIm211_s;
        
        let oRe46 = out512[604];
        let oIm46 = out512[605];
        let eRe46 = out512[92];
        let eIm46 = out512[93];
        let tRe46 = 0.8448535799980164;
        let tRe82 = 0.5349976420402527;
        let resIm46_s = eIm46 + (oRe46 * tRe82 + oIm46 * tRe46);
        out512[93] = resIm46_s;
        out512[933] = -resIm46_s;
        let resRe46_s = eRe46 + (oRe46 * tRe46 - oIm46 * tRe82);
        out512[932] = resRe46_s;
        out512[92] = resRe46_s;
        let resRe210_s = eRe46 - (oRe46 * tRe46 - oIm46 * tRe82);
        out512[604] = resRe210_s;
        out512[420] = resRe210_s;
        let resIm210_s = -eIm46 + (oRe46 * tRe82 + oIm46 * tRe46);
        out512[421] = resIm210_s;
        out512[605] = -resIm210_s;
        
        let oRe47 = out512[606];
        let oIm47 = out512[607];
        let eRe47 = out512[94];
        let eIm47 = out512[95];
        let tRe47 = 0.8382247090339661;
        let tRe81 = 0.5453249812126160;
        let resIm47_s = eIm47 + (oRe47 * tRe81 + oIm47 * tRe47);
        out512[95] = resIm47_s;
        out512[931] = -resIm47_s;
        let resRe47_s = eRe47 + (oRe47 * tRe47 - oIm47 * tRe81);
        out512[930] = resRe47_s;
        out512[94] = resRe47_s;
        let resRe209_s = eRe47 - (oRe47 * tRe47 - oIm47 * tRe81);
        out512[606] = resRe209_s;
        out512[418] = resRe209_s;
        let resIm209_s = -eIm47 + (oRe47 * tRe81 + oIm47 * tRe47);
        out512[419] = resIm209_s;
        out512[607] = -resIm209_s;
        
        let oRe48 = out512[608];
        let oIm48 = out512[609];
        let eRe48 = out512[96];
        let eIm48 = out512[97];
        let tRe48 = 0.8314695954322815;
        let tRe80 = 0.5555702447891235;
        let resIm48_s = eIm48 + (oRe48 * tRe80 + oIm48 * tRe48);
        out512[97] = resIm48_s;
        out512[929] = -resIm48_s;
        let resRe48_s = eRe48 + (oRe48 * tRe48 - oIm48 * tRe80);
        out512[928] = resRe48_s;
        out512[96] = resRe48_s;
        let resRe208_s = eRe48 - (oRe48 * tRe48 - oIm48 * tRe80);
        out512[608] = resRe208_s;
        out512[416] = resRe208_s;
        let resIm208_s = -eIm48 + (oRe48 * tRe80 + oIm48 * tRe48);
        out512[417] = resIm208_s;
        out512[609] = -resIm208_s;
        
        let oRe49 = out512[610];
        let oIm49 = out512[611];
        let eRe49 = out512[98];
        let eIm49 = out512[99];
        let tRe49 = 0.8245893120765686;
        let tRe79 = 0.5657318234443665;
        let resIm49_s = eIm49 + (oRe49 * tRe79 + oIm49 * tRe49);
        out512[99] = resIm49_s;
        out512[927] = -resIm49_s;
        let resRe49_s = eRe49 + (oRe49 * tRe49 - oIm49 * tRe79);
        out512[926] = resRe49_s;
        out512[98] = resRe49_s;
        let resRe207_s = eRe49 - (oRe49 * tRe49 - oIm49 * tRe79);
        out512[610] = resRe207_s;
        out512[414] = resRe207_s;
        let resIm207_s = -eIm49 + (oRe49 * tRe79 + oIm49 * tRe49);
        out512[415] = resIm207_s;
        out512[611] = -resIm207_s;
        
        let oRe50 = out512[612];
        let oIm50 = out512[613];
        let eRe50 = out512[100];
        let eIm50 = out512[101];
        let tRe50 = 0.8175848126411438;
        let tRe78 = 0.5758082270622253;
        let resIm50_s = eIm50 + (oRe50 * tRe78 + oIm50 * tRe50);
        out512[101] = resIm50_s;
        out512[925] = -resIm50_s;
        let resRe50_s = eRe50 + (oRe50 * tRe50 - oIm50 * tRe78);
        out512[924] = resRe50_s;
        out512[100] = resRe50_s;
        let resRe206_s = eRe50 - (oRe50 * tRe50 - oIm50 * tRe78);
        out512[612] = resRe206_s;
        out512[412] = resRe206_s;
        let resIm206_s = -eIm50 + (oRe50 * tRe78 + oIm50 * tRe50);
        out512[413] = resIm206_s;
        out512[613] = -resIm206_s;
        
        let oRe51 = out512[614];
        let oIm51 = out512[615];
        let eRe51 = out512[102];
        let eIm51 = out512[103];
        let tRe51 = 0.8104572296142578;
        let tRe77 = 0.5857978463172913;
        let resIm51_s = eIm51 + (oRe51 * tRe77 + oIm51 * tRe51);
        out512[103] = resIm51_s;
        out512[923] = -resIm51_s;
        let resRe51_s = eRe51 + (oRe51 * tRe51 - oIm51 * tRe77);
        out512[922] = resRe51_s;
        out512[102] = resRe51_s;
        let resRe205_s = eRe51 - (oRe51 * tRe51 - oIm51 * tRe77);
        out512[614] = resRe205_s;
        out512[410] = resRe205_s;
        let resIm205_s = -eIm51 + (oRe51 * tRe77 + oIm51 * tRe51);
        out512[411] = resIm205_s;
        out512[615] = -resIm205_s;
        
        let oRe52 = out512[616];
        let oIm52 = out512[617];
        let eRe52 = out512[104];
        let eIm52 = out512[105];
        let tRe52 = 0.8032075166702271;
        let tRe76 = 0.5956993103027344;
        let resIm52_s = eIm52 + (oRe52 * tRe76 + oIm52 * tRe52);
        out512[105] = resIm52_s;
        out512[921] = -resIm52_s;
        let resRe52_s = eRe52 + (oRe52 * tRe52 - oIm52 * tRe76);
        out512[920] = resRe52_s;
        out512[104] = resRe52_s;
        let resRe204_s = eRe52 - (oRe52 * tRe52 - oIm52 * tRe76);
        out512[616] = resRe204_s;
        out512[408] = resRe204_s;
        let resIm204_s = -eIm52 + (oRe52 * tRe76 + oIm52 * tRe52);
        out512[409] = resIm204_s;
        out512[617] = -resIm204_s;
        
        let oRe53 = out512[618];
        let oIm53 = out512[619];
        let eRe53 = out512[106];
        let eIm53 = out512[107];
        let tRe53 = 0.7958369255065918;
        let tRe75 = 0.6055110692977905;
        let resIm53_s = eIm53 + (oRe53 * tRe75 + oIm53 * tRe53);
        out512[107] = resIm53_s;
        out512[919] = -resIm53_s;
        let resRe53_s = eRe53 + (oRe53 * tRe53 - oIm53 * tRe75);
        out512[918] = resRe53_s;
        out512[106] = resRe53_s;
        let resRe203_s = eRe53 - (oRe53 * tRe53 - oIm53 * tRe75);
        out512[618] = resRe203_s;
        out512[406] = resRe203_s;
        let resIm203_s = -eIm53 + (oRe53 * tRe75 + oIm53 * tRe53);
        out512[407] = resIm203_s;
        out512[619] = -resIm203_s;
        
        let oRe54 = out512[620];
        let oIm54 = out512[621];
        let eRe54 = out512[108];
        let eIm54 = out512[109];
        let tRe54 = 0.7883464694023132;
        let tRe74 = 0.6152315735816956;
        let resIm54_s = eIm54 + (oRe54 * tRe74 + oIm54 * tRe54);
        out512[109] = resIm54_s;
        out512[917] = -resIm54_s;
        let resRe54_s = eRe54 + (oRe54 * tRe54 - oIm54 * tRe74);
        out512[916] = resRe54_s;
        out512[108] = resRe54_s;
        let resRe202_s = eRe54 - (oRe54 * tRe54 - oIm54 * tRe74);
        out512[620] = resRe202_s;
        out512[404] = resRe202_s;
        let resIm202_s = -eIm54 + (oRe54 * tRe74 + oIm54 * tRe54);
        out512[405] = resIm202_s;
        out512[621] = -resIm202_s;
        
        let oRe55 = out512[622];
        let oIm55 = out512[623];
        let eRe55 = out512[110];
        let eIm55 = out512[111];
        let tRe55 = 0.7807372212409973;
        let tRe73 = 0.6248595118522644;
        let resIm55_s = eIm55 + (oRe55 * tRe73 + oIm55 * tRe55);
        out512[111] = resIm55_s;
        out512[915] = -resIm55_s;
        let resRe55_s = eRe55 + (oRe55 * tRe55 - oIm55 * tRe73);
        out512[914] = resRe55_s;
        out512[110] = resRe55_s;
        let resRe201_s = eRe55 - (oRe55 * tRe55 - oIm55 * tRe73);
        out512[622] = resRe201_s;
        out512[402] = resRe201_s;
        let resIm201_s = -eIm55 + (oRe55 * tRe73 + oIm55 * tRe55);
        out512[403] = resIm201_s;
        out512[623] = -resIm201_s;
        
        let oRe56 = out512[624];
        let oIm56 = out512[625];
        let eRe56 = out512[112];
        let eIm56 = out512[113];
        let tRe56 = 0.7730104923248291;
        let tRe72 = 0.6343932747840881;
        let resIm56_s = eIm56 + (oRe56 * tRe72 + oIm56 * tRe56);
        out512[113] = resIm56_s;
        out512[913] = -resIm56_s;
        let resRe56_s = eRe56 + (oRe56 * tRe56 - oIm56 * tRe72);
        out512[912] = resRe56_s;
        out512[112] = resRe56_s;
        let resRe200_s = eRe56 - (oRe56 * tRe56 - oIm56 * tRe72);
        out512[624] = resRe200_s;
        out512[400] = resRe200_s;
        let resIm200_s = -eIm56 + (oRe56 * tRe72 + oIm56 * tRe56);
        out512[401] = resIm200_s;
        out512[625] = -resIm200_s;
        
        let oRe57 = out512[626];
        let oIm57 = out512[627];
        let eRe57 = out512[114];
        let eIm57 = out512[115];
        let tRe57 = 0.7651672363281250;
        let tRe71 = 0.6438315510749817;
        let resIm57_s = eIm57 + (oRe57 * tRe71 + oIm57 * tRe57);
        out512[115] = resIm57_s;
        out512[911] = -resIm57_s;
        let resRe57_s = eRe57 + (oRe57 * tRe57 - oIm57 * tRe71);
        out512[910] = resRe57_s;
        out512[114] = resRe57_s;
        let resRe199_s = eRe57 - (oRe57 * tRe57 - oIm57 * tRe71);
        out512[626] = resRe199_s;
        out512[398] = resRe199_s;
        let resIm199_s = -eIm57 + (oRe57 * tRe71 + oIm57 * tRe57);
        out512[399] = resIm199_s;
        out512[627] = -resIm199_s;
        
        let oRe58 = out512[628];
        let oIm58 = out512[629];
        let eRe58 = out512[116];
        let eIm58 = out512[117];
        let tRe58 = 0.7572088241577148;
        let tRe70 = 0.6531728506088257;
        let resIm58_s = eIm58 + (oRe58 * tRe70 + oIm58 * tRe58);
        out512[117] = resIm58_s;
        out512[909] = -resIm58_s;
        let resRe58_s = eRe58 + (oRe58 * tRe58 - oIm58 * tRe70);
        out512[908] = resRe58_s;
        out512[116] = resRe58_s;
        let resRe198_s = eRe58 - (oRe58 * tRe58 - oIm58 * tRe70);
        out512[628] = resRe198_s;
        out512[396] = resRe198_s;
        let resIm198_s = -eIm58 + (oRe58 * tRe70 + oIm58 * tRe58);
        out512[397] = resIm198_s;
        out512[629] = -resIm198_s;
        
        let oRe59 = out512[630];
        let oIm59 = out512[631];
        let eRe59 = out512[118];
        let eIm59 = out512[119];
        let tRe59 = 0.7491363883018494;
        let tRe69 = 0.6624157428741455;
        let resIm59_s = eIm59 + (oRe59 * tRe69 + oIm59 * tRe59);
        out512[119] = resIm59_s;
        out512[907] = -resIm59_s;
        let resRe59_s = eRe59 + (oRe59 * tRe59 - oIm59 * tRe69);
        out512[906] = resRe59_s;
        out512[118] = resRe59_s;
        let resRe197_s = eRe59 - (oRe59 * tRe59 - oIm59 * tRe69);
        out512[630] = resRe197_s;
        out512[394] = resRe197_s;
        let resIm197_s = -eIm59 + (oRe59 * tRe69 + oIm59 * tRe59);
        out512[395] = resIm197_s;
        out512[631] = -resIm197_s;
        
        let oRe60 = out512[632];
        let oIm60 = out512[633];
        let eRe60 = out512[120];
        let eIm60 = out512[121];
        let tRe60 = 0.7409511208534241;
        let tRe68 = 0.6715589761734009;
        let resIm60_s = eIm60 + (oRe60 * tRe68 + oIm60 * tRe60);
        out512[121] = resIm60_s;
        out512[905] = -resIm60_s;
        let resRe60_s = eRe60 + (oRe60 * tRe60 - oIm60 * tRe68);
        out512[904] = resRe60_s;
        out512[120] = resRe60_s;
        let resRe196_s = eRe60 - (oRe60 * tRe60 - oIm60 * tRe68);
        out512[632] = resRe196_s;
        out512[392] = resRe196_s;
        let resIm196_s = -eIm60 + (oRe60 * tRe68 + oIm60 * tRe60);
        out512[393] = resIm196_s;
        out512[633] = -resIm196_s;
        
        let oRe61 = out512[634];
        let oIm61 = out512[635];
        let eRe61 = out512[122];
        let eIm61 = out512[123];
        let tRe61 = 0.7326542735099792;
        let tRe67 = 0.6806010007858276;
        let resIm61_s = eIm61 + (oRe61 * tRe67 + oIm61 * tRe61);
        out512[123] = resIm61_s;
        out512[903] = -resIm61_s;
        let resRe61_s = eRe61 + (oRe61 * tRe61 - oIm61 * tRe67);
        out512[902] = resRe61_s;
        out512[122] = resRe61_s;
        let resRe195_s = eRe61 - (oRe61 * tRe61 - oIm61 * tRe67);
        out512[634] = resRe195_s;
        out512[390] = resRe195_s;
        let resIm195_s = -eIm61 + (oRe61 * tRe67 + oIm61 * tRe61);
        out512[391] = resIm195_s;
        out512[635] = -resIm195_s;
        
        let oRe62 = out512[636];
        let oIm62 = out512[637];
        let eRe62 = out512[124];
        let eIm62 = out512[125];
        let tRe62 = 0.7242470979690552;
        let tRe66 = 0.6895405650138855;
        let resIm62_s = eIm62 + (oRe62 * tRe66 + oIm62 * tRe62);
        out512[125] = resIm62_s;
        out512[901] = -resIm62_s;
        let resRe62_s = eRe62 + (oRe62 * tRe62 - oIm62 * tRe66);
        out512[900] = resRe62_s;
        out512[124] = resRe62_s;
        let resRe194_s = eRe62 - (oRe62 * tRe62 - oIm62 * tRe66);
        out512[636] = resRe194_s;
        out512[388] = resRe194_s;
        let resIm194_s = -eIm62 + (oRe62 * tRe66 + oIm62 * tRe62);
        out512[389] = resIm194_s;
        out512[637] = -resIm194_s;
        
        let oRe63 = out512[638];
        let oIm63 = out512[639];
        let eRe63 = out512[126];
        let eIm63 = out512[127];
        let tRe63 = 0.7157308459281921;
        let tRe65 = 0.6983762383460999;
        let resIm63_s = eIm63 + (oRe63 * tRe65 + oIm63 * tRe63);
        out512[127] = resIm63_s;
        out512[899] = -resIm63_s;
        let resRe63_s = eRe63 + (oRe63 * tRe63 - oIm63 * tRe65);
        out512[898] = resRe63_s;
        out512[126] = resRe63_s;
        let resRe193_s = eRe63 - (oRe63 * tRe63 - oIm63 * tRe65);
        out512[638] = resRe193_s;
        out512[386] = resRe193_s;
        let resIm193_s = -eIm63 + (oRe63 * tRe65 + oIm63 * tRe63);
        out512[387] = resIm193_s;
        out512[639] = -resIm193_s;
        
        let oRe64 = out512[640];
        let oIm64 = out512[641];
        let eRe64 = out512[128];
        let eIm64 = out512[129];
        let tRe64 = 0.7071067690849304;
        let resIm64_s = eIm64 + (oRe64 * tRe64 + oIm64 * tRe64);
        out512[129] = resIm64_s;
        out512[897] = -resIm64_s;
        let resRe64_s = eRe64 + (oRe64 * tRe64 - oIm64 * tRe64);
        out512[896] = resRe64_s;
        out512[128] = resRe64_s;
        let resRe192_s = eRe64 - (oRe64 * tRe64 - oIm64 * tRe64);
        out512[640] = resRe192_s;
        out512[384] = resRe192_s;
        let resIm192_s = -eIm64 + (oRe64 * tRe64 + oIm64 * tRe64);
        out512[385] = resIm192_s;
        out512[641] = -resIm192_s;
        
        let oRe65 = out512[642];
        let oIm65 = out512[643];
        let eRe65 = out512[130];
        let eIm65 = out512[131];
        let resIm65_s = eIm65 + (oRe65 * tRe63 + oIm65 * tRe65);
        out512[131] = resIm65_s;
        out512[895] = -resIm65_s;
        let resRe65_s = eRe65 + (oRe65 * tRe65 - oIm65 * tRe63);
        out512[894] = resRe65_s;
        out512[130] = resRe65_s;
        let resRe191_s = eRe65 - (oRe65 * tRe65 - oIm65 * tRe63);
        out512[642] = resRe191_s;
        out512[382] = resRe191_s;
        let resIm191_s = -eIm65 + (oRe65 * tRe63 + oIm65 * tRe65);
        out512[383] = resIm191_s;
        out512[643] = -resIm191_s;
        
        let oRe66 = out512[644];
        let oIm66 = out512[645];
        let eRe66 = out512[132];
        let eIm66 = out512[133];
        let resIm66_s = eIm66 + (oRe66 * tRe62 + oIm66 * tRe66);
        out512[133] = resIm66_s;
        out512[893] = -resIm66_s;
        let resRe66_s = eRe66 + (oRe66 * tRe66 - oIm66 * tRe62);
        out512[892] = resRe66_s;
        out512[132] = resRe66_s;
        let resRe190_s = eRe66 - (oRe66 * tRe66 - oIm66 * tRe62);
        out512[644] = resRe190_s;
        out512[380] = resRe190_s;
        let resIm190_s = -eIm66 + (oRe66 * tRe62 + oIm66 * tRe66);
        out512[381] = resIm190_s;
        out512[645] = -resIm190_s;
        
        let oRe67 = out512[646];
        let oIm67 = out512[647];
        let eRe67 = out512[134];
        let eIm67 = out512[135];
        let resIm67_s = eIm67 + (oRe67 * tRe61 + oIm67 * tRe67);
        out512[135] = resIm67_s;
        out512[891] = -resIm67_s;
        let resRe67_s = eRe67 + (oRe67 * tRe67 - oIm67 * tRe61);
        out512[890] = resRe67_s;
        out512[134] = resRe67_s;
        let resRe189_s = eRe67 - (oRe67 * tRe67 - oIm67 * tRe61);
        out512[646] = resRe189_s;
        out512[378] = resRe189_s;
        let resIm189_s = -eIm67 + (oRe67 * tRe61 + oIm67 * tRe67);
        out512[379] = resIm189_s;
        out512[647] = -resIm189_s;
        
        let oRe68 = out512[648];
        let oIm68 = out512[649];
        let eRe68 = out512[136];
        let eIm68 = out512[137];
        let resIm68_s = eIm68 + (oRe68 * tRe60 + oIm68 * tRe68);
        out512[137] = resIm68_s;
        out512[889] = -resIm68_s;
        let resRe68_s = eRe68 + (oRe68 * tRe68 - oIm68 * tRe60);
        out512[888] = resRe68_s;
        out512[136] = resRe68_s;
        let resRe188_s = eRe68 - (oRe68 * tRe68 - oIm68 * tRe60);
        out512[648] = resRe188_s;
        out512[376] = resRe188_s;
        let resIm188_s = -eIm68 + (oRe68 * tRe60 + oIm68 * tRe68);
        out512[377] = resIm188_s;
        out512[649] = -resIm188_s;
        
        let oRe69 = out512[650];
        let oIm69 = out512[651];
        let eRe69 = out512[138];
        let eIm69 = out512[139];
        let resIm69_s = eIm69 + (oRe69 * tRe59 + oIm69 * tRe69);
        out512[139] = resIm69_s;
        out512[887] = -resIm69_s;
        let resRe69_s = eRe69 + (oRe69 * tRe69 - oIm69 * tRe59);
        out512[886] = resRe69_s;
        out512[138] = resRe69_s;
        let resRe187_s = eRe69 - (oRe69 * tRe69 - oIm69 * tRe59);
        out512[650] = resRe187_s;
        out512[374] = resRe187_s;
        let resIm187_s = -eIm69 + (oRe69 * tRe59 + oIm69 * tRe69);
        out512[375] = resIm187_s;
        out512[651] = -resIm187_s;
        
        let oRe70 = out512[652];
        let oIm70 = out512[653];
        let eRe70 = out512[140];
        let eIm70 = out512[141];
        let resIm70_s = eIm70 + (oRe70 * tRe58 + oIm70 * tRe70);
        out512[141] = resIm70_s;
        out512[885] = -resIm70_s;
        let resRe70_s = eRe70 + (oRe70 * tRe70 - oIm70 * tRe58);
        out512[884] = resRe70_s;
        out512[140] = resRe70_s;
        let resRe186_s = eRe70 - (oRe70 * tRe70 - oIm70 * tRe58);
        out512[652] = resRe186_s;
        out512[372] = resRe186_s;
        let resIm186_s = -eIm70 + (oRe70 * tRe58 + oIm70 * tRe70);
        out512[373] = resIm186_s;
        out512[653] = -resIm186_s;
        
        let oRe71 = out512[654];
        let oIm71 = out512[655];
        let eRe71 = out512[142];
        let eIm71 = out512[143];
        let resIm71_s = eIm71 + (oRe71 * tRe57 + oIm71 * tRe71);
        out512[143] = resIm71_s;
        out512[883] = -resIm71_s;
        let resRe71_s = eRe71 + (oRe71 * tRe71 - oIm71 * tRe57);
        out512[882] = resRe71_s;
        out512[142] = resRe71_s;
        let resRe185_s = eRe71 - (oRe71 * tRe71 - oIm71 * tRe57);
        out512[654] = resRe185_s;
        out512[370] = resRe185_s;
        let resIm185_s = -eIm71 + (oRe71 * tRe57 + oIm71 * tRe71);
        out512[371] = resIm185_s;
        out512[655] = -resIm185_s;
        
        let oRe72 = out512[656];
        let oIm72 = out512[657];
        let eRe72 = out512[144];
        let eIm72 = out512[145];
        let resIm72_s = eIm72 + (oRe72 * tRe56 + oIm72 * tRe72);
        out512[145] = resIm72_s;
        out512[881] = -resIm72_s;
        let resRe72_s = eRe72 + (oRe72 * tRe72 - oIm72 * tRe56);
        out512[880] = resRe72_s;
        out512[144] = resRe72_s;
        let resRe184_s = eRe72 - (oRe72 * tRe72 - oIm72 * tRe56);
        out512[656] = resRe184_s;
        out512[368] = resRe184_s;
        let resIm184_s = -eIm72 + (oRe72 * tRe56 + oIm72 * tRe72);
        out512[369] = resIm184_s;
        out512[657] = -resIm184_s;
        
        let oRe73 = out512[658];
        let oIm73 = out512[659];
        let eRe73 = out512[146];
        let eIm73 = out512[147];
        let resIm73_s = eIm73 + (oRe73 * tRe55 + oIm73 * tRe73);
        out512[147] = resIm73_s;
        out512[879] = -resIm73_s;
        let resRe73_s = eRe73 + (oRe73 * tRe73 - oIm73 * tRe55);
        out512[878] = resRe73_s;
        out512[146] = resRe73_s;
        let resRe183_s = eRe73 - (oRe73 * tRe73 - oIm73 * tRe55);
        out512[658] = resRe183_s;
        out512[366] = resRe183_s;
        let resIm183_s = -eIm73 + (oRe73 * tRe55 + oIm73 * tRe73);
        out512[367] = resIm183_s;
        out512[659] = -resIm183_s;
        
        let oRe74 = out512[660];
        let oIm74 = out512[661];
        let eRe74 = out512[148];
        let eIm74 = out512[149];
        let resIm74_s = eIm74 + (oRe74 * tRe54 + oIm74 * tRe74);
        out512[149] = resIm74_s;
        out512[877] = -resIm74_s;
        let resRe74_s = eRe74 + (oRe74 * tRe74 - oIm74 * tRe54);
        out512[876] = resRe74_s;
        out512[148] = resRe74_s;
        let resRe182_s = eRe74 - (oRe74 * tRe74 - oIm74 * tRe54);
        out512[660] = resRe182_s;
        out512[364] = resRe182_s;
        let resIm182_s = -eIm74 + (oRe74 * tRe54 + oIm74 * tRe74);
        out512[365] = resIm182_s;
        out512[661] = -resIm182_s;
        
        let oRe75 = out512[662];
        let oIm75 = out512[663];
        let eRe75 = out512[150];
        let eIm75 = out512[151];
        let resIm75_s = eIm75 + (oRe75 * tRe53 + oIm75 * tRe75);
        out512[151] = resIm75_s;
        out512[875] = -resIm75_s;
        let resRe75_s = eRe75 + (oRe75 * tRe75 - oIm75 * tRe53);
        out512[874] = resRe75_s;
        out512[150] = resRe75_s;
        let resRe181_s = eRe75 - (oRe75 * tRe75 - oIm75 * tRe53);
        out512[662] = resRe181_s;
        out512[362] = resRe181_s;
        let resIm181_s = -eIm75 + (oRe75 * tRe53 + oIm75 * tRe75);
        out512[363] = resIm181_s;
        out512[663] = -resIm181_s;
        
        let oRe76 = out512[664];
        let oIm76 = out512[665];
        let eRe76 = out512[152];
        let eIm76 = out512[153];
        let resIm76_s = eIm76 + (oRe76 * tRe52 + oIm76 * tRe76);
        out512[153] = resIm76_s;
        out512[873] = -resIm76_s;
        let resRe76_s = eRe76 + (oRe76 * tRe76 - oIm76 * tRe52);
        out512[872] = resRe76_s;
        out512[152] = resRe76_s;
        let resRe180_s = eRe76 - (oRe76 * tRe76 - oIm76 * tRe52);
        out512[664] = resRe180_s;
        out512[360] = resRe180_s;
        let resIm180_s = -eIm76 + (oRe76 * tRe52 + oIm76 * tRe76);
        out512[361] = resIm180_s;
        out512[665] = -resIm180_s;
        
        let oRe77 = out512[666];
        let oIm77 = out512[667];
        let eRe77 = out512[154];
        let eIm77 = out512[155];
        let resIm77_s = eIm77 + (oRe77 * tRe51 + oIm77 * tRe77);
        out512[155] = resIm77_s;
        out512[871] = -resIm77_s;
        let resRe77_s = eRe77 + (oRe77 * tRe77 - oIm77 * tRe51);
        out512[870] = resRe77_s;
        out512[154] = resRe77_s;
        let resRe179_s = eRe77 - (oRe77 * tRe77 - oIm77 * tRe51);
        out512[666] = resRe179_s;
        out512[358] = resRe179_s;
        let resIm179_s = -eIm77 + (oRe77 * tRe51 + oIm77 * tRe77);
        out512[359] = resIm179_s;
        out512[667] = -resIm179_s;
        
        let oRe78 = out512[668];
        let oIm78 = out512[669];
        let eRe78 = out512[156];
        let eIm78 = out512[157];
        let resIm78_s = eIm78 + (oRe78 * tRe50 + oIm78 * tRe78);
        out512[157] = resIm78_s;
        out512[869] = -resIm78_s;
        let resRe78_s = eRe78 + (oRe78 * tRe78 - oIm78 * tRe50);
        out512[868] = resRe78_s;
        out512[156] = resRe78_s;
        let resRe178_s = eRe78 - (oRe78 * tRe78 - oIm78 * tRe50);
        out512[668] = resRe178_s;
        out512[356] = resRe178_s;
        let resIm178_s = -eIm78 + (oRe78 * tRe50 + oIm78 * tRe78);
        out512[357] = resIm178_s;
        out512[669] = -resIm178_s;
        
        let oRe79 = out512[670];
        let oIm79 = out512[671];
        let eRe79 = out512[158];
        let eIm79 = out512[159];
        let resIm79_s = eIm79 + (oRe79 * tRe49 + oIm79 * tRe79);
        out512[159] = resIm79_s;
        out512[867] = -resIm79_s;
        let resRe79_s = eRe79 + (oRe79 * tRe79 - oIm79 * tRe49);
        out512[866] = resRe79_s;
        out512[158] = resRe79_s;
        let resRe177_s = eRe79 - (oRe79 * tRe79 - oIm79 * tRe49);
        out512[670] = resRe177_s;
        out512[354] = resRe177_s;
        let resIm177_s = -eIm79 + (oRe79 * tRe49 + oIm79 * tRe79);
        out512[355] = resIm177_s;
        out512[671] = -resIm177_s;
        
        let oRe80 = out512[672];
        let oIm80 = out512[673];
        let eRe80 = out512[160];
        let eIm80 = out512[161];
        let resIm80_s = eIm80 + (oRe80 * tRe48 + oIm80 * tRe80);
        out512[161] = resIm80_s;
        out512[865] = -resIm80_s;
        let resRe80_s = eRe80 + (oRe80 * tRe80 - oIm80 * tRe48);
        out512[864] = resRe80_s;
        out512[160] = resRe80_s;
        let resRe176_s = eRe80 - (oRe80 * tRe80 - oIm80 * tRe48);
        out512[672] = resRe176_s;
        out512[352] = resRe176_s;
        let resIm176_s = -eIm80 + (oRe80 * tRe48 + oIm80 * tRe80);
        out512[353] = resIm176_s;
        out512[673] = -resIm176_s;
        
        let oRe81 = out512[674];
        let oIm81 = out512[675];
        let eRe81 = out512[162];
        let eIm81 = out512[163];
        let resIm81_s = eIm81 + (oRe81 * tRe47 + oIm81 * tRe81);
        out512[163] = resIm81_s;
        out512[863] = -resIm81_s;
        let resRe81_s = eRe81 + (oRe81 * tRe81 - oIm81 * tRe47);
        out512[862] = resRe81_s;
        out512[162] = resRe81_s;
        let resRe175_s = eRe81 - (oRe81 * tRe81 - oIm81 * tRe47);
        out512[674] = resRe175_s;
        out512[350] = resRe175_s;
        let resIm175_s = -eIm81 + (oRe81 * tRe47 + oIm81 * tRe81);
        out512[351] = resIm175_s;
        out512[675] = -resIm175_s;
        
        let oRe82 = out512[676];
        let oIm82 = out512[677];
        let eRe82 = out512[164];
        let eIm82 = out512[165];
        let resIm82_s = eIm82 + (oRe82 * tRe46 + oIm82 * tRe82);
        out512[165] = resIm82_s;
        out512[861] = -resIm82_s;
        let resRe82_s = eRe82 + (oRe82 * tRe82 - oIm82 * tRe46);
        out512[860] = resRe82_s;
        out512[164] = resRe82_s;
        let resRe174_s = eRe82 - (oRe82 * tRe82 - oIm82 * tRe46);
        out512[676] = resRe174_s;
        out512[348] = resRe174_s;
        let resIm174_s = -eIm82 + (oRe82 * tRe46 + oIm82 * tRe82);
        out512[349] = resIm174_s;
        out512[677] = -resIm174_s;
        
        let oRe83 = out512[678];
        let oIm83 = out512[679];
        let eRe83 = out512[166];
        let eIm83 = out512[167];
        let resIm83_s = eIm83 + (oRe83 * tRe45 + oIm83 * tRe83);
        out512[167] = resIm83_s;
        out512[859] = -resIm83_s;
        let resRe83_s = eRe83 + (oRe83 * tRe83 - oIm83 * tRe45);
        out512[858] = resRe83_s;
        out512[166] = resRe83_s;
        let resRe173_s = eRe83 - (oRe83 * tRe83 - oIm83 * tRe45);
        out512[678] = resRe173_s;
        out512[346] = resRe173_s;
        let resIm173_s = -eIm83 + (oRe83 * tRe45 + oIm83 * tRe83);
        out512[347] = resIm173_s;
        out512[679] = -resIm173_s;
        
        let oRe84 = out512[680];
        let oIm84 = out512[681];
        let eRe84 = out512[168];
        let eIm84 = out512[169];
        let resIm84_s = eIm84 + (oRe84 * tRe44 + oIm84 * tRe84);
        out512[169] = resIm84_s;
        out512[857] = -resIm84_s;
        let resRe84_s = eRe84 + (oRe84 * tRe84 - oIm84 * tRe44);
        out512[856] = resRe84_s;
        out512[168] = resRe84_s;
        let resRe172_s = eRe84 - (oRe84 * tRe84 - oIm84 * tRe44);
        out512[680] = resRe172_s;
        out512[344] = resRe172_s;
        let resIm172_s = -eIm84 + (oRe84 * tRe44 + oIm84 * tRe84);
        out512[345] = resIm172_s;
        out512[681] = -resIm172_s;
        
        let oRe85 = out512[682];
        let oIm85 = out512[683];
        let eRe85 = out512[170];
        let eIm85 = out512[171];
        let resIm85_s = eIm85 + (oRe85 * tRe43 + oIm85 * tRe85);
        out512[171] = resIm85_s;
        out512[855] = -resIm85_s;
        let resRe85_s = eRe85 + (oRe85 * tRe85 - oIm85 * tRe43);
        out512[854] = resRe85_s;
        out512[170] = resRe85_s;
        let resRe171_s = eRe85 - (oRe85 * tRe85 - oIm85 * tRe43);
        out512[682] = resRe171_s;
        out512[342] = resRe171_s;
        let resIm171_s = -eIm85 + (oRe85 * tRe43 + oIm85 * tRe85);
        out512[343] = resIm171_s;
        out512[683] = -resIm171_s;
        
        let oRe86 = out512[684];
        let oIm86 = out512[685];
        let eRe86 = out512[172];
        let eIm86 = out512[173];
        let resIm86_s = eIm86 + (oRe86 * tRe42 + oIm86 * tRe86);
        out512[173] = resIm86_s;
        out512[853] = -resIm86_s;
        let resRe86_s = eRe86 + (oRe86 * tRe86 - oIm86 * tRe42);
        out512[852] = resRe86_s;
        out512[172] = resRe86_s;
        let resRe170_s = eRe86 - (oRe86 * tRe86 - oIm86 * tRe42);
        out512[684] = resRe170_s;
        out512[340] = resRe170_s;
        let resIm170_s = -eIm86 + (oRe86 * tRe42 + oIm86 * tRe86);
        out512[341] = resIm170_s;
        out512[685] = -resIm170_s;
        
        let oRe87 = out512[686];
        let oIm87 = out512[687];
        let eRe87 = out512[174];
        let eIm87 = out512[175];
        let resIm87_s = eIm87 + (oRe87 * tRe41 + oIm87 * tRe87);
        out512[175] = resIm87_s;
        out512[851] = -resIm87_s;
        let resRe87_s = eRe87 + (oRe87 * tRe87 - oIm87 * tRe41);
        out512[850] = resRe87_s;
        out512[174] = resRe87_s;
        let resRe169_s = eRe87 - (oRe87 * tRe87 - oIm87 * tRe41);
        out512[686] = resRe169_s;
        out512[338] = resRe169_s;
        let resIm169_s = -eIm87 + (oRe87 * tRe41 + oIm87 * tRe87);
        out512[339] = resIm169_s;
        out512[687] = -resIm169_s;
        
        let oRe88 = out512[688];
        let oIm88 = out512[689];
        let eRe88 = out512[176];
        let eIm88 = out512[177];
        let resIm88_s = eIm88 + (oRe88 * tRe40 + oIm88 * tRe88);
        out512[177] = resIm88_s;
        out512[849] = -resIm88_s;
        let resRe88_s = eRe88 + (oRe88 * tRe88 - oIm88 * tRe40);
        out512[848] = resRe88_s;
        out512[176] = resRe88_s;
        let resRe168_s = eRe88 - (oRe88 * tRe88 - oIm88 * tRe40);
        out512[688] = resRe168_s;
        out512[336] = resRe168_s;
        let resIm168_s = -eIm88 + (oRe88 * tRe40 + oIm88 * tRe88);
        out512[337] = resIm168_s;
        out512[689] = -resIm168_s;
        
        let oRe89 = out512[690];
        let oIm89 = out512[691];
        let eRe89 = out512[178];
        let eIm89 = out512[179];
        let resIm89_s = eIm89 + (oRe89 * tRe39 + oIm89 * tRe89);
        out512[179] = resIm89_s;
        out512[847] = -resIm89_s;
        let resRe89_s = eRe89 + (oRe89 * tRe89 - oIm89 * tRe39);
        out512[846] = resRe89_s;
        out512[178] = resRe89_s;
        let resRe167_s = eRe89 - (oRe89 * tRe89 - oIm89 * tRe39);
        out512[690] = resRe167_s;
        out512[334] = resRe167_s;
        let resIm167_s = -eIm89 + (oRe89 * tRe39 + oIm89 * tRe89);
        out512[335] = resIm167_s;
        out512[691] = -resIm167_s;
        
        let oRe90 = out512[692];
        let oIm90 = out512[693];
        let eRe90 = out512[180];
        let eIm90 = out512[181];
        let resIm90_s = eIm90 + (oRe90 * tRe38 + oIm90 * tRe90);
        out512[181] = resIm90_s;
        out512[845] = -resIm90_s;
        let resRe90_s = eRe90 + (oRe90 * tRe90 - oIm90 * tRe38);
        out512[844] = resRe90_s;
        out512[180] = resRe90_s;
        let resRe166_s = eRe90 - (oRe90 * tRe90 - oIm90 * tRe38);
        out512[692] = resRe166_s;
        out512[332] = resRe166_s;
        let resIm166_s = -eIm90 + (oRe90 * tRe38 + oIm90 * tRe90);
        out512[333] = resIm166_s;
        out512[693] = -resIm166_s;
        
        let oRe91 = out512[694];
        let oIm91 = out512[695];
        let eRe91 = out512[182];
        let eIm91 = out512[183];
        let resIm91_s = eIm91 + (oRe91 * tRe37 + oIm91 * tRe91);
        out512[183] = resIm91_s;
        out512[843] = -resIm91_s;
        let resRe91_s = eRe91 + (oRe91 * tRe91 - oIm91 * tRe37);
        out512[842] = resRe91_s;
        out512[182] = resRe91_s;
        let resRe165_s = eRe91 - (oRe91 * tRe91 - oIm91 * tRe37);
        out512[694] = resRe165_s;
        out512[330] = resRe165_s;
        let resIm165_s = -eIm91 + (oRe91 * tRe37 + oIm91 * tRe91);
        out512[331] = resIm165_s;
        out512[695] = -resIm165_s;
        
        let oRe92 = out512[696];
        let oIm92 = out512[697];
        let eRe92 = out512[184];
        let eIm92 = out512[185];
        let resIm92_s = eIm92 + (oRe92 * tRe36 + oIm92 * tRe92);
        out512[185] = resIm92_s;
        out512[841] = -resIm92_s;
        let resRe92_s = eRe92 + (oRe92 * tRe92 - oIm92 * tRe36);
        out512[840] = resRe92_s;
        out512[184] = resRe92_s;
        let resRe164_s = eRe92 - (oRe92 * tRe92 - oIm92 * tRe36);
        out512[696] = resRe164_s;
        out512[328] = resRe164_s;
        let resIm164_s = -eIm92 + (oRe92 * tRe36 + oIm92 * tRe92);
        out512[329] = resIm164_s;
        out512[697] = -resIm164_s;
        
        let oRe93 = out512[698];
        let oIm93 = out512[699];
        let eRe93 = out512[186];
        let eIm93 = out512[187];
        let resIm93_s = eIm93 + (oRe93 * tRe35 + oIm93 * tRe93);
        out512[187] = resIm93_s;
        out512[839] = -resIm93_s;
        let resRe93_s = eRe93 + (oRe93 * tRe93 - oIm93 * tRe35);
        out512[838] = resRe93_s;
        out512[186] = resRe93_s;
        let resRe163_s = eRe93 - (oRe93 * tRe93 - oIm93 * tRe35);
        out512[698] = resRe163_s;
        out512[326] = resRe163_s;
        let resIm163_s = -eIm93 + (oRe93 * tRe35 + oIm93 * tRe93);
        out512[327] = resIm163_s;
        out512[699] = -resIm163_s;
        
        let oRe94 = out512[700];
        let oIm94 = out512[701];
        let eRe94 = out512[188];
        let eIm94 = out512[189];
        let resIm94_s = eIm94 + (oRe94 * tRe34 + oIm94 * tRe94);
        out512[189] = resIm94_s;
        out512[837] = -resIm94_s;
        let resRe94_s = eRe94 + (oRe94 * tRe94 - oIm94 * tRe34);
        out512[836] = resRe94_s;
        out512[188] = resRe94_s;
        let resRe162_s = eRe94 - (oRe94 * tRe94 - oIm94 * tRe34);
        out512[700] = resRe162_s;
        out512[324] = resRe162_s;
        let resIm162_s = -eIm94 + (oRe94 * tRe34 + oIm94 * tRe94);
        out512[325] = resIm162_s;
        out512[701] = -resIm162_s;
        
        let oRe95 = out512[702];
        let oIm95 = out512[703];
        let eRe95 = out512[190];
        let eIm95 = out512[191];
        let resIm95_s = eIm95 + (oRe95 * tRe33 + oIm95 * tRe95);
        out512[191] = resIm95_s;
        out512[835] = -resIm95_s;
        let resRe95_s = eRe95 + (oRe95 * tRe95 - oIm95 * tRe33);
        out512[834] = resRe95_s;
        out512[190] = resRe95_s;
        let resRe161_s = eRe95 - (oRe95 * tRe95 - oIm95 * tRe33);
        out512[702] = resRe161_s;
        out512[322] = resRe161_s;
        let resIm161_s = -eIm95 + (oRe95 * tRe33 + oIm95 * tRe95);
        out512[323] = resIm161_s;
        out512[703] = -resIm161_s;
        
        let oRe96 = out512[704];
        let oIm96 = out512[705];
        let eRe96 = out512[192];
        let eIm96 = out512[193];
        let resIm96_s = eIm96 + (oRe96 * tRe32 + oIm96 * tRe96);
        out512[193] = resIm96_s;
        out512[833] = -resIm96_s;
        let resRe96_s = eRe96 + (oRe96 * tRe96 - oIm96 * tRe32);
        out512[832] = resRe96_s;
        out512[192] = resRe96_s;
        let resRe160_s = eRe96 - (oRe96 * tRe96 - oIm96 * tRe32);
        out512[704] = resRe160_s;
        out512[320] = resRe160_s;
        let resIm160_s = -eIm96 + (oRe96 * tRe32 + oIm96 * tRe96);
        out512[321] = resIm160_s;
        out512[705] = -resIm160_s;
        
        let oRe97 = out512[706];
        let oIm97 = out512[707];
        let eRe97 = out512[194];
        let eIm97 = out512[195];
        let resIm97_s = eIm97 + (oRe97 * tRe31 + oIm97 * tRe97);
        out512[195] = resIm97_s;
        out512[831] = -resIm97_s;
        let resRe97_s = eRe97 + (oRe97 * tRe97 - oIm97 * tRe31);
        out512[830] = resRe97_s;
        out512[194] = resRe97_s;
        let resRe159_s = eRe97 - (oRe97 * tRe97 - oIm97 * tRe31);
        out512[706] = resRe159_s;
        out512[318] = resRe159_s;
        let resIm159_s = -eIm97 + (oRe97 * tRe31 + oIm97 * tRe97);
        out512[319] = resIm159_s;
        out512[707] = -resIm159_s;
        
        let oRe98 = out512[708];
        let oIm98 = out512[709];
        let eRe98 = out512[196];
        let eIm98 = out512[197];
        let resIm98_s = eIm98 + (oRe98 * tRe30 + oIm98 * tRe98);
        out512[197] = resIm98_s;
        out512[829] = -resIm98_s;
        let resRe98_s = eRe98 + (oRe98 * tRe98 - oIm98 * tRe30);
        out512[828] = resRe98_s;
        out512[196] = resRe98_s;
        let resRe158_s = eRe98 - (oRe98 * tRe98 - oIm98 * tRe30);
        out512[708] = resRe158_s;
        out512[316] = resRe158_s;
        let resIm158_s = -eIm98 + (oRe98 * tRe30 + oIm98 * tRe98);
        out512[317] = resIm158_s;
        out512[709] = -resIm158_s;
        
        let oRe99 = out512[710];
        let oIm99 = out512[711];
        let eRe99 = out512[198];
        let eIm99 = out512[199];
        let resIm99_s = eIm99 + (oRe99 * tRe29 + oIm99 * tRe99);
        out512[199] = resIm99_s;
        out512[827] = -resIm99_s;
        let resRe99_s = eRe99 + (oRe99 * tRe99 - oIm99 * tRe29);
        out512[826] = resRe99_s;
        out512[198] = resRe99_s;
        let resRe157_s = eRe99 - (oRe99 * tRe99 - oIm99 * tRe29);
        out512[710] = resRe157_s;
        out512[314] = resRe157_s;
        let resIm157_s = -eIm99 + (oRe99 * tRe29 + oIm99 * tRe99);
        out512[315] = resIm157_s;
        out512[711] = -resIm157_s;
        
        let oRe100 = out512[712];
        let oIm100 = out512[713];
        let eRe100 = out512[200];
        let eIm100 = out512[201];
        let resIm100_s = eIm100 + (oRe100 * tRe28 + oIm100 * tRe100);
        out512[201] = resIm100_s;
        out512[825] = -resIm100_s;
        let resRe100_s = eRe100 + (oRe100 * tRe100 - oIm100 * tRe28);
        out512[824] = resRe100_s;
        out512[200] = resRe100_s;
        let resRe156_s = eRe100 - (oRe100 * tRe100 - oIm100 * tRe28);
        out512[712] = resRe156_s;
        out512[312] = resRe156_s;
        let resIm156_s = -eIm100 + (oRe100 * tRe28 + oIm100 * tRe100);
        out512[313] = resIm156_s;
        out512[713] = -resIm156_s;
        
        let oRe101 = out512[714];
        let oIm101 = out512[715];
        let eRe101 = out512[202];
        let eIm101 = out512[203];
        let resIm101_s = eIm101 + (oRe101 * tRe27 + oIm101 * tRe101);
        out512[203] = resIm101_s;
        out512[823] = -resIm101_s;
        let resRe101_s = eRe101 + (oRe101 * tRe101 - oIm101 * tRe27);
        out512[822] = resRe101_s;
        out512[202] = resRe101_s;
        let resRe155_s = eRe101 - (oRe101 * tRe101 - oIm101 * tRe27);
        out512[714] = resRe155_s;
        out512[310] = resRe155_s;
        let resIm155_s = -eIm101 + (oRe101 * tRe27 + oIm101 * tRe101);
        out512[311] = resIm155_s;
        out512[715] = -resIm155_s;
        
        let oRe102 = out512[716];
        let oIm102 = out512[717];
        let eRe102 = out512[204];
        let eIm102 = out512[205];
        let resIm102_s = eIm102 + (oRe102 * tRe26 + oIm102 * tRe102);
        out512[205] = resIm102_s;
        out512[821] = -resIm102_s;
        let resRe102_s = eRe102 + (oRe102 * tRe102 - oIm102 * tRe26);
        out512[820] = resRe102_s;
        out512[204] = resRe102_s;
        let resRe154_s = eRe102 - (oRe102 * tRe102 - oIm102 * tRe26);
        out512[716] = resRe154_s;
        out512[308] = resRe154_s;
        let resIm154_s = -eIm102 + (oRe102 * tRe26 + oIm102 * tRe102);
        out512[309] = resIm154_s;
        out512[717] = -resIm154_s;
        
        let oRe103 = out512[718];
        let oIm103 = out512[719];
        let eRe103 = out512[206];
        let eIm103 = out512[207];
        let resIm103_s = eIm103 + (oRe103 * tRe25 + oIm103 * tRe103);
        out512[207] = resIm103_s;
        out512[819] = -resIm103_s;
        let resRe103_s = eRe103 + (oRe103 * tRe103 - oIm103 * tRe25);
        out512[818] = resRe103_s;
        out512[206] = resRe103_s;
        let resRe153_s = eRe103 - (oRe103 * tRe103 - oIm103 * tRe25);
        out512[718] = resRe153_s;
        out512[306] = resRe153_s;
        let resIm153_s = -eIm103 + (oRe103 * tRe25 + oIm103 * tRe103);
        out512[307] = resIm153_s;
        out512[719] = -resIm153_s;
        
        let oRe104 = out512[720];
        let oIm104 = out512[721];
        let eRe104 = out512[208];
        let eIm104 = out512[209];
        let resIm104_s = eIm104 + (oRe104 * tRe24 + oIm104 * tRe104);
        out512[209] = resIm104_s;
        out512[817] = -resIm104_s;
        let resRe104_s = eRe104 + (oRe104 * tRe104 - oIm104 * tRe24);
        out512[816] = resRe104_s;
        out512[208] = resRe104_s;
        let resRe152_s = eRe104 - (oRe104 * tRe104 - oIm104 * tRe24);
        out512[720] = resRe152_s;
        out512[304] = resRe152_s;
        let resIm152_s = -eIm104 + (oRe104 * tRe24 + oIm104 * tRe104);
        out512[305] = resIm152_s;
        out512[721] = -resIm152_s;
        
        let oRe105 = out512[722];
        let oIm105 = out512[723];
        let eRe105 = out512[210];
        let eIm105 = out512[211];
        let resIm105_s = eIm105 + (oRe105 * tRe23 + oIm105 * tRe105);
        out512[211] = resIm105_s;
        out512[815] = -resIm105_s;
        let resRe105_s = eRe105 + (oRe105 * tRe105 - oIm105 * tRe23);
        out512[814] = resRe105_s;
        out512[210] = resRe105_s;
        let resRe151_s = eRe105 - (oRe105 * tRe105 - oIm105 * tRe23);
        out512[722] = resRe151_s;
        out512[302] = resRe151_s;
        let resIm151_s = -eIm105 + (oRe105 * tRe23 + oIm105 * tRe105);
        out512[303] = resIm151_s;
        out512[723] = -resIm151_s;
        
        let oRe106 = out512[724];
        let oIm106 = out512[725];
        let eRe106 = out512[212];
        let eIm106 = out512[213];
        let resIm106_s = eIm106 + (oRe106 * tRe22 + oIm106 * tRe106);
        out512[213] = resIm106_s;
        out512[813] = -resIm106_s;
        let resRe106_s = eRe106 + (oRe106 * tRe106 - oIm106 * tRe22);
        out512[812] = resRe106_s;
        out512[212] = resRe106_s;
        let resRe150_s = eRe106 - (oRe106 * tRe106 - oIm106 * tRe22);
        out512[724] = resRe150_s;
        out512[300] = resRe150_s;
        let resIm150_s = -eIm106 + (oRe106 * tRe22 + oIm106 * tRe106);
        out512[301] = resIm150_s;
        out512[725] = -resIm150_s;
        
        let oRe107 = out512[726];
        let oIm107 = out512[727];
        let eRe107 = out512[214];
        let eIm107 = out512[215];
        let resIm107_s = eIm107 + (oRe107 * tRe21 + oIm107 * tRe107);
        out512[215] = resIm107_s;
        out512[811] = -resIm107_s;
        let resRe107_s = eRe107 + (oRe107 * tRe107 - oIm107 * tRe21);
        out512[810] = resRe107_s;
        out512[214] = resRe107_s;
        let resRe149_s = eRe107 - (oRe107 * tRe107 - oIm107 * tRe21);
        out512[726] = resRe149_s;
        out512[298] = resRe149_s;
        let resIm149_s = -eIm107 + (oRe107 * tRe21 + oIm107 * tRe107);
        out512[299] = resIm149_s;
        out512[727] = -resIm149_s;
        
        let oRe108 = out512[728];
        let oIm108 = out512[729];
        let eRe108 = out512[216];
        let eIm108 = out512[217];
        let resIm108_s = eIm108 + (oRe108 * tRe20 + oIm108 * tRe108);
        out512[217] = resIm108_s;
        out512[809] = -resIm108_s;
        let resRe108_s = eRe108 + (oRe108 * tRe108 - oIm108 * tRe20);
        out512[808] = resRe108_s;
        out512[216] = resRe108_s;
        let resRe148_s = eRe108 - (oRe108 * tRe108 - oIm108 * tRe20);
        out512[728] = resRe148_s;
        out512[296] = resRe148_s;
        let resIm148_s = -eIm108 + (oRe108 * tRe20 + oIm108 * tRe108);
        out512[297] = resIm148_s;
        out512[729] = -resIm148_s;
        
        let oRe109 = out512[730];
        let oIm109 = out512[731];
        let eRe109 = out512[218];
        let eIm109 = out512[219];
        let resIm109_s = eIm109 + (oRe109 * tRe19 + oIm109 * tRe109);
        out512[219] = resIm109_s;
        out512[807] = -resIm109_s;
        let resRe109_s = eRe109 + (oRe109 * tRe109 - oIm109 * tRe19);
        out512[806] = resRe109_s;
        out512[218] = resRe109_s;
        let resRe147_s = eRe109 - (oRe109 * tRe109 - oIm109 * tRe19);
        out512[730] = resRe147_s;
        out512[294] = resRe147_s;
        let resIm147_s = -eIm109 + (oRe109 * tRe19 + oIm109 * tRe109);
        out512[295] = resIm147_s;
        out512[731] = -resIm147_s;
        
        let oRe110 = out512[732];
        let oIm110 = out512[733];
        let eRe110 = out512[220];
        let eIm110 = out512[221];
        let resIm110_s = eIm110 + (oRe110 * tRe18 + oIm110 * tRe110);
        out512[221] = resIm110_s;
        out512[805] = -resIm110_s;
        let resRe110_s = eRe110 + (oRe110 * tRe110 - oIm110 * tRe18);
        out512[804] = resRe110_s;
        out512[220] = resRe110_s;
        let resRe146_s = eRe110 - (oRe110 * tRe110 - oIm110 * tRe18);
        out512[732] = resRe146_s;
        out512[292] = resRe146_s;
        let resIm146_s = -eIm110 + (oRe110 * tRe18 + oIm110 * tRe110);
        out512[293] = resIm146_s;
        out512[733] = -resIm146_s;
        
        let oRe111 = out512[734];
        let oIm111 = out512[735];
        let eRe111 = out512[222];
        let eIm111 = out512[223];
        let resIm111_s = eIm111 + (oRe111 * tRe17 + oIm111 * tRe111);
        out512[223] = resIm111_s;
        out512[803] = -resIm111_s;
        let resRe111_s = eRe111 + (oRe111 * tRe111 - oIm111 * tRe17);
        out512[802] = resRe111_s;
        out512[222] = resRe111_s;
        let resRe145_s = eRe111 - (oRe111 * tRe111 - oIm111 * tRe17);
        out512[734] = resRe145_s;
        out512[290] = resRe145_s;
        let resIm145_s = -eIm111 + (oRe111 * tRe17 + oIm111 * tRe111);
        out512[291] = resIm145_s;
        out512[735] = -resIm145_s;
        
        let oRe112 = out512[736];
        let oIm112 = out512[737];
        let eRe112 = out512[224];
        let eIm112 = out512[225];
        let resIm112_s = eIm112 + (oRe112 * tRe16 + oIm112 * tRe112);
        out512[225] = resIm112_s;
        out512[801] = -resIm112_s;
        let resRe112_s = eRe112 + (oRe112 * tRe112 - oIm112 * tRe16);
        out512[800] = resRe112_s;
        out512[224] = resRe112_s;
        let resRe144_s = eRe112 - (oRe112 * tRe112 - oIm112 * tRe16);
        out512[736] = resRe144_s;
        out512[288] = resRe144_s;
        let resIm144_s = -eIm112 + (oRe112 * tRe16 + oIm112 * tRe112);
        out512[289] = resIm144_s;
        out512[737] = -resIm144_s;
        
        let oRe113 = out512[738];
        let oIm113 = out512[739];
        let eRe113 = out512[226];
        let eIm113 = out512[227];
        let resIm113_s = eIm113 + (oRe113 * tRe15 + oIm113 * tRe113);
        out512[227] = resIm113_s;
        out512[799] = -resIm113_s;
        let resRe113_s = eRe113 + (oRe113 * tRe113 - oIm113 * tRe15);
        out512[798] = resRe113_s;
        out512[226] = resRe113_s;
        let resRe143_s = eRe113 - (oRe113 * tRe113 - oIm113 * tRe15);
        out512[738] = resRe143_s;
        out512[286] = resRe143_s;
        let resIm143_s = -eIm113 + (oRe113 * tRe15 + oIm113 * tRe113);
        out512[287] = resIm143_s;
        out512[739] = -resIm143_s;
        
        let oRe114 = out512[740];
        let oIm114 = out512[741];
        let eRe114 = out512[228];
        let eIm114 = out512[229];
        let resIm114_s = eIm114 + (oRe114 * tRe14 + oIm114 * tRe114);
        out512[229] = resIm114_s;
        out512[797] = -resIm114_s;
        let resRe114_s = eRe114 + (oRe114 * tRe114 - oIm114 * tRe14);
        out512[796] = resRe114_s;
        out512[228] = resRe114_s;
        let resRe142_s = eRe114 - (oRe114 * tRe114 - oIm114 * tRe14);
        out512[740] = resRe142_s;
        out512[284] = resRe142_s;
        let resIm142_s = -eIm114 + (oRe114 * tRe14 + oIm114 * tRe114);
        out512[285] = resIm142_s;
        out512[741] = -resIm142_s;
        
        let oRe115 = out512[742];
        let oIm115 = out512[743];
        let eRe115 = out512[230];
        let eIm115 = out512[231];
        let resIm115_s = eIm115 + (oRe115 * tRe13 + oIm115 * tRe115);
        out512[231] = resIm115_s;
        out512[795] = -resIm115_s;
        let resRe115_s = eRe115 + (oRe115 * tRe115 - oIm115 * tRe13);
        out512[794] = resRe115_s;
        out512[230] = resRe115_s;
        let resRe141_s = eRe115 - (oRe115 * tRe115 - oIm115 * tRe13);
        out512[742] = resRe141_s;
        out512[282] = resRe141_s;
        let resIm141_s = -eIm115 + (oRe115 * tRe13 + oIm115 * tRe115);
        out512[283] = resIm141_s;
        out512[743] = -resIm141_s;
        
        let oRe116 = out512[744];
        let oIm116 = out512[745];
        let eRe116 = out512[232];
        let eIm116 = out512[233];
        let resIm116_s = eIm116 + (oRe116 * tRe12 + oIm116 * tRe116);
        out512[233] = resIm116_s;
        out512[793] = -resIm116_s;
        let resRe116_s = eRe116 + (oRe116 * tRe116 - oIm116 * tRe12);
        out512[792] = resRe116_s;
        out512[232] = resRe116_s;
        let resRe140_s = eRe116 - (oRe116 * tRe116 - oIm116 * tRe12);
        out512[744] = resRe140_s;
        out512[280] = resRe140_s;
        let resIm140_s = -eIm116 + (oRe116 * tRe12 + oIm116 * tRe116);
        out512[281] = resIm140_s;
        out512[745] = -resIm140_s;
        
        let oRe117 = out512[746];
        let oIm117 = out512[747];
        let eRe117 = out512[234];
        let eIm117 = out512[235];
        let resIm117_s = eIm117 + (oRe117 * tRe11 + oIm117 * tRe117);
        out512[235] = resIm117_s;
        out512[791] = -resIm117_s;
        let resRe117_s = eRe117 + (oRe117 * tRe117 - oIm117 * tRe11);
        out512[790] = resRe117_s;
        out512[234] = resRe117_s;
        let resRe139_s = eRe117 - (oRe117 * tRe117 - oIm117 * tRe11);
        out512[746] = resRe139_s;
        out512[278] = resRe139_s;
        let resIm139_s = -eIm117 + (oRe117 * tRe11 + oIm117 * tRe117);
        out512[279] = resIm139_s;
        out512[747] = -resIm139_s;
        
        let oRe118 = out512[748];
        let oIm118 = out512[749];
        let eRe118 = out512[236];
        let eIm118 = out512[237];
        let resIm118_s = eIm118 + (oRe118 * tRe10 + oIm118 * tRe118);
        out512[237] = resIm118_s;
        out512[789] = -resIm118_s;
        let resRe118_s = eRe118 + (oRe118 * tRe118 - oIm118 * tRe10);
        out512[788] = resRe118_s;
        out512[236] = resRe118_s;
        let resRe138_s = eRe118 - (oRe118 * tRe118 - oIm118 * tRe10);
        out512[748] = resRe138_s;
        out512[276] = resRe138_s;
        let resIm138_s = -eIm118 + (oRe118 * tRe10 + oIm118 * tRe118);
        out512[277] = resIm138_s;
        out512[749] = -resIm138_s;
        
        let oRe119 = out512[750];
        let oIm119 = out512[751];
        let eRe119 = out512[238];
        let eIm119 = out512[239];
        let resIm119_s = eIm119 + (oRe119 * tRe9 + oIm119 * tRe119);
        out512[239] = resIm119_s;
        out512[787] = -resIm119_s;
        let resRe119_s = eRe119 + (oRe119 * tRe119 - oIm119 * tRe9);
        out512[786] = resRe119_s;
        out512[238] = resRe119_s;
        let resRe137_s = eRe119 - (oRe119 * tRe119 - oIm119 * tRe9);
        out512[750] = resRe137_s;
        out512[274] = resRe137_s;
        let resIm137_s = -eIm119 + (oRe119 * tRe9 + oIm119 * tRe119);
        out512[275] = resIm137_s;
        out512[751] = -resIm137_s;
        
        let oRe120 = out512[752];
        let oIm120 = out512[753];
        let eRe120 = out512[240];
        let eIm120 = out512[241];
        let resIm120_s = eIm120 + (oRe120 * tRe8 + oIm120 * tRe120);
        out512[241] = resIm120_s;
        out512[785] = -resIm120_s;
        let resRe120_s = eRe120 + (oRe120 * tRe120 - oIm120 * tRe8);
        out512[784] = resRe120_s;
        out512[240] = resRe120_s;
        let resRe136_s = eRe120 - (oRe120 * tRe120 - oIm120 * tRe8);
        out512[752] = resRe136_s;
        out512[272] = resRe136_s;
        let resIm136_s = -eIm120 + (oRe120 * tRe8 + oIm120 * tRe120);
        out512[273] = resIm136_s;
        out512[753] = -resIm136_s;
        
        let oRe121 = out512[754];
        let oIm121 = out512[755];
        let eRe121 = out512[242];
        let eIm121 = out512[243];
        let resIm121_s = eIm121 + (oRe121 * tRe7 + oIm121 * tRe121);
        out512[243] = resIm121_s;
        out512[783] = -resIm121_s;
        let resRe121_s = eRe121 + (oRe121 * tRe121 - oIm121 * tRe7);
        out512[782] = resRe121_s;
        out512[242] = resRe121_s;
        let resRe135_s = eRe121 - (oRe121 * tRe121 - oIm121 * tRe7);
        out512[754] = resRe135_s;
        out512[270] = resRe135_s;
        let resIm135_s = -eIm121 + (oRe121 * tRe7 + oIm121 * tRe121);
        out512[271] = resIm135_s;
        out512[755] = -resIm135_s;
        
        let oRe122 = out512[756];
        let oIm122 = out512[757];
        let eRe122 = out512[244];
        let eIm122 = out512[245];
        let resIm122_s = eIm122 + (oRe122 * tRe6 + oIm122 * tRe122);
        out512[245] = resIm122_s;
        out512[781] = -resIm122_s;
        let resRe122_s = eRe122 + (oRe122 * tRe122 - oIm122 * tRe6);
        out512[780] = resRe122_s;
        out512[244] = resRe122_s;
        let resRe134_s = eRe122 - (oRe122 * tRe122 - oIm122 * tRe6);
        out512[756] = resRe134_s;
        out512[268] = resRe134_s;
        let resIm134_s = -eIm122 + (oRe122 * tRe6 + oIm122 * tRe122);
        out512[269] = resIm134_s;
        out512[757] = -resIm134_s;
        
        let oRe123 = out512[758];
        let oIm123 = out512[759];
        let eRe123 = out512[246];
        let eIm123 = out512[247];
        let resIm123_s = eIm123 + (oRe123 * tRe5 + oIm123 * tRe123);
        out512[247] = resIm123_s;
        out512[779] = -resIm123_s;
        let resRe123_s = eRe123 + (oRe123 * tRe123 - oIm123 * tRe5);
        out512[778] = resRe123_s;
        out512[246] = resRe123_s;
        let resRe133_s = eRe123 - (oRe123 * tRe123 - oIm123 * tRe5);
        out512[758] = resRe133_s;
        out512[266] = resRe133_s;
        let resIm133_s = -eIm123 + (oRe123 * tRe5 + oIm123 * tRe123);
        out512[267] = resIm133_s;
        out512[759] = -resIm133_s;
        
        let oRe124 = out512[760];
        let oIm124 = out512[761];
        let eRe124 = out512[248];
        let eIm124 = out512[249];
        let resIm124_s = eIm124 + (oRe124 * tRe4 + oIm124 * tRe124);
        out512[249] = resIm124_s;
        out512[777] = -resIm124_s;
        let resRe124_s = eRe124 + (oRe124 * tRe124 - oIm124 * tRe4);
        out512[776] = resRe124_s;
        out512[248] = resRe124_s;
        let resRe132_s = eRe124 - (oRe124 * tRe124 - oIm124 * tRe4);
        out512[760] = resRe132_s;
        out512[264] = resRe132_s;
        let resIm132_s = -eIm124 + (oRe124 * tRe4 + oIm124 * tRe124);
        out512[265] = resIm132_s;
        out512[761] = -resIm132_s;
        
        let oRe125 = out512[762];
        let oIm125 = out512[763];
        let eRe125 = out512[250];
        let eIm125 = out512[251];
        let resIm125_s = eIm125 + (oRe125 * tRe3 + oIm125 * tRe125);
        out512[251] = resIm125_s;
        out512[775] = -resIm125_s;
        let resRe125_s = eRe125 + (oRe125 * tRe125 - oIm125 * tRe3);
        out512[774] = resRe125_s;
        out512[250] = resRe125_s;
        let resRe131_s = eRe125 - (oRe125 * tRe125 - oIm125 * tRe3);
        out512[762] = resRe131_s;
        out512[262] = resRe131_s;
        let resIm131_s = -eIm125 + (oRe125 * tRe3 + oIm125 * tRe125);
        out512[263] = resIm131_s;
        out512[763] = -resIm131_s;
        
        let oRe126 = out512[764];
        let oIm126 = out512[765];
        let eRe126 = out512[252];
        let eIm126 = out512[253];
        let resIm126_s = eIm126 + (oRe126 * tRe2 + oIm126 * tRe126);
        out512[253] = resIm126_s;
        out512[773] = -resIm126_s;
        let resRe126_s = eRe126 + (oRe126 * tRe126 - oIm126 * tRe2);
        out512[772] = resRe126_s;
        out512[252] = resRe126_s;
        let resRe130_s = eRe126 - (oRe126 * tRe126 - oIm126 * tRe2);
        out512[764] = resRe130_s;
        out512[260] = resRe130_s;
        let resIm130_s = -eIm126 + (oRe126 * tRe2 + oIm126 * tRe126);
        out512[261] = resIm130_s;
        out512[765] = -resIm130_s;
        
        let oRe127 = out512[766];
        let oIm127 = out512[767];
        let eRe127 = out512[254];
        let eIm127 = out512[255];
        let resIm127_s = eIm127 + (oRe127 * tRe1 + oIm127 * tRe127);
        out512[255] = resIm127_s;
        out512[771] = -resIm127_s;
        let resRe127_s = eRe127 + (oRe127 * tRe127 - oIm127 * tRe1);
        out512[770] = resRe127_s;
        out512[254] = resRe127_s;
        let resRe129_s = eRe127 - (oRe127 * tRe127 - oIm127 * tRe1);
        out512[766] = resRe129_s;
        out512[258] = resRe129_s;
        let resIm129_s = -eIm127 + (oRe127 * tRe1 + oIm127 * tRe127);
        out512[259] = resIm129_s;
        out512[767] = -resIm129_s;
        
        let oRe128 = out512[768];
        let oIm128 = out512[769];
        let eRe128 = out512[256];
        let eIm128 = out512[257];
        let resIm128_s = eIm128 + oRe128;
        out512[257] = resIm128_s;
        out512[769] = -resIm128_s;
        let resRe128_s = eRe128 - oIm128;
        out512[768] = resRe128_s;
        out512[256] = resRe128_s;
        
    } 

    return out512;
} 

export {fftReal512}; 
